--- 1.32/BBS_ZMB.bbs	2023-05-24 20:54:53.964117026 +0200
+++ 1.33/BBS_ZMB.bbs	2023-08-23 04:23:08.379012013 +0200
@@ -1,7819 +1,7838 @@
 beginSubroutine: s32'PreInit' {
 	charaName: s16'zmb'
 } endSubroutine: 
 
 beginSubroutine: s32'PreInit2nd' {
 	copyVar: var(GTmpReg0), int(0)
 	ifNot: var(GTmpReg0) {
 		entryAction: s32'entry_default', s32'', 0
 		copyVar: var(GTmpReg0), int(1)
 		entrySubMemberPosition: 0, -280000, 165000, 0
 		entrySubMemberPosition: 1, -280000, -165000, 0
 	} endIf: 
 } endSubroutine: 
 
 beginSubroutine: s32'RoundInit' {
 	callSubroutine: s32'cmn_RoundInit'
 	initCharAttrType: (SPECIAL)
 	initCharPhysique: (MIDDLE)
 	initShoesType: 0
 	setAura: s32'zmb_tameAura', 1000, 1000, 1000, s32'zmb_tameAuraEnd', 1000, 1000, 1000
 	setSuperDash: s32'zmb_HomingJizoku', 1600, 1400, 1400, s32'zmb_HomingJizoku_Trail', 1200, 1200, 1200
 	setDragonRush: s32'cmn_RushScrAnim00nml', s32'cmn_AirRushScrAnim00nml'
 	initCPUYowameruRate: 100
 	initCPUTokuiKyori: 150000
 	initCPUTokuiKyoriKodawari: 100
 	addMove: s32'NmlAtk5A' {
 		moveType: (NORMAL)
 		characterState: (STANDING)
 		moveInput: (INPUT_PRESS_L)
 		moveInput: (INPUT_DISALLOW_UP)
 		maxChainIntoSelf: 2
 		skillEstAtkBox: -310, -320, 240, 170
 		skillEstTagKiten: 
 		skillEstTagXNearPanashi: 
 	} endMove: 
 	addMove: s32'NmlAtk5A2nd' {
 		moveType: (NORMAL)
 		characterState: (STANDING)
 		isFollowupMove: 1
 		moveInput: (INPUT_PRESS_L)
 		moveInput: (INPUT_DISALLOW_UP)
 		maxChainIntoSelf: 1
 		skillEstAtkBox: -520, -260, 420, 150
 		skillEstTagCombo: 
 		skillEstTagGuard: 
 	} endMove: 
 	addMove: s32'NmlAtk5A3rd' {
 		moveType: (NORMAL)
 		characterState: (STANDING)
 		isFollowupMove: 1
 		moveInput: (INPUT_PRESS_L)
 		maxChainIntoSelf: 1
 		skillEstAtkBox: -520, -260, 420, 150
 		skillEstTagCombo: 
 	} endMove: 
 	addMove: s32'NmlAtk2A' {
 		moveType: (NORMAL)
 		characterState: (CROUCHING)
 		moveInput: (INPUT_PRESS_L)
 		moveInput: (INPUT_ANY_DOWN)
 		move_ShareChain: s32'NmlAtk5A'
 		skillEstAtkBox: -215, -105, 220, 100
 		skillEstLevelLimit: 30
 		skillEstTagKiten: 
 		skillEstTagNoCombo: 
 		skillEstTagGuard: 
 		cpuIsLow: 
 	} endMove: 
 	addMove: s32'NmlAtk5B' {
 		moveType: (NORMAL)
 		characterState: (STANDING)
 		moveInput: (INPUT_PRESS_M)
 		moveInput: (INPUT_DISALLOW_UP)
 		maxChainIntoSelf: 1
 		skillEstAtkBox: -520, -290, 460, 70
 		skillEstTagKiten: 
 		skillEstTagCombo: 
 		skillEstTagGuard: 
 		skillEstTagXNearPanashi: 
 	} endMove: 
 	addMove: s32'NmlAtk2B' {
 		moveType: (NORMAL)
 		characterState: (CROUCHING)
 		moveInput: (INPUT_PRESS_M)
 		moveInput: (INPUT_ANY_DOWN)
 		maxChainIntoSelf: 1
 		skillEstAtkBox: -475, -175, 400, 190
 		skillEstLevelLimit: 30
 		skillEstTagKiten: 
 		skillEstTagCombo: 
 		skillEstTagGuard: 
 		cpuIsLow: 
 	} endMove: 
 	addMove: s32'NmlAtk6B' {
 		moveType: (NORMAL)
 		characterState: (STANDING)
 		moveInput: (INPUT_PRESS_M)
 		moveInput: (INPUT_ANY_FORWARD)
 		moveInput: (INPUT_DISALLOW_UP)
 		maxChainIntoSelf: 1
 		skillEstAtkBox: -330, -430, 310, 440
 		skillEstLevelLimit: 50
 		cpuIsOverhead: 
 		skillEstTagGuard: 
 		skillEstTagNoCombo: 
 	} endMove: 
 	addMove: s32'NmlAtk5C' {
 		moveType: (NORMAL)
 		characterState: (STANDING)
 		moveInput: (INPUT_PRESS_H)
 		moveInput: (INPUT_DISALLOW_UP)
 		maxChainIntoSelf: 1
 		skillEstAtkBox: -640, -300, 610, 100
 		skillEstTagXNearPanashi: 
 		skillEstTagGuard: 
 		skillEstTagCombo: 
 	} endMove: 
 	addMove: s32'NmlAtk2C' {
 		moveType: (NORMAL)
 		characterState: (CROUCHING)
 		moveInput: (INPUT_PRESS_H)
 		moveInput: (INPUT_ANY_DOWN)
 		maxChainIntoSelf: 1
 		skillEstAtkBox: -260, -760, 230, 720
 		skillEstTagTaiku: 
 	} endMove: 
 	addMove: s32'NmlAtk5D' {
 		moveType: (NORMAL)
 		characterState: (STANDING)
 		moveInput: (INPUT_PRESS_KI)
 		maxChainIntoSelf: 1
 		skillEstAtkBox: -1000, -250, 1000, 250
 		skillEstLevelLimit: 30
 		skillEstTagGuard: 
 		skillEstTagShot: 
 		skillEstTagXFarPanashi: 
 	} endMove: 
 	addMove: s32'NmlAtkAir5A' {
 		moveType: (NORMAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_PRESS_L)
 		maxChainIntoSelf: 2
 		addMoveCondition: (plr0_false)
 		skillEstAtkBox: -280, -260, 200, 140
 		skillEstTagXNearPanashi: 
 	} endMove: 
 	addMove: s32'NmlAtkAir5B' {
 		moveType: (NORMAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_PRESS_M)
 		maxChainIntoSelf: 1
 		addMoveCondition: (plr0_false)
 		skillEstAtkBox: -260, -335, 190, 215
 		skillEstTagKiten: 
 		skillEstTagXMidPanashi: 
 	} endMove: 
 	addMove: s32'NmlAtkAir5C' {
 		moveType: (NORMAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_PRESS_H)
 		maxChainIntoSelf: 1
 		addMoveCondition: (plr0_false)
 		skillForceDisableFlag: -2147483648
 		skillEstAtkBox: -225, -410, 150, 420
 		skillEstTagCombo: 
 	} endMove: 
 	addMove: s32'NmlAtkAir2C' {
 		moveType: (NORMAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_PRESS_H)
 		moveInput: (INPUT_ANY_DOWN)
 		maxChainIntoSelf: 1
 		addMoveCondition: (plr0_false)
 		skillEstAtkBox: -225, -410, 150, 420
 		skillEstPoint: 80
 	} endMove: 
 	addMove: s32'NmlAtkAir2C_Hikou' {
 		moveType: (NORMAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_PRESS_H)
 		moveInput: (INPUT_2)
 		move_ShareChain: s32'NmlAtkAir2C'
 		moveAlias: s32'NmlAtkAir2C'
 		skillEstAtkBox: -225, -410, 150, 420
 		skillEstPoint: 80
 	} endMove: 
 	addMove: s32'NmlAtkAir5D' {
 		moveType: (NORMAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_PRESS_KI)
 		maxChainIntoSelf: 1
 		skillForceDisableFlag: 1073741824
 		skillEstAtkBox: -380, -300, 380, 100
 		skillEstLevelLimit: 30
 		skillEstTagXFarPanashi: 
 		skillEstTagShot: 
 	} endMove: 
 	addMove: s32'FDash_Hikou' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		moveInput: 225
 		moveInput: (INPUT_BOOLEAN_OR)
 		moveInput: (INPUT_ANY_FORWARD)
 		moveInput: (INPUT_PRESS_H)
 		moveInput: (INPUT_PRESS_KI)
 		addMoveCondition: (plr0_true)
 	} endMove: 
 	addMove: s32'BDash_Hikou' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		moveInput: 224
 		moveInput: (INPUT_BOOLEAN_OR)
 		moveInput: (INPUT_ANY_BACK)
 		moveInput: (INPUT_PRESS_H)
 		moveInput: (INPUT_PRESS_KI)
 		addMoveCondition: (plr0_true)
 	} endMove: 
 	addMove: s32'FDash_Seigi' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_HOLD_KI)
 		moveInput: (INPUT_BOOLEAN_OR)
 		moveInput: 225
 		moveInput: (INPUT_BOOLEAN_OR)
 		moveInput: (INPUT_ANY_FORWARD)
 		moveInput: (INPUT_PRESS_H)
 		moveInput: (INPUT_PRESS_KI)
 		isFollowupMove: 1
 	} endMove: 
 	addMove: s32'BDash_Seigi' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_4)
 		moveInput: (INPUT_HOLD_KI)
 		moveInput: (INPUT_BOOLEAN_OR)
 		moveInput: 224
 		moveInput: (INPUT_BOOLEAN_OR)
 		moveInput: (INPUT_ANY_BACK)
 		moveInput: (INPUT_PRESS_H)
 		moveInput: (INPUT_PRESS_KI)
 		isFollowupMove: 1
 	} endMove: 
 	addMove: s32'Eiennoseigi_A' {
 		moveType: (SPECIAL)
 		characterState: (STANDING)
 		moveInput: (INPUT_236)
 		moveInput: (INPUT_PRESS_L)
 		skillEstAtkBox: -800, -290, 700, 300
 		skillEstTagXNearPanashi: 
 		skillEstTagCombo: 
 		skillEstTagGuard: 
 	} endMove: 
 	addMove: s32'Eiennoseigi_B' {
 		moveType: (SPECIAL)
 		characterState: (STANDING)
 		moveInput: (INPUT_236)
 		moveInput: (INPUT_PRESS_M)
 		moveInput: (INPUT_BOOLEAN_OR)
 		moveInput: (INPUT_236)
 		moveInput: (INPUT_PRESS_H)
 		skillEstAtkBox: -1300, -290, 1200, 300
 		skillEstTagXMidPanashi: 
 		skillEstTagCombo: 
 		skillEstTagGuard: 
 	} endMove: 
 	addMove: s32'Eiennoseigi_C' {
 		moveType: 41
 		characterState: (STANDING)
 		moveInput: (INPUT_236)
 		moveInput: (INPUT_PRESS_H)
 		addMoveCondition: (HALF)
 		skillEstAtkBox: -1300, -290, 1200, 300
 		skillEstLevelLimit: 60
 		skillEstTagXMidPanashi: 
 		skillEstTagCombo: 
 		skillEstTagGuard: 
 	} endMove: 
 	addMove: s32'AirEiennoseigi_A' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_236)
 		moveInput: (INPUT_PRESS_L)
 		skillEstAtkBox: -800, -290, 700, 300
 		skillEstTagXNearPanashi: 
 		skillEstTagCombo: 
 		skillEstTagGuard: 
 	} endMove: 
 	addMove: s32'AirEiennoseigi_B' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_236)
 		moveInput: (INPUT_PRESS_M)
 		moveInput: (INPUT_BOOLEAN_OR)
 		moveInput: (INPUT_236)
 		moveInput: (INPUT_PRESS_H)
 		skillEstAtkBox: -1300, -290, 1200, 300
 		skillEstTagXMidPanashi: 
 		skillEstTagCombo: 
 		skillEstTagGuard: 
 	} endMove: 
 	addMove: s32'AirEiennoseigi_C' {
 		moveType: 41
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_236)
 		moveInput: (INPUT_PRESS_H)
 		addMoveCondition: (HALF)
 		skillEstAtkBox: -1300, -290, 1200, 300
 		skillEstLevelLimit: 60
 		skillEstTagXMidPanashi: 
 		skillEstTagCombo: 
 		skillEstTagGuard: 
 	} endMove: 
 	addMove: s32'AirEiennoseigi_Hikou_A' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_PRESS_L)
 		addMoveCondition: (plr0_true)
 		moveAlias: s32'AirEiennoseigi_A'
 		movePriority: 10
 		skillEstAtkBox: -800, -290, 700, 300
 		skillEstTagXNearPanashi: 
 		skillEstTagCombo: 
 		skillEstTagGuard: 
 	} endMove: 
 	addMove: s32'AirEiennoseigi_Hikou_B' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_PRESS_M)
 		moveInput: (INPUT_BOOLEAN_OR)
 		moveInput: (INPUT_PRESS_H)
 		moveInput: (INPUT_DISALLOW_UP)
 		addMoveCondition: (plr0_true)
 		moveAlias: s32'AirEiennoseigi_B'
 		movePriority: 10
 		skillEstAtkBox: -1300, -290, 1200, 300
 		skillEstTagXMidPanashi: 
 		skillEstTagCombo: 
 		skillEstTagGuard: 
 	} endMove: 
 	addMove: s32'AirEiennoseigi_Hikou_C' {
 		moveType: 41
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_PRESS_H)
 		moveInput: (INPUT_NOT_2)
 		addMoveCondition: (HALF)
 		addMoveCondition: (plr0_true)
 		moveAlias: s32'AirEiennoseigi_C'
 		movePriority: 10
 		skillEstAtkBox: -1300, -290, 1200, 300
 		skillEstLevelLimit: 60
 		skillEstTagXMidPanashi: 
 		skillEstTagCombo: 
 		skillEstTagGuard: 
 	} endMove: 
 	addMove: s32'Hikarinokabe_A' {
 		moveType: (SPECIAL)
 		characterState: (STANDING)
 		moveInput: (INPUT_214)
 		moveInput: (INPUT_PRESS_L)
 		skillForceDisableFlag: 1
 		skillEstLevelLimit: 30
 		skillEstTagXFarPanashi: 
 		skillEstTagGuard: 
 		skillEstTagShot: 
 	} endMove: 
 	addMove: s32'Hikarinokabe_B' {
 		moveType: (SPECIAL)
 		characterState: (STANDING)
 		moveInput: (INPUT_214)
 		moveInput: (INPUT_PRESS_M)
 		moveInput: (INPUT_BOOLEAN_OR)
 		moveInput: (INPUT_214)
 		moveInput: (INPUT_PRESS_H)
 		skillForceDisableFlag: 1
 		skillEstLevelLimit: 30
 		skillEstTagXFarPanashi: 
 		skillEstTagGuard: 
 		skillEstTagShot: 
 	} endMove: 
 	addMove: s32'Hikarinokabe_C' {
 		moveType: 41
 		characterState: (STANDING)
 		moveInput: (INPUT_214)
 		moveInput: (INPUT_PRESS_H)
 		addMoveCondition: (HALF)
 		skillForceDisableFlag: 1
 		skillEstLevelLimit: 60
 		skillEstTagXFarPanashi: 
 		skillEstTagGuard: 
 		skillEstTagShot: 
 	} endMove: 
 	addMove: s32'AirHikarinokabe_A' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_214)
 		moveInput: (INPUT_PRESS_L)
 		skillForceDisableFlag: 1
 		skillEstLevelLimit: 30
 		skillEstTagXFarPanashi: 
 		skillEstTagGuard: 
 		skillEstTagShot: 
 	} endMove: 
 	addMove: s32'AirHikarinokabe_B' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_214)
 		moveInput: (INPUT_PRESS_M)
 		moveInput: (INPUT_BOOLEAN_OR)
 		moveInput: (INPUT_214)
 		moveInput: (INPUT_PRESS_H)
 		skillForceDisableFlag: 1
 		skillEstLevelLimit: 30
 		skillEstTagXFarPanashi: 
 		skillEstTagGuard: 
 		skillEstTagShot: 
 	} endMove: 
 	addMove: s32'AirHikarinokabe_C' {
 		moveType: 41
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_214)
 		moveInput: (INPUT_PRESS_H)
 		addMoveCondition: (HALF)
 		skillForceDisableFlag: 1
 		skillEstLevelLimit: 60
 		skillEstTagXFarPanashi: 
 		skillEstTagGuard: 
 		skillEstTagShot: 
 	} endMove: 
 	addMove: s32'AirHikarinokabe_Hikou_A' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_4)
 		moveInput: (INPUT_PRESS_L)
 		addMoveCondition: (plr0_true)
 		moveAlias: s32'AirHikarinokabe_A'
 		skillForceDisableFlag: 1
 		skillEstLevelLimit: 30
 		skillEstTagXFarPanashi: 
 		skillEstTagGuard: 
 		skillEstTagShot: 
 	} endMove: 
 	addMove: s32'AirHikarinokabe_Hikou_B' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_4)
 		moveInput: (INPUT_PRESS_M)
 		moveInput: (INPUT_BOOLEAN_OR)
 		moveInput: (INPUT_4)
 		moveInput: (INPUT_PRESS_H)
 		addMoveCondition: (plr0_true)
 		moveAlias: s32'AirHikarinokabe_B'
 		skillForceDisableFlag: 1
 		skillEstLevelLimit: 30
 		skillEstTagXFarPanashi: 
 		skillEstTagGuard: 
 		skillEstTagShot: 
 	} endMove: 
 	addMove: s32'AirHikarinokabe_Hikou_C' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_4)
 		moveInput: (INPUT_PRESS_H)
 		addMoveCondition: (HALF)
 		addMoveCondition: (plr0_true)
 		moveAlias: s32'AirHikarinokabe_C'
 		skillForceDisableFlag: 1
 		skillEstLevelLimit: 60
 		skillEstTagXFarPanashi: 
 		skillEstTagGuard: 
 		skillEstTagShot: 
 	} endMove: 
 	addMove: s32'Kaminotitujyo' {
 		moveType: (SPECIAL)
 		characterState: (STANDING)
 		moveInput: (INPUT_236)
 		moveInput: (INPUT_PRESS_KI)
 		addMoveCondition: (plr1_false)
 		skillEstAtkBox: -1500, -400, 1500, 400
 		skillEstLevelLimit: 30
 		skillEstTagXFarPanashi: 
 		skillEstTagTobare: 
 		skillEstTagSukidarake: 
 	} endMove: 
 	addMove: s32'TenjyonoKagayaki' {
 		moveType: (SPECIAL)
 		characterState: (STANDING)
 		moveInput: (INPUT_214)
 		moveInput: (INPUT_PRESS_KI)
 		addMoveCondition: (plr1_false)
 		skillEstTagPanashi: 
 		skillEstTagGuard: 
 	} endMove: 
 	addMove: s32'AirKaminotitujyo' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_236)
 		moveInput: (INPUT_PRESS_KI)
 		skillEstAtkBox: -1500, -400, 1500, 400
 		skillEstLevelLimit: 30
 		skillEstTagXFarPanashi: 
 		skillEstTagTobare: 
 		skillEstTagSukidarake: 
 	} endMove: 
 	addMove: s32'AirKaminotitujyo_Hikou' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_6)
 		moveInput: (INPUT_PRESS_KI)
 		addMoveCondition: (plr0_true)
 		moveAlias: s32'AirKaminotitujyo'
 		skillEstAtkBox: -1500, -400, 1500, 400
 		skillEstLevelLimit: 30
 		skillEstTagXFarPanashi: 
 		skillEstTagTobare: 
 		skillEstTagSukidarake: 
 	} endMove: 
 	addMove: s32'AirTenjyonoKagayaki' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_214)
 		moveInput: (INPUT_PRESS_KI)
 		addMoveCondition: (plr1_false)
 		skillEstTagPanashi: 
 		skillEstTagGuard: 
 	} endMove: 
 	addMove: s32'Hikou' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		isFollowupMove: 1
 		addMoveCondition: (plr1_false)
 		skillEstTagPanashi: 
 		skillEstTagGuard: 
 	} endMove: 
 	addMove: s32'Hikou_Hasei' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		isFollowupMove: 1
 		moveInput: (INPUT_NOT_H)
 		moveInput: (INPUT_HOLD_KI)
 		addMoveCondition: (plr1_false)
 		moveAlias: s32'Hikou'
 		skillEstTagPanashi: 
 		skillEstTagGuard: 
 	} endMove: 
 	addMove: s32'Hikou_End' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_4)
 		moveInput: (INPUT_PRESS_KI)
 		addMoveCondition: (plr0_true)
 		skillForceDisableFlag: 4
 		skillEstTagPanashi: 
 		skillEstTagGuard: 
 	} endMove: 
 	addMove: s32'Hikou_End_Hasei' {
 		moveType: (SPECIAL)
 		characterState: (AIRBORNE)
 		isFollowupMove: 1
 		moveAlias: s32'Hikou_End'
 		skillEstTagPanashi: 
 		skillEstTagGuard: 
 	} endMove: 
 	addMove: s32'BRendaChainSpecial' {
 		moveType: (ONE_BUTTON_SPECIAL)
 		characterState: (STANDING)
 		moveInput: (INPUT_PRESS_M)
 		moveInput: (INPUT_DISALLOW_DOWN)
 		isFollowupMove: 1
 		moveAlias: s32'Eiennoseigi_A'
 	} endMove: 
 	addMove: s32'Seinarugyakurin' {
 		moveType: (OVERDRIVE)
 		characterState: (STANDING)
 		moveInput: (INPUT_236)
 		moveInput: (INPUT_PRESS_L)
 		moveInput: (INPUT_PRESS_M)
 		addMoveCondition: (ONE)
 		skillEstAtkBox: -1300, -290, 1200, 300
 		skillEstLevelLimit: 40
 		skillEstPoint: 30
 		cpuBigDamage: 
 		skillEstTagCombo: 
 		skillEstInterval: 900
 	} endMove: 
 	addMove: s32'AirSeinarugyakurin' {
 		moveType: (OVERDRIVE)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_236)
 		moveInput: (INPUT_PRESS_L)
 		moveInput: (INPUT_PRESS_M)
 		addMoveCondition: (ONE)
 		skillEstAtkBox: -1300, -290, 1200, 300
 		skillEstLevelLimit: 40
 		skillEstPoint: 30
 		cpuBigDamage: 
 		skillEstTagCombo: 
 		skillEstInterval: 900
 	} endMove: 
 	addMove: s32'Sabakinoyaiba' {
 		moveType: (OVERDRIVE)
 		characterState: (STANDING)
 		moveInput: (INPUT_236)
 		moveInput: (INPUT_PRESS_H)
 		moveInput: (INPUT_PRESS_KI)
 		addMoveCondition: (ONE)
 		skillForceDisableFlag: 2
 		skillEstAtkBox: -1600, -1500, 1500, 1400
 		skillEstLevelLimit: 40
 		skillEstPoint: 50
 		skillEstTagPanashi: 
 		skillEstTagGuard: 
 		skillEstTagNoCombo: 
 		skillEstInterval: 600
 	} endMove: 
 	addMove: s32'AirSabakinoyaiba' {
 		moveType: (OVERDRIVE)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_236)
 		moveInput: (INPUT_PRESS_H)
 		moveInput: (INPUT_PRESS_KI)
 		addMoveCondition: (ONE)
 		skillForceDisableFlag: 2
 		skillEstAtkBox: -1600, -1500, 1500, 1400
 		skillEstLevelLimit: 40
 		skillEstPoint: 50
 		skillEstTagPanashi: 
 		skillEstTagGuard: 
 		skillEstTagNoCombo: 
 		skillEstInterval: 600
 	} endMove: 
 	addMove: s32'Zettainoikazuti' {
 		moveType: (OVERDRIVE)
 		characterState: (STANDING)
 		moveInput: (INPUT_214)
 		moveInput: (INPUT_PRESS_L)
 		moveInput: (INPUT_PRESS_M)
 		moveInput: (INPUT_BOOLEAN_OR)
 		moveInput: (INPUT_214)
 		moveInput: (INPUT_PRESS_H)
 		moveInput: (INPUT_PRESS_KI)
 		addMoveCondition: (THREE)
 		skillEstLevelLimit: 60
 		skillEstPoint: 50
 		cpuBigDamage: 
 		skillEstTagMuteki: 
 		skillEstInterval: 1000
 	} endMove: 
 	addMove: s32'AirZettainoikazuti' {
 		moveType: (OVERDRIVE)
 		characterState: (AIRBORNE)
 		moveInput: (INPUT_214)
 		moveInput: (INPUT_PRESS_L)
 		moveInput: (INPUT_PRESS_M)
 		moveInput: (INPUT_BOOLEAN_OR)
 		moveInput: (INPUT_214)
 		moveInput: (INPUT_PRESS_H)
 		moveInput: (INPUT_PRESS_KI)
 		addMoveCondition: (THREE)
 		skillEstLevelLimit: 60
 		skillEstPoint: 50
 		cpuBigDamage: 
 		skillEstTagMuteki: 
 		skillEstInterval: 1000
 	} endMove: 
 	addMove: s32'AssistAttack' {
 		moveType: 34
 		characterState: (STANDING_OR_AIRBORNE)
 		addMoveCondition: 132
 		addMoveCondition: 136
 		assistSlot: (ASSIST_A)
 	} endMove: 
 	addMove: s32'AssistAttack2' {
 		moveType: 34
 		characterState: (STANDING_OR_AIRBORNE)
 		addMoveCondition: 132
 		addMoveCondition: 136
 		assistSlot: (ASSIST_B)
 	} endMove: 
 	addMove: s32'AssistAttack3' {
 		moveType: 34
 		characterState: (STANDING_OR_AIRBORNE)
 		addMoveCondition: 132
 		addMoveCondition: 136
 		assistSlot: (ASSIST_C)
 	} endMove: 
 	addMove: s32'RC_Arenda' {
 		skillEstAtkBox: -310, -320, 240, 170
 		skillEstLevelLimit: 30
 		skillEstPoint: 110
 		skillEstTagKiten: 
 		skillEstTagXNearPanashi: 
 		skillRecipe_eSkill: s32'NmlAtk5A'
 		skillRecipe_eWait: 0, 10
 		skillRecipe_eKey: 16, 3
 		skillRecipe_eWait: 0, 40
 		skillRecipe_eKey: 16, 3
 		skillRecipe_eWait: 0, 40
 		skillRecipe_eKey: 0, 3
 		skillRecipe_eWait: 0, 50
 		skillRecipe_eKey: 16, 3
 		skillRecipe_eWait: 0, 50
 		skillRecipe_eKey: 16, 3
 		skillRecipe_eWait: 0, 50
 		skillRecipe_eKey: 16, 3
 		skillRecipe_eWait: 0, 50
 		skillRecipe_eKey: 16, 3
 		skillRecipe_eKey: 0, 50
 	} endMove: 
 	addMove: s32'RC_Brenda' {
 		skillEstAtkBox: -520, -290, 460, 70
 		skillEstLevelLimit: 50
 		skillEstPoint: 110
 		skillEstTagKiten: 
 		skillEstTagXNearPanashi: 
 		skillRecipe_eSkill: s32'NmlAtk5B'
 		skillRecipe_eWait: 0, 15
 		skillRecipe_eKey: 32, 3
 		skillRecipe_eWait: 0, 50
 		skillRecipe_eKey: 32, 3
 		skillRecipe_eWait: 0, 40
 		skillRecipe_eKey: 32, 3
 	} endMove: 
 	addMove: s32'RC_Taikuu' {
 		skillEstAtkBox: -260, -760, 230, 720
 		skillEstPoint: 100
 		skillEstTagTaiku: 
 		skillEstTagXNearPanashi: 
 		skillRecipe_eSkill: s32'NmlAtk2C'
 		skillRecipe_eWait: 0, 20
 		skillRecipe_eKey: 64, 40
 		skillRecipe_eWait: 0, 40
 		skillRecipe_eKey: 16, 3
 		skillRecipe_eWait: 0, 40
 		skillRecipe_eKey: 16, 3
 		skillRecipe_eWait: 0, 40
 		skillRecipe_eKey: 16, 3
 		skillRecipe_eKey: 0, 50
 	} endMove: 
 	registerMove: s32'CmnNeutral'
 	registerMove: s32'CmnStandForce'
 	registerMove: s32'CmnFWalk'
 	registerMove: s32'CmnFDash'
 	registerMove: s32'CmnBWalk'
 	registerMove: s32'CmnBDash'
 	registerMove: s32'CmnVJump'
 	registerMove: s32'CmnBJump'
 	registerMove: s32'CmnFJump'
 	registerMove: s32'CmnVHighJump'
 	registerMove: s32'CmnBHighJump'
 	registerMove: s32'CmnFHighJump'
 	registerMove: s32'CmnBAirDash'
 	registerMove: s32'CmnFAirDash'
 	registerMove: s32'BRendaChainSpecial'
 	registerMove: s32'CmnActShotHajiki'
 	registerMove: s32'NmlAtk5D'
 	registerMove: s32'NmlAtk5C'
 	registerMove: s32'NmlAtk2C'
 	registerMove: s32'NmlAtk5B'
 	registerMove: s32'NmlAtk2B'
 	registerMove: s32'NmlAtk6B'
 	registerMove: s32'NmlAtk5A'
 	registerMove: s32'NmlAtk5A2nd'
 	registerMove: s32'NmlAtk5A3rd'
 	registerMove: s32'NmlAtk2A'
 	registerMove: s32'NmlAtkAir5D'
 	registerMove: s32'NmlAtkAir5C'
 	registerMove: s32'NmlAtkAir2C'
 	registerMove: s32'NmlAtkAir2C_Hikou'
 	registerMove: s32'NmlAtkAir5B'
 	registerMove: s32'NmlAtkAir5A'
 	registerMove: s32'CmnVAirJump'
 	registerMove: s32'CmnBAirJump'
 	registerMove: s32'CmnFAirJump'
 	registerMove: s32'Eiennoseigi_A'
 	registerMove: s32'Eiennoseigi_B'
 	registerMove: s32'Eiennoseigi_C'
 	registerMove: s32'AirEiennoseigi_A'
 	registerMove: s32'AirEiennoseigi_B'
 	registerMove: s32'AirEiennoseigi_C'
 	registerMove: s32'AirEiennoseigi_Hikou_A'
 	registerMove: s32'AirEiennoseigi_Hikou_B'
 	registerMove: s32'AirEiennoseigi_Hikou_C'
 	registerMove: s32'Kaminotitujyo'
 	registerMove: s32'AirKaminotitujyo'
 	registerMove: s32'AirKaminotitujyo_Hikou'
 	registerMove: s32'Hikarinokabe_A'
 	registerMove: s32'Hikarinokabe_B'
 	registerMove: s32'Hikarinokabe_C'
 	registerMove: s32'AirHikarinokabe_A'
 	registerMove: s32'AirHikarinokabe_B'
 	registerMove: s32'AirHikarinokabe_C'
 	registerMove: s32'AirHikarinokabe_Hikou_A'
 	registerMove: s32'AirHikarinokabe_Hikou_B'
 	registerMove: s32'AirHikarinokabe_Hikou_C'
 	registerMove: s32'TenjyonoKagayaki'
 	registerMove: s32'AirTenjyonoKagayaki'
 	registerMove: s32'Hikou'
 	registerMove: s32'Hikou_Hasei'
 	registerMove: s32'Hikou_End'
 	registerMove: s32'Hikou_End_Hasei'
 	registerMove: s32'FDash_Hikou'
 	registerMove: s32'BDash_Hikou'
 	registerMove: s32'FDash_Seigi'
 	registerMove: s32'BDash_Seigi'
 	registerMove: s32'CmnActRushStart'
 	registerMove: s32'Rush_B'
 	registerMove: s32'CmnActKiaitame'
 	registerMove: s32'CmnActMikiwameMove'
 	registerMove: s32'CmnActHomingDash'
 	registerMove: s32'CmnActFDash2Button'
 	registerMove: s32'CmnActFAirDash2Button'
 	registerMove: s32'CmnActGuardCancelAttack'
 	registerMove: s32'CmnActGuardCancelMikiwameAttack'
 	registerMove: s32'Seinarugyakurin'
 	registerMove: s32'AirSeinarugyakurin'
 	registerMove: s32'Sabakinoyaiba'
 	registerMove: s32'AirSabakinoyaiba'
 	registerMove: s32'Zettainoikazuti'
 	registerMove: s32'AirZettainoikazuti'
 	registerMove: s32'CmnActSparkingBurst'
 	registerMove: s32'RequestChangeMember1'
 	registerMove: s32'RequestChangeMember2'
 	registerMove: s32'RequestChangeMemberUltimate1_1'
 	registerMove: s32'RequestChangeMemberUltimate1_2'
 	registerMove: s32'RequestChangeMemberUltimate2_1'
 	registerMove: s32'RequestChangeMemberUltimate2_2'
 	registerMove: s32'RequestAssistAttack1'
 	registerMove: s32'RequestAssistAttack2'
 	registerMove: s32'RequestGuardCancelChangeMember1'
 	registerMove: s32'RequestGuardCancelChangeMember2'
 	registerMove: s32'RequestSPChangeMember1'
 	registerMove: s32'RequestSPChangeMember2'
 	registerMove: s32'CmnChangeEnterAttack'
 	registerMove: s32'CmnGuardCancelChangeEnterAttack'
 	registerMove: s32'CmnSPCancelChangeEnterAttack'
 	registerMove: s32'CmnChangeEnterAttackUltimate1'
 	registerMove: s32'CmnChangeEnterAttackUltimate2'
 	registerMove: s32'AssistAttack'
 	registerMove: s32'AssistAttack2'
 	registerMove: s32'AssistAttack3'
 	registerMove: s32'RC_Arenda'
 	registerMove: s32'RC_Brenda'
 	registerMove: s32'RC_Taikuu'
 	grabbedFrames: 0, s32'zmb050_00'
 	grabbedFrames: 1, s32'zmb050_01'
 	grabbedFrames: 2, s32'zmb050_02'
 	grabbedFrames: 3, s32'zmb050_03'
 	grabbedFrames: 4, s32'zmb050_04'
 	grabbedFrames: 5, s32'zmb050_04'
 	grabbedFrames: 6, s32'zmb050_04'
 	grabbedFrames: 7, s32'zmb051_00'
 	grabbedFrames: 8, s32'zmb051_01'
 	grabbedFrames: 9, s32'zmb051_02'
 	grabbedFrames: 10, s32'zmb051_03'
 	grabbedFrames: 11, s32'zmb051_04'
 	grabbedFrames: 12, s32'zmb051_04'
 	grabbedFrames: 13, s32'zmb051_04'
 	grabbedFrames: 14, s32'zmb052_00'
 	grabbedFrames: 15, s32'zmb052_01'
 	grabbedFrames: 16, s32'zmb052_02'
 	grabbedFrames: 17, s32'zmb052_03'
 	grabbedFrames: 18, s32'zmb052_04'
 	grabbedFrames: 19, s32'zmb052_04'
 	grabbedFrames: 20, s32'zmb052_04'
 	grabbedFrames: 21, s32'zmb041_04'
 	grabbedFrames: 22, s32'zmb040_04'
 	grabbedFrames: 23, s32'zmb042_04'
 	grabbedFrames: 24, s32'zmb060_00'
 	grabbedFrames: 25, s32'zmb060_01'
 	grabbedFrames: 26, s32'zmb060_02'
 	grabbedFrames: 27, s32'zmb060_03'
 	grabbedFrames: 28, s32'zmb060_06'
 	grabbedFrames: 29, s32'zmb060_06'
 	grabbedFrames: 30, s32'zmb060_08'
 	grabbedFrames: 31, s32'zmb060_11'
 	grabbedFrames: 32, s32'zmb061_01'
 	grabbedFrames: 33, s32'zmb061_04'
 	grabbedFrames: 34, s32''
 	grabbedFrames: 35, s32''
 	grabbedFrames: 36, s32''
 	grabbedFrames: 37, s32''
 	grabbedFrames: 38, s32''
 	grabbedFrames: 39, s32'zmb062_05'
 	grabbedFrames: 40, s32'zmb061_01'
 	grabbedFrames: 41, s32'zmb061_04'
 	grabbedFrames: 42, s32'zmb062_00'
 	grabbedFrames: 43, s32'zmb062_01'
 	grabbedFrames: 44, s32'zmb062_02'
 	grabbedFrames: 45, s32'zmb062_03'
 	grabbedFrames: 46, s32'zmb076_00'
 	grabbedFrames: 47, s32''
 	grabbedFrames: 48, s32''
 	mouthTable: s16'vxxx400', 0x723930613375336F313275336133633432723732613375336F313275336133633630723138613375336F313275336133633138723534633432723930613375336F313275336133633336723732613375336F313275336133633234723336613375336F3132753361330000000000000000000000000000000000000000000000
 	mouthTable: s16'vxxx401', 0x613375336F313275336133633336723732613375336F31327533613363333672313038613375336F313275336133633534723930613375336F31387533613363333672333663353472313236613375336F3132753361330000000000000000000000000000000000000000000000000000000000000000000000000000000000
 	mouthTable: s16'vxxx404', 0x723138613375336F313275336133633336723231360000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 	mouthTable: s16'vxxx405', 0x613375336F31327533613372313632633138723732613375336F31327533613363323472313632613375336F313275336133000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 	checkEnemyTeamMemberName: s16'trs'
 	if: var(Result) {
 		vsCharMouthTable: s16'trs', s16'vxxx400', 0x72323730613375336F3132753361330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		vsCharMouthTable: s16'trs', s16'vxxx404', 0x72323334613375336F3132753361330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		vsCharMouthTable: s16'trs', s16'vxxx405', 0x613375336F31327533613363323472313038633138723138613375336F3975336133633138723138613375336F3138753361330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		addVsCharMouthTableIndex: 
 	} endIf: 
 	checkEnemyTeamMemberName: s16'gkb'
 	if: var(Result) {
 		vsCharMouthTable: s16'gkb', s16'vxxx400', 0x72313434613375336F3132753361336333723336613375336F313275336133633336723732613375336F3132753361330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		vsCharMouthTable: s16'gkb', s16'vxxx404', 0x613375336F31387533613363333672313236613375336F31327533613363333672313938613375336F313275336133000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		vsCharMouthTable: s16'gkb', s16'vxxx405', 0x723534613375336F313275336133633138723534613375336F313275336133633336723732613375336F31327533613363313872313236613375336F3132753361336333613375336F31327533613300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		addVsCharMouthTableIndex: 
 	} endIf: 
 	checkEnemyTeamMemberName: s16'vgb'
 	if: var(Result) {
 		vsCharMouthTable: s16'vgb', s16'vxxx404', 0x613375336F3975336133633372313632613375336F3132753361330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		vsCharMouthTable: s16'vgb', s16'vxxx405', 0x613375336F3132753361336333723930613375336F3132753361330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		addVsCharMouthTableIndex: 
 	} endIf: 
 	checkEnemyTeamMemberName: s16'gtl'
 	if: var(Result) {
 		vsCharMouthTable: s16'gtl', s16'vxxx401', 0x72323136613375336F31327533613363333672313038613375336F313275336133633132613375336F39753361336333723336613375336F313275336133000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		vsCharMouthTable: s16'gtl', s16'vxxx404', 0x72313236613375336F31327533613363333672313236613375336F31327533613363313872313236613375336F313275336133633138723534613375336F313875336133000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		addVsCharMouthTableIndex: 
 	} endIf: 
 	checkEnemyTeamMemberName: s16'bsn'
 	if: var(Result) {
 		vsCharMouthTable: s16'bsn', s16'vxxx404', 0x72313632613375336F313275336133633330723732613375336F31327533613363313872313632613375336F313275336133000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		addVsCharMouthTableIndex: 
 	} endIf: 
 	checkEnemyTeamMemberName: s16'vtb'
 	if: var(Result) {
 		vsCharMouthTable: s16'vtb', s16'vxxx400', 0x613375336F3132753361336333613375336F313275336133633237723930613375336F31327533613363333672313236613375336F313275336133633336613375336F3138753361336333613375336F3132753361336334387231303863333072313038613375336F3132753361330000000000000000000000000000000000
 		vsCharMouthTable: s16'vtb', s16'vxxx401', 0x723534613375336F313875336133633330723930613375336F313275336133633336723233346175336F3132753361330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		vsCharMouthTable: s16'vtb', s16'vxxx404', 0x72313236613375336F31327533613363333672313236613375336F31327533613363313872313236613375336F313275336133633138723534613375336F313875336133000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		vsCharMouthTable: s16'vtb', s16'vxxx405', 0x723336613375336F31327533613363333672323532613375336F313275336133000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		addVsCharMouthTableIndex: 
 	} endIf: 
 	checkEnemyTeamMemberName: s16'jrn'
 	if: var(Result) {
 		vsCharMouthTable: s16'jrn', s16'vxxx404', 0x72313830613375336F31327533613363333061336933753365336F313275336133633372313236613375336F31326533753369336133633132723138613375336F313265337533693361330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		addVsCharMouthTableIndex: 
 	} endIf: 
 	checkEnemyTeamMemberName: s16'jnn'
 	if: var(Result) {
 		vsCharMouthTable: s16'jnn', s16'vxxx404', 0x723534613375336F3132653375336933613363333672313236613375336F3132653375336933613363313872313434000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		addVsCharMouthTableIndex: 
 	} endIf: 
 	checkEnemyTeamMemberName: s16'nhy'
 	if: var(Result) {
 		vsCharMouthTable: s16'nhy', s16'vxxx404', 0x72313236613375336F31327533613363333672313236613375336F31327533613363313872313236613375336F313275336133633138723534613375336F313875336133000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		addVsCharMouthTableIndex: 
 	} endIf: 
 	checkEnemyTeamMemberName: s16'est'
 	if: var(Result) {
 		vsCharMouthTable: s16'est', s16'vxxx404', 0x72313632613375336F3132653375336933613363333072313236613375336F31386533753369336133000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		addVsCharMouthTableIndex: 
 	} endIf: 
 	checkEnemyTeamMemberName: s16'kfs'
 	if: var(Result) {
 		vsCharMouthTable: s16'kfs', s16'vxxx404', 0x72313632613375336F31386533753369336133633438723534613375336F3132653375336933613363313872313632613375336F31386533753369336133000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		addVsCharMouthTableIndex: 
 	} endIf: 
 	checkEnemyTeamMemberName: s16'mgs'
 	if: var(Result) {
 		vsCharMouthTable: s16'mgs', s16'vxxx404', 0x72323838613375336F3138653375336933613300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		addVsCharMouthTableIndex: 
 	} endIf: 
 	checkEnemyTeamMemberName: s16'mtn'
 	if: var(Result) {
 		vsCharMouthTable: s16'mtn', s16'vxxx404', 0x72313038613375336F3138653375336933613363313872323136613375336F31386533753369336133000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		addVsCharMouthTableIndex: 
 	} endIf: 
 	checkEnemyTeamMemberName: s16'gff'
 	if: var(Result) {
 		vsCharMouthTable: s16'gff', s16'vxxx404', 0x72313236613375336F31327533613363333672313236613375336F31327533613363313872313236613375336F313275336133633138723534613375336F313875336133000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 		addVsCharMouthTableIndex: 
 	} endIf: 
 	seSetBegin: s32'FuriShort', 60
 	seSetAdd: s32'ARC_BTL_CMN_Furi_Short-A'
 	seSetAdd: s32'ARC_BTL_CMN_Furi_Short-B'
 	seSetAdd: s32'ARC_BTL_CMN_Furi_Short-C'
 	seSetAdd: s32'ARC_BTL_CMN_Furi_Short-B'
 	seSetEnd: 
 	seSetBegin: s32'KidanFire', 60
 	seSetAdd: s32'ARC_BTL_CMN_kidan_Fire2'
 	seSetAdd: s32'ARC_BTL_CMN_kidan_Fire3'
 	seSetAdd: s32'ARC_BTL_CMN_kidan_Fire4'
 	seSetEnd: 
 	linkPawn: s32''
 	resetMaterialSet: 
 	changeDefaultMeshSet: 
 } endSubroutine: 
 
 beginSubroutine: s32'OnLanding' {
 	copyVar: var(plr1), int(0)
 } endSubroutine: 
 
 beginSubroutine: s32'OnDamage' {
 	copyVar: var(plr1), int(0)
 } endSubroutine: 
 
 beginSubroutine: s32'OnGuard' {
 } endSubroutine: 
 
 beginSubroutine: s32'OnIdling' {
 	callSubroutine: s32'cmn_OnIdling'
 	if: var(IsNeutral) {
 		if: var(IsLand) {
 			copyVar: var(plr0), int(0)
 			copyVar: var(plr1), int(0)
 			copyVar: var(plr2), int(0)
 		} endIf: 
 	} endIf: 
 	ifNot: var(IsMainPlayerSelf) {
 		copyVar: var(plr0), int(0)
 		copyVar: var(plr1), int(0)
 		copyVar: var(plr2), int(0)
 	} endIf: 
 	if: var(obj1) {
 		modifyVar: (ADD), var(obj1), int(1)
 		ifOperation: (IS_GREATER_OR_EQUAL), var(obj1), int(5) {
 			copyVar: var(obj1), int(0)
 		} endIf: 
 	} endIf: 
 } endSubroutine: 
 
 beginSubroutine: s32'JumpDown_Type' {
 	copyVar: var(act7), int(0)
 } endSubroutine: 
 
 beginSubroutine: s32'FDownLoop_Type' {
 	copyVar: var(act7), int(1)
 } endSubroutine: 
 
 beginSubroutine: s32'AN_CmnActChangeLeave_Init' {
 } endSubroutine: 
 
 beginSubroutine: s32'AN_CmnActHomingDash_Face' {
 	faceAnimation: 20
 } endSubroutine: 
 
 beginSubroutine: s32'AN_CmnActHomingDashBrake_Face' {
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 } endSubroutine: 
 
 beginSubroutine: s32'AN_CmnActRushStart_Face' {
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 } endSubroutine: 
 
 beginSubroutine: s32'AN_CmnActRushRush_Face' {
 	faceAnimation: 20
 	mouthPose: (OPEN)
 } endSubroutine: 
 
 beginSubroutine: s32'AN_CmnActRushFinishChaseEnd_Fac' {
 	facePose: (ANGRY)
 	mouthPose: (SHOW_TEETH)
 } endSubroutine: 
 
 beginSubroutine: s32'AN_CmnActRushSousai_Face' {
 	facePose: (ANGRY)
 	mouthPose: (SHOW_TEETH)
 } endSubroutine: 
 
 beginSubroutine: s32'AN_CmnActSparkingBurst_Face' {
 	facePose: (ANGRY)
 	mouthPose: (OPEN)
 } endSubroutine: 
 
 beginSubroutine: s32'AN_CmnActRushStart_Voice' {
 	voiceLine: s16'vxxx114'
 } endSubroutine: 
 
 beginSubroutine: s32'AN_CmnActRushRush_Voice' {
 	voiceLine: s16'vxxx115'
 } endSubroutine: 
 
 beginSubroutine: s32'AN_CmnActRushSousai_Voice' {
 	voiceLine: s16'vxxx115'
 } endSubroutine: 
 
 beginState: s32'CmnActStand' {
 	startEyeBlinkEx: -1, 0, 1000
 	label: s32'loop'
 	sprite: s32'zmb000_00', 6
 	sprite: s32'zmb000_01', 6
 	sprite: s32'zmb000_02', 6
 	sprite: s32'zmb000_03', 6
 	sprite: s32'zmb000_04', 6
 	sprite: s32'zmb000_05', 6
 	sprite: s32'zmb000_06', 6
 	sprite: s32'zmb000_07', 6
 	sprite: s32'zmb000_08', 6
 	sprite: s32'zmb000_09', 6
 	sprite: s32'zmb000_10', 6
 	sprite: s32'zmb000_11', 6
 	sprite: s32'zmb000_12', 6
 	sprite: s32'zmb000_13', 6
 	sprite: s32'zmb000_14', 6
 	sprite: s32'zmb000_15', 6
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActCrouch' {
 	startEyeBlinkEx: -1, 0, 1000
 	label: s32'loop'
 	sprite: s32'zmb011_00', 6
 	sprite: s32'zmb011_01', 6
 	sprite: s32'zmb011_02', 6
 	sprite: s32'zmb011_03', 6
 	sprite: s32'zmb011_04', 6
 	sprite: s32'zmb011_05', 6
 	sprite: s32'zmb011_06', 6
 	sprite: s32'zmb011_07', 6
 	sprite: s32'zmb011_08', 6
 	sprite: s32'zmb011_09', 6
 	sprite: s32'zmb011_10', 6
 	sprite: s32'zmb011_11', 6
 	sprite: s32'zmb011_12', 6
 	sprite: s32'zmb011_13', 6
 	sprite: s32'zmb011_14', 6
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActJump' {
 	label: s32'_Upper'
 	label: s32'upperloop'
 	sprite: s32'zmb021_00', 3
 	sprite: s32'zmb021_01', 3
 	sprite: s32'zmb021_02', 3
 	spriteEnd: 
 	gotoLabel: s32'upperloop'
 	label: s32'_UpperToTop'
 	sprite: s32'zmb021_03', 2
 	sprite: s32'zmb021_04', 2
 	sprite: s32'zmb022_00', 2
 	sprite: s32'zmb022_01', 2147483647
 	label: s32'_Top'
 	sprite: s32'zmb022_02', 2147483647
 	label: s32'_TopToDown'
 	sprite: s32'zmb022_03', 3
 	sprite: s32'zmb022_04', 3
 	sprite: s32'zmb022_05', 2147483647
 	label: s32'_Down'
 	label: s32'downloop'
 	sprite: s32'zmb022_06', 3
 	sprite: s32'zmb022_07', 3
 	sprite: s32'zmb022_08', 3
 	spriteEnd: 
 	gotoLabel: s32'downloop'
 } endState: 
 
 beginState: s32'CmnActLandingStiff' {
 	sprite: s32'zmb037_02', 3
 	sprite: s32'zmb037_03', 3
 	sprite: s32'zmb037_04', 2147483647
 	spriteEnd: 
 	label: s32'_End'
 	sprite: s32'zmb037_03', 3
 	sprite: s32'zmb037_02', 3
 	sprite: s32'zmb037_01', 3
 	sprite: s32'zmb037_00', 3
 } endState: 
 
 beginState: s32'CmnActFWalk' {
 	sprite: s32'zmb030_00', 3
 	label: s32'loop'
 	sprite: s32'zmb030_01', 3
 	sprite: s32'zmb030_02', 3
 	sprite: s32'zmb030_03', 3
 	sprite: s32'zmb030_04', 3
 	sprite: s32'zmb030_05', 3
 	sprite: s32'zmb030_06', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActBWalk' {
 	sprite: s32'zmb031_00', 3
 	label: s32'loop'
 	sprite: s32'zmb031_01', 3
 	sprite: s32'zmb031_02', 3
 	sprite: s32'zmb031_03', 3
 	sprite: s32'zmb031_04', 3
 	sprite: s32'zmb031_05', 3
 	sprite: s32'zmb031_06', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActFDash' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnFDashStopInit'
 	} endUpon: 
 	sprite: s32'zmb035_04', 3
 	label: s32'loop'
 	sprite: s32'zmb032_00', 3
 	sprite: s32'zmb032_01', 3
 	sprite: s32'zmb032_02', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActFDashStop' {
 	sprite: s32'zmb036_04', 3
 	sprite: s32'zmb036_03', 3
 	sprite: s32'zmb036_02', 3
 	sprite: s32'zmb036_01', 3
 	sprite: s32'zmb036_00', 3
 } endState: 
 
 beginState: s32'CmnActBDashStop' {
 	callSubroutine: s32'cmnBDashStopInit'
 	sprite: s32'zmb035_04', 3
 	sprite: s32'zmb035_03', 3
 	sprite: s32'zmb035_02', 3
 	sprite: s32'zmb035_01', 3
 	sprite: s32'zmb035_00', 3
 } endState: 
 
 beginState: s32'CmnActAirFDash' {
 	sprite: s32'zmb038_04', 2
 	callSubroutine: s32'cmnAirFDashInit'
 	sprite: s32'zmb032_00ex', 2
 	sprite: s32'zmb032_01ex', 2
 	sprite: s32'zmb032_02ex', 2
 	sprite: s32'zmb038_00', 2
 } endState: 
 
 beginState: s32'CmnActAirBDash' {
 	sprite: s32'zmb038_04', 3
 	callSubroutine: s32'cmnBDashMutekiInit'
 	sprite: s32'zmb033_00ex', 3
 	sprite: s32'zmb033_01ex', 3
 	sprite: s32'zmb033_02ex', 3
 	sprite: s32'zmb038_00', 3
 } endState: 
 
 beginState: s32'CmnActFDownBound' {
 	sprite: s32'zmb062_05', 3
 	sprite: s32'zmb061_00', 3
 	sprite: s32'zmb061_01', 3
 	sprite: s32'zmb061_02', 3
 	sprite: s32'zmb061_03', 3
 } endState: 
 
 beginState: s32'entry_default' {
 	upon: (IMMEDIATE) {
 		initializeForEntryAction: 
 		setRandom: var(act2), int(0), int(1)
 		upon: (BEFORE_EXIT) {
 			stopBankSE: 0, 30
 		} endUpon: 
 	} endUpon: 
 	sprite: s32'null', 2147483647
 	checkEnemyName: s16'trs'
 	if: var(Result) {
 		if: var(act2) {
 			playAnimeFaceIndex: 2
 		} endIf: 
 		else:  {
 			playAnimeFaceIndex: 1
 		} endElse: 
 	} endIf: 
 	checkEnemyName: s16'gkb'
 	if: var(Result) {
 		if: var(act2) {
 			playAnimeFaceIndex: 3
 		} endIf: 
 		else:  {
 			playAnimeFaceIndex: 1
 		} endElse: 
 	} endIf: 
 	checkEnemyName: s16'gtl'
 	if: var(Result) {
 		if: var(act2) {
 			playAnimeFaceIndex: 1
 		} endIf: 
 		else:  {
 			playAnimeFaceIndex: 2
 		} endElse: 
 	} endIf: 
 	checkEnemyName: s16'vtb'
 	if: var(Result) {
 		if: var(act2) {
 			playAnimeFaceIndex: 3
 		} endIf: 
 		else:  {
 			playAnimeFaceIndex: 2
 		} endElse: 
 	} endIf: 
 	playAnimation: s32'zmb600cs', 0
 	playCameraAnimation: s32'zmb600cs', (SELF), 0, -1
 	dispSubMemberForEntry: 0
 	createObject: s32'zmb600cs_gbr', (ZERO)
 	createObject: s32'zmb600cs_zmn', (ZERO)
 	upon: (IDLING) {
 		ifOnFrame: int(0) {
 			createObject: s32'ZMB600_SpeedLine', (ZERO)
 			privateBankSE: 0, s32'ARC_BTL_ZMB_Entry', 100
 		} endIf: 
 		ifOnFrame: int(51) {
 			triggerUponInObject: s32'ZMB600_SpeedLine', (SIGNAL0)
 		} endIf: 
 		ifOnFrame: int(103) {
 			createObject: s32'ZMB600_FlySphere', (ZERO)
 			deactivateObjectByName: s32'ZMB600_SpeedLine'
 			darkenBackground: 25
 		} endIf: 
 		ifOnFrame: int(251) {
 			createObject: s32'ZMB600_Flash', (ZERO)
 			createObject: s32'ZMB600_Flash_groundSmoke', (ZERO)
 			createObject: s32'ZMB600_Flash_groundSmoke2', (ZERO)
 		} endIf: 
 		ifOnFrame: int(292) {
 			createObject: s32'ZMB600_AuraHagare', (CHEST_3D)
 			createObject: s32'ZMB600_AuraMatome', (ZERO)
 			deactivateObjectByName: s32'ZMB600_Flash_groundSmoke'
 			deactivateObjectByName: s32'ZMB600_Flash_groundSmoke2'
 		} endIf: 
 		ifOnFrame: int(379) {
 			deactivateObjectByName: s32'ZMB600_Flash'
 			triggerUponInObject: s32'ZMB600_AuraHagare', (SIGNAL0)
 		} endIf: 
 		ifOnFrame: int(491) {
 			cutSceneFaceBegin: 
 		} endIf: 
 		ifOperation: (IS_EQUAL), var(FrameCount), int(492) {
 			if: var(act2) {
 				forceRandomVoice: s16'vxxx400', 100, s16'', 0, s16'', 0, s16'', 0
 			} endIf: 
 			else:  {
 				forceRandomVoice: s16'vxxx401', 100, s16'', 0, s16'', 0, s16'', 0
 			} endElse: 
 			jimaku: s32'!prev', -2147483618
 			demoEndOnMouthEnd: 1
 			demoEnd_YoinTime: 60
 		} endIf: 
 	} endUpon: 
 	spriteEnd: 
 	exitState: 
 } endState: 
 
 beginState: s32'CmnActMatchWin' {
 	upon: (BEFORE_EXIT) {
 		stopBankSE: 0, 30
 	} endUpon: 
 	sprite: s32'null', 2147483647
 	playAnimation: s32'zmb610cs', 0
 	playCameraAnimation: s32'zmb610cs', (SELF), 0, -1
 	hideAllButSelf: 1
 	upon: (IDLING) {
 		ifOnFrame: int(0) {
 			privateBankSE: 0, s32'ARC_BTL_ZMB_Win', 100
 		} endIf: 
 		ifOnFrame: int(31) {
 			createObject: s32'cmn_WinFlash', (ZERO)
 		} endIf: 
 		ifOnFrame: int(63) {
 			createObject: s32'cmn_WinFlash', (ZERO)
 		} endIf: 
 		ifOnFrame: int(95) {
 			createObject: s32'cmn_WinFlash', (ZERO)
 		} endIf: 
 		ifOnFrame: int(184) {
 			createObject: s32'ZMB610_BodyAura', (ZERO)
 		} endIf: 
 		ifOnFrame: int(267) {
 			createObject: s32'ZMB610_RayStart', (CHEST_3D)
 		} endIf: 
 		ifOnFrame: int(280) {
 			deactivateObjectByName: s32'ZMB610_RayStart'
 			createObject: s32'ZMB610_Ray', (CHEST_3D)
 		} endIf: 
 		ifOnFrame: int(296) {
 			forceRandomVoice: s16'vxxx404', 100, s16'vxxx405', 100, s16'', 0, s16'', 0
 			jimaku: s32'!prev', -2147483618
 			copyVar: var(act0), int(1)
 		} endIf: 
 		if: var(act0) {
 			ifNot: var(IsMouthDoing) {
 				demoEnd_YoinTime: 30
 				demoEnd: 
 				copyVar: var(act0), int(0)
 				setMatchWinFadeOutTime: 60
 				endMatchWinSecondAction: 
 			} endIf: 
 		} endIf: 
 	} endUpon: 
 	spriteEnd: 
 	exitState: 
 } endState: 
 
 beginState: s32'CmnActLose' {
 	sprite: s32'zmb000_00', 6
 	sprite: s32'zmb000_01', 6
 	sprite: s32'zmb000_02', 6
 	sprite: s32'zmb000_03', 6
 	sprite: s32'zmb000_04', 6
 	sprite: s32'zmb000_05', 6
 	sprite: s32'zmb000_06', 6
 	sprite: s32'zmb000_07', 6
 	sprite: s32'zmb000_08', 6
 	sprite: s32'zmb000_09', 6
 	sprite: s32'zmb000_10', 6
 	sprite: s32'zmb000_11', 6
 	sprite: s32'zmb000_12', 6
 	sprite: s32'zmb000_13', 6
 	sprite: s32'zmb000_14', 6
 	sprite: s32'zmb000_15', 6
 } endState: 
 
 beginState: s32'CmnActResultWin' {
 	upon: (IMMEDIATE) {
 		modelDirMode: 2
 		setMatchResultOffset: 0, -25000, -132000, 185000, 0, 85000, 0
 		setMatchResultOffset: 1, 58000, -146000, 262000, 0, 106000, 0
 		setMatchResultOffset: 2, 15000, -166000, 376000, 0, 99000, 0
 	} endUpon: 
 	sprite: s32'zmb700_00', 2147483647
 	overrideLightDirection: 0, -54
 	upon: (IDLING) {
 		if: var(BattleResutPoseStart) {
 			jumpToLabel: s32'PoseStart'
 			clearRegisteredUponCode: (IDLING)
 			unknown1696: 0
 		} endIf: 
 	} endUpon: 
 	label: s32'PoseStart'
 	sprite: s32'zmb700_00', 2147483647
 } endState: 
 
 beginState: s32'AssistAttack' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnAssistAttackInit'
 	} endUpon: 
 	sprite: s32'zmb022_06', 1
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb022_06', 1
 	label: s32'downloop'
 	sprite: s32'zmb022_06', 3
 	sprite: s32'zmb022_07', 3
 	sprite: s32'zmb022_08', 3
 	spriteEnd: 
 	gotoLabelIfOperation: s32'downloop', (IS_LESS_OR_EQUAL), var(LoopCount), int(600)
 	gotoLabel: s32'end'
 	label: s32'landing'
 	sprite: s32'zmb404_00', 2
 	sprite: s32'zmb404_01', 2
 	sprite: s32'zmb404_02', 2
 	sprite: s32'zmb404_03', 2
 	sprite: s32'zmb404_04', 2
 	sprite: s32'zmb404_05', 2
 	sprite: s32'zmb404_03', 2
 	sprite: s32'zmb404_04', 2
 	sprite: s32'zmb404_05', 2
 	sprite: s32'zmb404_06', 2
 	mouthPose: (OPEN)
 	sprite: s32'zmb404_07', 2
 	sprite: s32'zmb404_08', 1
 	setXSpeed: 50000
 	xSpeedPerFrame: 80
 	sprite: s32'zmb404_09', 2
 	createObject: s32'zmb404_ShockEff_Assist', (ZERO)
 	createObject: s32'zmb404_slashEff', (ZERO)
 	sprite: s32'zmb404_10', 2
 	createObject: s32'Kaminotitujyo_kidan', (EX_POINT_0)
 	sprite: s32'zmb404_11', 2
 	sprite: s32'zmb404_12', 2
 	sprite: s32'zmb404_13', 2
 	sprite: s32'zmb404_11', 3
 	sprite: s32'zmb404_12', 3
 	sprite: s32'zmb404_13', 3
 	sprite: s32'zmb404_14', 3
 	sprite: s32'zmb404_15', 3
 	sprite: s32'zmb404_16', 3
 	sprite: s32'zmb404_17', 3
 	sprite: s32'zmb404_18', 3
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb404_19', 3
 	sprite: s32'zmb404_20', 3
 	spriteEnd: 
 	label: s32'end'
 	resetSpeed: 1
 	gotoLabelIfTrue: s32'air_end', var(IsAir)
 	sprite: s32'zmb000_00', 3
 	sprite: s32'zmb010_00', 4
 	sprite: s32'zmb010_01', 4
 	spriteEnd: 
 	exitState: 
 	label: s32'air_end'
 	sprite: s32'zmb038_00', 2
 	sprite: s32'zmb038_01', 2
 	sprite: s32'zmb038_02', 2
 	sprite: s32'zmb038_03', 2
 	sprite: s32'zmb038_04', 3
 	spriteEnd: 
 } endState: 
 
 beginState: s32'AssistAttack2' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnAssistAttackInit'
 		callSubroutine: s32'cmnAtkLevel_3_AtkInit'
 		groundKnockbackEffect: (AIR_FACE_UP)
 		airKnockbackEffect: (AIR_FACE_UP)
 		damage: 800
 		attackXKnockback: 25000
 		attackYKnockback: 21200
 		airHitstun: 23
 		enemyHitstopAddition: 0, 8, 8
 		guardPushback: 150
 		atkShakeCamera: s32'ShakeYoko', 300, 1, 20, 0
 		attackDamageEffect: 4, s32'cmn_slash_s'
 		atkHitCommonSEReset: s32'ARC_BTL_TRS_ShngSlsh_Hit_1'
 		guardSoundEffect: s32''
 		guardSoundEffect: s32'ARC_BTL_TRS_ShngSlsh_Grd_1'
 		callSubroutine: s32'cmn_AssistHosei'
 		upon: (BEFORE_EXIT) {
 			resetWeightDefault: 
 		} endUpon: 
 	} endUpon: 
 	sprite: s32'zmb022_06', 1
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb022_06', 1
 	label: s32'downloop'
 	sprite: s32'zmb022_06', 3
 	sprite: s32'zmb022_07', 3
 	sprite: s32'zmb022_08', 3
 	spriteEnd: 
 	gotoLabelIfOperation: s32'downloop', (IS_LESS_OR_EQUAL), var(LoopCount), int(600)
 	gotoLabel: s32'end'
 	label: s32'landing'
 	sprite: s32'zmb403_02', 1
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb403_02', 1
 	privateBankSE: 0, s32'ARC_BTL_ZMB_Seigi_BasaDash', 100
 	sprite: s32'zmb403_03', 2
 	sprite: s32'zmb403_04', 3
 	floorEffect: 5, 100
 	setXSpeed: 50000
 	setYSpeed: 10000
 	changeWeight: 500
 	characterSfx: s32'ARC_BTL_ZMB_Seigi_SwordSet'
 	jumpToStateInObject: (PARENT), s32'landing_end'
 	sprite: s32'zmb403_05', 2
 	sprite: s32'zmb403_06', 1
 	setYSpeed: 0
 	sprite: s32'zmb403_09', 1
 	characterSfx: s32'ARC_BTL_ZMB_Seigi_SwordFuri'
 	sprite: s32'zmb403_10', 3
 	enableHitbox: 
 	mouthPose: (OPEN)
 	createObject: s32'zmb403_slashEff', (ZERO)
 	xSpeedPerFrame: 60
 	sprite: s32'zmb403_11', 3
 	sprite: s32'zmb403_12', 3
 	recoveryState: 
 	resetWeightDefault: 
 	sprite: s32'zmb403_13', 3
 	mouthPose: (SHOW_TEETH)
 	xSpeedPerFrame: 100
 	objectGravity: 
 	clearRegisteredUponCode: (NO_STOP_IDLING)
 	sprite: s32'zmb403_14', 3
 	sprite: s32'zmb403_15', 3
 	sprite: s32'zmb403_16', 3
 	sprite: s32'zmb403_19', 3
 	label: s32'landing_end'
 	sprite: s32'zmb037_03', 3
 	resetSpeed: 1
 	resetWeightDefault: 
 	sprite: s32'zmb037_02', 3
 	sprite: s32'zmb037_01', 3
 	sprite: s32'zmb037_00', 3
 	label: s32'end'
 	resetSpeed: 1
 	resetWeightDefault: 
 	gotoLabelIfTrue: s32'air_end', var(IsAir)
 	sprite: s32'zmb000_00', 3
 	sprite: s32'zmb010_00', 4
 	sprite: s32'zmb010_01', 4
 	spriteEnd: 
 	exitState: 
 	label: s32'air_end'
 	sprite: s32'zmb038_00', 2
 	sprite: s32'zmb038_01', 2
 	sprite: s32'zmb038_02', 2
 	sprite: s32'zmb038_03', 2
 	sprite: s32'zmb038_04', 3
 	spriteEnd: 
 } endState: 
 
 beginState: s32'AssistAttack3' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnAssistAttackInit'
 		callSubroutine: s32'cmnAtkLevel_3_AtkInit'
 		damage: 800
 		attackXKnockback: 15000
 		attackYKnockback: 50000
 		airHitstun: 35
 		groundKnockbackEffect: (AIR_DEFAULT)
 		airKnockbackEffect: (AIR_DEFAULT)
 		atkHitCommonSEReset: s32'ARC_BTL_GBR_Sword_Hit'
 		callSubroutine: s32'cmn_AssistHosei'
 		upon: (ON_ATTACK_HIT_MAIN_PLAYER_DAMAGE_PRE_CTRL) {
 			clearRegisteredUponCode: (ON_ATTACK_HIT_MAIN_PLAYER_DAMAGE_PRE_CTRL)
 			hitstop: 18
 		} endUpon: 
 		upon: (BEFORE_EXIT) {
 			resetWeightDefault: 
 		} endUpon: 
 	} endUpon: 
 	sprite: s32'zmb022_06', 1
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb022_06', 1
 	label: s32'downloop'
 	sprite: s32'zmb022_06', 3
 	sprite: s32'zmb022_07', 3
 	sprite: s32'zmb022_08', 3
 	spriteEnd: 
 	gotoLabelIfOperation: s32'downloop', (IS_LESS_OR_EQUAL), var(LoopCount), int(600)
 	gotoLabel: s32'end'
 	label: s32'landing'
 	sprite: s32'zmb402_03', 2
 	sprite: s32'zmb402_04', 1
 	sprite: s32'zmb402_05', 1
 	sprite: s32'zmb402_06', 1
 	sprite: s32'zmb402_07', 1
 	sprite: s32'zmb402_08', 1
 	sprite: s32'zmb310_06', 1
 	cmnSfx: s32'ARC_BTL_CMN_TLP_Short_Assist'
 	createParticle: s32'cmn_Warp', (CENTER)
 	enableSuperArmor: 1
 	displayModel: 0
 	changeWeight: 500
 	warp: (ENEMY_MAIN_PLAYER), (PLAYER_LAND), 150000, 0, 1
 	label: s32'assist_c_rapid'
 	sprite: s32'zmb000_00', 5
 	spriteOverrideTime: 12, var(act5)
 	resetSpeed: 1
 	callSubroutine: s32'cmn_ShotMuteki'
 	headInvul: 1
 	sprite: s32'zmb400_04', 1
 	callSubroutine: s32'cmnAssist_C_Pos'
 	sprite: s32'zmb232_04', 1
 	createParticle: s32'cmn_Warp', (CENTER)
 	callSubroutine: s32'cmn_ShotMuteki_End'
 	callSubroutine: s32'cmn_ShotMutekiArmor'
 	headInvul: 1
 	displayModel: 1
 	resetSpeed: 1
 	callSubroutine: s32'cmnAssist_C_RapidStart'
 	sprite: s32'zmb232_04', 1
 	characterSfx: s32'ARC_BTL_ZMB_Atk2C_Bishi'
 	sprite: s32'zmb232_05', 3
 	characterSfx: s32'ARC_BTL_ZMB_Atk2C_Attack'
 	sprite: s32'zmb232_08', 3
 	enableHitbox: 
 	mouthPose: (OPEN)
 	createObject: s32'zmb232_Eff', (EX_POINT_0)
 	createObject: s32'cmn_kidan_smoke', (PLAYER_LAND)
 	copyVar: var(act7), int(16)
 	callSubroutine: s32'cmnAssist3LastAtkPre_IDLING'
 	sprite: s32'zmb232_09', 3
 	sprite: s32'zmb232_10', 3
 	sprite: s32'zmb232_08', 3
 	headInvul: 0
 	disableHitbox: 
 	callSubroutine: s32'cmn_ShotMutekiArmor_End'
 	resetWeightDefault: 
 	sprite: s32'zmb232_09', 3
 	sprite: s32'zmb232_10', 3
 	sprite: s32'zmb232_11', 2
 	sprite: s32'zmb232_12', 2
 	sprite: s32'zmb232_13', 2
 	sprite: s32'zmb232_14', 4
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb232_15', 3
 	sprite: s32'zmb232_16', 2
 	spriteEnd: 
 	gotoLabel: s32'end'
 	label: s32'assist_last'
 	sprite: s32'zmb262_03', 3
 	cmnSfx: s32'ARC_BTL_CMN_TLP_Short_Assist'
 	createParticle: s32'cmn_Warp', (CENTER)
 	callSubroutine: s32'cmn_ShotMutekiArmor_End'
 	enableSuperArmor: 1
 	displayModel: 0
 	screenAdditionalWidth: -1
 	ignorePushback: 1
 	setNoCollision: 0
 	voiceLine: s16'vxxx507'
 	sprite: s32'zmb262_03', 1
 	moveToPosType: (ENEMY_MAIN_PLAYER), (ZERO)
 	ifOperation: (IS_LESS_OR_EQUAL), var(PosY), int(50000) {
 		copyVar: var(PosY), int(50000)
 	} endIf: 
 	addXPosition: 250000
 	addYPosition: 250000
 	faceOpponent: 
 	displayModel: 1
 	setNoCollision: 1
 	pushCollisionHeightLow: 40000
 	screenCollision: 1
 	enableSuperArmor: 0
 	resetSpeed: 1
 	resetWeightDefault: 
 	createParticle: s32'cmn_Warp', (CENTER)
 	jumpToStateInObject: (PARENT), s32'landing_end'
 	sprite: s32'zmb262_03', 1
 	sprite: s32'zmb262_04', 2
 	addYSpeed: -10000
 	objectGravity: 
 	cmnSfx: s32'ARC_BTL_CMN_Furi_Hiji'
 	sprite: s32'zmb262_05', 2
 	sprite: s32'zmb262_06', 2
 	enableHitbox: 
 	callSubroutine: s32'cmnAtkLevel_3_AtkInit'
 	callSubroutine: s32'cmnAssist3LastAtk'
 	atkHitCommonSEReset: s32'ARC_BTL_CMN_Hit_Large-A'
 	mouthPose: 2
 	createObject: s32'cmn_Windpressure_Tate', (ZERO)
 	sprite: s32'zmb262_07', 2
 	sprite: s32'zmb262_08', 3
 	recoveryState: 
 	screenCollision: 0
 	pushCollisionHeightLow: 268435455
 	sprite: s32'zmb262_09', 3
 	sprite: s32'zmb262_10', 3
 	sprite: s32'zmb262_11', 3
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb262_12', 3
 	sprite: s32'zmb022_02', 3
 	sprite: s32'zmb022_03', 3
 	sprite: s32'zmb022_04', 3
 	sprite: s32'zmb022_05', 3
 	spriteEnd: 
 	gotoLabel: s32'downloop'
 	label: s32'landing_end'
 	sprite: s32'zmb037_03', 3
 	resetSpeed: 1
 	resetWeightDefault: 
 	deactivateObjectByName: s32'zmb232_Eff'
 	sprite: s32'zmb037_02', 3
 	sprite: s32'zmb037_01', 3
 	sprite: s32'zmb037_00', 3
 	label: s32'end'
 	resetSpeed: 1
 	resetWeightDefault: 
 	deactivateObjectByName: s32'zmb232_Eff'
 	gotoLabelIfTrue: s32'air_end', var(IsAir)
 	sprite: s32'zmb000_00', 3
 	sprite: s32'zmb010_00', 4
 	sprite: s32'zmb010_01', 4
 	spriteEnd: 
 	exitState: 
 	label: s32'air_end'
 	sprite: s32'zmb038_00', 2
 	sprite: s32'zmb038_01', 2
 	sprite: s32'zmb038_02', 2
 	sprite: s32'zmb038_03', 2
 	sprite: s32'zmb038_04', 3
 	spriteEnd: 
 } endState: 
 
 beginState: s32'ChangeEnterAttackUltimate1' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnChangeUltimateInit'
 	} endUpon: 
 	sprite: s32'zmb022_06', 1
 	sprite: s32'zmb022_06', 1
 	if: var(act7) {
 		moveTo: (ENEMY_MAIN_PLAYER)
 		setYPosition: 30000
 		addXPosition: -500000
 	} endIf: 
 	label: s32'downloop'
 	sprite: s32'zmb022_06', 3
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb022_07', 3
 	sprite: s32'zmb022_08', 3
 	spriteEnd: 
 	gotoLabel: s32'downloop'
 	label: s32'landing'
 	sprite: s32'zmb010_00', 3
 	jumpToState: s32'Seinarugyakurin'
 	spriteEnd: 
 } endState: 
 
 beginState: s32'ChangeEnterAttackUltimate2' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnChangeUltimateInit'
 	} endUpon: 
 	sprite: s32'zmb022_06', 1
 	sprite: s32'zmb022_06', 1
 	label: s32'downloop'
 	sprite: s32'zmb022_06', 3
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb022_07', 3
 	sprite: s32'zmb022_08', 3
 	spriteEnd: 
 	gotoLabel: s32'downloop'
 	label: s32'landing'
 	sprite: s32'zmb010_00', 3
 	jumpToState: s32'Zettainoikazuti'
 	spriteEnd: 
 } endState: 
 
 beginState: s32'CmnActShotHajiki' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnActHajikiInit'
 	} endUpon: 
 	sprite: s32'zmb301_00', 2
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb301_00', 2
 	sprite: s32'zmb301_01', 3
 	forceRandomVoiceWeak: s16'vxxx124', 100, s16'vxxx125', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb301_02', 10
 	cmnSfx: s32'ARC_BTL_CMN_ShotHajiki_Furi'
 	sprite: s32'zmb301_03', 3
 	mouthPose: (OPEN)
 	label: s32'hajiki'
 	sprite: s32'zmb301_04', 1
 	sprite: s32'zmb301_05', 1
 	createObject: s32'zmb_hajiki', (ZERO)
 	sprite: s32'zmb301_06', 3
 	sprite: s32'zmb301_07', 4
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb301_08', 4
 	sprite: s32'zmb301_09', 3
 	sprite: s32'zmb301_10', 3
 } endState: 
 
 beginState: s32'CmnActGuardCancelAttack' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmn_InitGuardCancelAttack'
 	} endUpon: 
 	sprite: s32'zmb204_00', 1
 	cmnSfx: s32'ARC_BTL_CMN_TLP_Short'
 	sprite: s32'zmb204_01', 1
 	sprite: s32'zmb204_02', 2
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	forceRandomVoice: s16'vxxx127', 100, s16'', 0, s16'', 0, s16'', 0
 	sprite: s32'zmb204_03', 2
 	sprite: s32'zmb204_04', 3
 	cmnSfx: s32'ARC_BTL_CMN_Furi_YokoKeri'
 	sprite: s32'zmb204_05', 2
 	setXSpeed: 50000
 	sprite: s32'zmb204_06', 3
 	mouthPose: (OPEN)
 	createObject: s32'cmn_Windpressure_Yoko', (CENTER)
 	applyTo: (PREVIOUS) {
 		addXPosition: 250000
 	} endApply: 
 	effectForDashStart: 104, 1, 0
 	enableHitbox: 
 	sprite: s32'zmb204_07', 3
 	recoveryState: 
 	enableSuperArmor: 0
 	counterHitUkeru: 1
 	sprite: s32'zmb204_08', 3
 	mouthPose: (SHOW_TEETH)
 	xSpeedPerFrame: 80
 	recoveryState: 
 	sprite: s32'zmb204_09', 3
 	sprite: s32'zmb204_10', 3
 	sprite: s32'zmb204_11', 3
 	dashStopEffect: 104, 1, 1
 	sprite: s32'zmb204_12', 2
 	sprite: s32'zmb204_13', 2
 	sprite: s32'zmb204_14', 2
 	sprite: s32'zmb204_15', 2
 	sprite: s32'zmb204_16', 2
 } endState: 
 
 beginState: s32'CmnActMikiwameMove' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnActMikiwame_AtkInit'
 		upon: (SIGNAL_NAME) {
 			checkSignalName: s32'CameraCombo_Mikiwame'
 			if: var(Result) {
 				atkHitPositionType: 4, 280000, 10000
 				cameraMotion: -93245, 310350, 92528, 459, 4391, 0, 54, 1, 20, 15, 1
 			} endIf: 
 		} endUpon: 
 	} endUpon: 
 	gotoLabelIfTrue: s32'air', var(IsAir)
 	sprite: s32'zmb037_00', 1
 	facePose: (STRESSED)
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb037_01', 1
 	sprite: s32'zmb037_02', 1
 	sprite: s32'zmb037_03', 1
 	sprite: s32'zmb037_04', 2
 	spriteEnd: 
 	gotoLabel: s32'warp'
 	label: s32'air'
 	sprite: s32'zmb038_00', 1
 	facePose: (STRESSED)
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb038_01', 1
 	sprite: s32'zmb038_02', 1
 	sprite: s32'zmb038_03', 1
 	sprite: s32'zmb038_04', 2
 	spriteEnd: 
 	label: s32'warp'
 	sprite: s32'zmb261_02ex00', 1
 	spriteEnd: 
 	gotoLabel: s32'warp'
 	label: s32'warp_end'
 	if: var(act0) {
 		gotoLabelIfTrue: s32'Warp_Sparking', var(act1)
 	} endIf: 
 	sprite: s32'zmb261_02ex00', 2
 	setYSpeed: 9000
 	cmnSfx: s32'ARC_BTL_CMN_Furi_Keri'
 	sprite: s32'zmb261_03ex00', 2
 	sprite: s32'zmb261_04ex00', 3
 	enableHitbox: 
 	mouthPose: (OPEN)
 	sprite: s32'zmb261_05ex00', 4
 	recoveryState: 
 	sprite: s32'zmb261_06ex00', 3
 	sprite: s32'zmb261_07', 3
 	sprite: s32'zmb261_08', 3
 	sprite: s32'zmb261_09', 3
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb022_02', 3
 	sprite: s32'zmb022_03', 2
 	sprite: s32'zmb022_04', 2
 	exitState: 
 	label: s32'Warp_Sparking'
 	sprite: s32'zmb038_02', 3
 	callSubroutine: s32'cmn_NandemoEnableAir'
 	sprite: s32'zmb038_01', 3
 	sprite: s32'zmb038_00', 3
 } endState: 
 
 beginState: s32'CmnActKiaitame' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnKiaitame_Init'
 	} endUpon: 
 	sprite: s32'zmb310_00', 2
 	facePose: (ANGRY)
 	mouthPose: 2
 	voiceLine: s16'vxxx134'
 	cmnSfx: s32'ARC_BTL_CMN_Charge_Bishi'
 	sprite: s32'zmb310_01', 2
 	sprite: s32'zmb310_02', 2
 	sprite: s32'zmb310_03', 2
 	sprite: s32'zmb310_04', 2
 	sprite: s32'zmb310_05', 2
 	sprite: s32'zmb310_06', 2
 	cmnSfx: s32'ARC_BTL_CMN_Charge_Start'
 	sprite: s32'zmb310_07', 2
 	sprite: s32'zmb310_08', 2
 	sprite: s32'zmb310_09', 2
 	sprite: s32'zmb310_07', 2
 	sprite: s32'zmb310_08', 2
 	sprite: s32'zmb310_09', 2
 	label: s32'loop'
 	sprite: s32'zmb310_07', 2
 	sprite: s32'zmb310_08', 2
 	sprite: s32'zmb310_09', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 	label: s32'end'
 	sprite: s32'zmb310_09', 3
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb310_10', 3
 } endState: 
 
 beginState: s32'CmnActFinishChaseLand' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnAtkRushFinishChaseInit'
 		atkHitCommonSEReset: s32'ARC_BTL_GBR_Sword_Hit'
 	} endUpon: 
 	sprite: s32'zmb404_00', 1
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb404_01', 2
 	sprite: s32'zmb404_02', 2
 	characterSfx: s32'ARC_BTL_ZMB_Seigi_SwordSet'
 	sprite: s32'zmb404_03', 2
 	sprite: s32'zmb404_06', 2
 	sprite: s32'zmb404_07', 2
 	characterSfx: s32'ARC_BTL_ZMB_Seigi_SwordFuri'
 	sprite: s32'zmb404_08', 2
 	cameraMotion: -201000, 354400, 93500, 791, 6635, -3580, 54, 2, 9999, 15, 1
 	sprite: s32'zmb404_09', 2
 	mouthPose: (OPEN)
 	enableHitbox: 
 	callSubroutine: s32'cmnShakeRushFinish'
 	createObject: s32'zmb404_slashEff', (ZERO)
 	attackDamageEffect: 4, s32'cmn_slash_s_tate'
 	sprite: s32'zmb404_10', 2
 	recoveryState: 
 	sprite: s32'zmb404_11', 2
 	sprite: s32'zmb404_14', 2
 	sprite: s32'zmb404_15', 2
 	sprite: s32'zmb404_16', 2
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb404_17', 2
 	sprite: s32'null', 100
 	playAnimation: s32'zmb306cs', 0
 	createObject: s32'cmn_DragonRushCamera_m', (PLAYER_LAND)
 	sendSignal: (ENEMY_MAIN_PLAYER), (SIGNAL0)
 	upon: (IDLING) {
 		ifOnFrame: int(0) {
 			createObject: s32'cmn_LastRushSpeed', (ZERO)
 			voiceLine: s16'vxxx117'
 		} endIf: 
 		ifOnFrame: int(11) {
 			createObject: s32'cmn_LastRushAnim', (ZERO)
 		} endIf: 
 		ifOnFrame: int(14) {
 			cmnSfx: s32'ARC_BTL_CMN_DrgnRush_Chase'
 		} endIf: 
 		ifOnFrame: int(20) {
 			createObject: s32'cmn_LastTwinkle', (ZERO)
 		} endIf: 
 		ifOnFrame: int(35) {
 			displayModel: 0
 		} endIf: 
 		ifOnFrame: int(43) {
 			sendSignal: (SELF), (SIGNAL0)
 		} endIf: 
 	} endUpon: 
 } endState: 
 
 beginState: s32'CmnActFinishChaseAir' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnAtkRushFinishChaseInit'
 	} endUpon: 
 	sprite: s32'zmb404_00', 1
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb404_01', 2
 	cmnSfx: s32'ARC_BTL_CMN_DrgnRush_Fnsh'
 	sprite: s32'zmb404_02', 2
 	sprite: s32'zmb404_03', 2
 	sprite: s32'zmb404_06', 2
 	sprite: s32'zmb404_07', 2
 	sprite: s32'zmb404_08', 2
 	cameraMotion: -201000, 354400, 93500, 791, 6635, -3580, 54, 2, 9999, 15, 1
 	sprite: s32'zmb404_09', 2
 	mouthPose: (OPEN)
 	enableHitbox: 
 	callSubroutine: s32'cmnShakeRushFinish'
 	createObject: s32'zmb404_slashEff', (ZERO)
 	attackDamageEffect: 4, s32'cmn_slash_s_tate'
 	sprite: s32'zmb404_10', 2
 	recoveryState: 
 	sprite: s32'zmb404_11', 2
 	sprite: s32'zmb404_14', 2
 	sprite: s32'zmb404_15', 2
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb404_16', 1
 	sprite: s32'zmb404_17', 1
 	sprite: s32'null', 100
 	playAnimation: s32'zmb306cs', 0
 	createObject: s32'cmn_DragonRushCamera_m', (PLAYER_LAND)
 	sendSignal: (ENEMY_MAIN_PLAYER), (SIGNAL0)
 	upon: (IDLING) {
 		ifOnFrame: int(0) {
 			createObject: s32'cmn_LastRushSpeed', (ZERO)
 			voiceLine: s16'vxxx117'
 		} endIf: 
 		ifOnFrame: int(11) {
 			createObject: s32'cmn_AirLastRushAnim', (ZERO)
 		} endIf: 
 		ifOnFrame: int(14) {
 			cmnSfx: s32'ARC_BTL_CMN_DrgnRush_Chase'
 		} endIf: 
 		ifOnFrame: int(20) {
 			createObject: s32'cmn_LastTwinkle', (ZERO)
 		} endIf: 
 		ifOnFrame: int(35) {
 			displayModel: 0
 		} endIf: 
 		ifOnFrame: int(43) {
 			sendSignal: (SELF), (SIGNAL0)
 		} endIf: 
 	} endUpon: 
 } endState: 
 
 beginState: s32'CmnActFinishChange' {
 	upon: (IMMEDIATE) {
 		playerActionInitializeByCategory: 17, 0
 		callSubroutine: s32'cmnActRushFinishChangeInit'
 	} endUpon: 
 	gotoLabelIfTrue: s32'air', var(IsAir)
 	sprite: s32'zmb204_00', 2
 	facePose: (ANGRY)
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb204_01', 2
 	sprite: s32'zmb204_02', 2
 	voiceLine: s16'vxxx119'
 	sprite: s32'zmb204_03', 2
 	sprite: s32'zmb204_04', 2
 	sprite: s32'zmb204_05', 2
 	setXSpeed: 30000
 	cmnSfx: s32'ARC_BTL_CMN_Furi_YokoKeri'
 	sprite: s32'zmb204_06', 3
 	effectForDashStart: 104, 1, 0
 	enableHitbox: 
 	sprite: s32'zmb204_07', 3
 	facePose: (ANGRY)
 	mouthPose: 2
 	xSpeedPerFrame: 80
 	recoveryState: 
 	sprite: s32'zmb204_08', 3
 	sprite: s32'zmb204_09', 2
 	sprite: s32'zmb204_10', 2
 	sprite: s32'zmb204_11', 2
 	mouthPose: (SHOW_TEETH)
 	dashStopEffect: 104, 1, 1
 	sprite: s32'zmb204_12', 2
 	sprite: s32'zmb204_13', 2
 	sprite: s32'zmb204_14', 2
 	sprite: s32'zmb204_15', 2
 	sprite: s32'zmb204_16', 2
 	exitState: 
 	label: s32'air'
 	sprite: s32'zmb261_00', 3
 	facePose: (ANGRY)
 	mouthPose: 2
 	sprite: s32'zmb261_01', 3
 	voiceLine: s16'vxxx119'
 	sprite: s32'zmb261_02', 3
 	cmnSfx: s32'ARC_BTL_CMN_Furi_Keri'
 	sprite: s32'zmb261_03', 3
 	sprite: s32'zmb261_04', 3
 	enableHitbox: 
 	sprite: s32'zmb261_04', 3
 	recoveryState: 
 	sprite: s32'zmb261_05', 4
 	sprite: s32'zmb261_06', 4
 	sprite: s32'zmb261_07', 4
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb261_08', 4
 	sprite: s32'zmb261_09', 3
 } endState: 
 
 beginState: s32'CmnActRushFinishDamage' {
 	upon: (IMMEDIATE) {
 		playerActionInitializeByCategory: 17, 0
 		callSubroutine: s32'cmnActRushFinishDamageInit'
 	} endUpon: 
 	gotoLabelIfTrue: s32'air', var(IsAir)
 	sprite: s32'zmb203_00', 2
 	facePose: (ANGRY)
 	mouthPose: 2
 	characterSfx: s32'ARC_BTL_ZMB_AtkB_Basa'
 	sprite: s32'zmb203_01', 3
 	sprite: s32'zmb203_02', 3
 	randomVoice: s16'vxxx116', 100, s16'vxxx118', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb203_03', 2
 	characterSfx: s32'ARC_BTL_ZMB_AtkA_Furi_1'
 	sprite: s32'zmb203_04', 2
 	sprite: s32'zmb203_05', 3
 	setXSpeed: 40000
 	effectForDashStart: 104, 1, 0
 	attackDamageEffect: 4, s32'cmn_slash_s'
 	atkHitCommonSEReset: s32'ARC_BTL_VTB_Atk5D_Hit'
 	guardSoundEffect: s32''
 	guardSoundEffect: s32'ARC_BTL_VTB_Barrier_Guard'
 	enableHitbox: 
 	sprite: s32'zmb203_06', 2
 	recoveryState: 
 	sprite: s32'zmb203_07', 2
 	xSpeedPerFrame: 80
 	sprite: s32'zmb203_08', 2
 	sprite: s32'zmb203_09', 2
 	sprite: s32'zmb203_10', 3
 	mouthPose: (SHOW_TEETH)
 	dashStopEffect: 128, 1, 1
 	sprite: s32'zmb203_11', 4
 	sprite: s32'zmb203_12', 4
 	sprite: s32'zmb203_13', 3
 	spriteEnd: 
 	exitState: 
 	label: s32'air'
 	sprite: s32'zmb262_00', 2
 	facePose: (ANGRY)
 	mouthPose: 2
 	sprite: s32'zmb262_01', 2
 	sprite: s32'zmb262_02', 2
 	randomVoice: s16'vxxx116', 100, s16'vxxx118', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb262_03', 2
 	sprite: s32'zmb262_04', 2
 	cmnSfx: s32'ARC_BTL_CMN_Furi_Hiji'
 	sprite: s32'zmb262_05', 2
 	sprite: s32'zmb262_06', 3
 	createObject: s32'cmn_Windpressure_Tate', (ZERO)
 	enableHitbox: 
 	sprite: s32'zmb262_07', 3
 	recoveryState: 
 	sprite: s32'zmb262_08', 4
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb262_09', 4
 	sprite: s32'zmb262_10', 4
 	sprite: s32'zmb262_11', 4
 	sprite: s32'zmb262_12', 3
 } endState: 
 
 beginState: s32'NmlAtk5A' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnNmlAtk5A_AtkInit'
 		callSubroutine: s32'cmnNmlAtk5A_Init'
 		attackDamageEffect: 4, s32'cmn_slash_s'
 		atkHitCommonSEReset: s32'ARC_BTL_VTB_Atk5D_Hit'
 		guardSoundEffect: s32''
 		guardSoundEffect: s32'ARC_BTL_VTB_Barrier_Guard'
 	} endUpon: 
 	sprite: s32'zmb200_00', 2
 	sprite: s32'zmb200_01', 2
 	sprite: s32'zmb200_02', 1
 	attackVoice: 0, -1
 	characterSfx: s32'ARC_BTL_ZMB_AtkA_Furi_1'
+	checkLastStateName: s32'NmlAtk5A'
+	ifNot: var(Result) {
+		setXSpeed: 40000
+		xSpeedPerFrame: 80
+	} endIf: 
 	sprite: s32'zmb200_03', 3
 	createObject: s32'zmb200_Eff', (ZERO)
 	callSubroutine: s32'cmnRendaChain_Clear_Idling'
 	enableHitbox: 
 	sprite: s32'zmb200_04', 4
 	recoveryState: 
 	enableWhiffCancel: 1
 	sprite: s32'zmb200_05', 3
 	sprite: s32'zmb200_06', 3
 	enableWhiffCancel: 0
 	sprite: s32'zmb200_07', 2
 } endState: 
 
 beginState: s32'NmlAtk5A2nd' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnNmlAtk5A2nd_AtkInit'
 		callSubroutine: s32'cmnNmlAtk5A2nd_Init'
 		attackDamageEffect: 4, s32'cmn_slash_s'
 		atkHitCommonSEReset: s32'ARC_BTL_VTB_Atk5D_Hit'
 		guardSoundEffect: s32''
 		guardSoundEffect: s32'ARC_BTL_VTB_Barrier_Guard'
 		upon: (ON_ATTACK_COLLISION_MAIN_PLAYER) {
 			xSpeedPerFrame: 30
 		} endUpon: 
 	} endUpon: 
 	sprite: s32'zmb201_00', 2
 	facePose: (STRESSED)
 	sprite: s32'zmb201_01', 2
 	sprite: s32'zmb201_02', 2
 	attackVoice: 1, -1
 	sprite: s32'zmb201_03', 2
 	characterSfx: s32'ARC_BTL_ZMB_AtkA_Furi_2'
 	sprite: s32'zmb201_04', 2
 	setXSpeed: 150000
-	xSpeedPerFrame: 70
+	xSpeedPerFrame: 75
 	createObject: s32'zmb201_Eff', (ZERO)
 	effectForLanding: 100, 1, 0
 	callSubroutine: s32'cmnRendaChain_Clear_Idling'
 	enableHitbox: 
 	sprite: s32'zmb201_05', 2
 	dashStopEffect: 104, 1, 1
 	sprite: s32'zmb201_06', 6
 	recoveryState: 
 	enableWhiffCancel: 1
 	sprite: s32'zmb201_07', 3
 	sprite: s32'zmb201_07', 1
 	enableWhiffCancel: 0
 	sprite: s32'zmb201_08', 4
 	sprite: s32'zmb201_09', 3
 } endState: 
 
 beginState: s32'NmlAtk5A3rd' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnAtkTemplNageLand'
 		atkRange: 330000, 0, 300000, 0
 		canGrab: 1
 		jumpToStateOnHit: s32'NmlAtk5A3rdExe'
 		atkHitCommonSEReset: s32'ARC_BTL_VTB_Atk5D_Hit'
 		guardSoundEffect: s32''
 		guardSoundEffect: s32'ARC_BTL_VTB_Barrier_Guard'
 		atkShakeCamera: s32'ShakeYoko', 900, 0, 10, 5
 		upon: (ON_ATTACK_HIT_MAIN_PLAYER_DAMAGE) {
 			clearRegisteredUponCode: (ON_ATTACK_HIT_MAIN_PLAYER_DAMAGE)
 			createParticle: s32'cmn_hit_m', (EX_POINT_0)
 		} endUpon: 
 	} endUpon: 
 	sprite: s32'zmb202_00', 1
 	facePose: (ANGRY)
 	mouthPose: 2
 	setXSpeed: 5000
 	sprite: s32'zmb202_01', 2
 	createObject: s32'ZMB202_Aura', (HAND_L_3D)
 	sprite: s32'zmb202_02', 2
 	characterSfx: s32'ARC_BTL_ZMB_AtkA_Furi_3'
 	attackVoice: 1, -1
 	sprite: s32'zmb202_03', 2
 	sprite: s32'zmb202_04', 2
 	sprite: s32'zmb202_05', 1
-	setXSpeed: 150000
-	xSpeedPerFrame: 70
+	setXSpeed: 200000
+	xSpeedPerFrame: 80
 	createObject: s32'ZMB202_Strike', (ZERO)
 	callSubroutine: s32'cmnRendaChain_Clear_Idling'
 	sprite: s32'zmb202_05', 1
 	if: var(IN_BATTLE) {
 		enableHitbox: 
 	} endIf: 
 	xSpeedPerFrame: 50
 	sprite: s32'zmb202_06', 5
 	dashStopEffect: 104, 1, 1
 	recoveryState: 
 	sprite: s32'zmb202_22', 3
 	sprite: s32'zmb202_23', 3
 	sprite: s32'zmb202_24', 3
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb202_25', 3
 	sprite: s32'zmb202_26', 3
 	sprite: s32'zmb202_27', 3
 } endState: 
 
 beginState: s32'NmlAtk5A3rdExe' {
 	upon: (IMMEDIATE) {
 		initializeForLockExe: 17, 1
 		callSubroutine: s32'cmnAtkTemplNageExe'
 		callSubroutine: s32'cmnNmlAtk5A3rd_AtkInit'
 		callSubroutine: s32'cmnNmlAtk5A3rd_Init'
 		callSubroutine: s32'cmn_KuzushiHosei'
 		airHitstun: 40
 		airKnockbackEffect: (AIR_FACE_UP)
 		atkMainPlayerHitOnly: 1
 		expandHitboxToFullscreen: 1
 		noHitstunScaling: 0
 		damageScalingOverride: 500
 		atkHitCommonSEReset: s32'demo'
 		guardSoundEffect: s32''
 		guardSoundEffect: s32'demo'
 		enableSpecialCancel: 1
 		enableAssistAttack: 0
 	} endUpon: 
 	sprite: s32'zmb202_07', 1
 	createObject: s32'ZMB202_CaptureEff', (ENEMY_HEART)
 	moveCameraEx: (SELF_MAIN_PLAYER), -56409, 336358, 36122, 3178, 4125, 0, 54, 30, 13, 10, 0, 2, 0
 	forceStopAllAssistAttack: 
 	enemyGrabbedFrame: 46
 	applyTo: (ENEMY_MAIN_PLAYER) {
 		setYPosition: 1
 		moveToPosType: (ENEMY_MAIN_PLAYER), (AFRO_3D)
 	} endApply: 
 	characterSfx: s32'ARC_BTL_ZMB_AtkA_Exe'
 	sprite: s32'zmb202_07', 5
 	faceAnimation: 21
 	mouthPose: (OPEN)
 	applyTo: (ENEMY_MAIN_PLAYER) {
 		setYSpeed: 9000
 	} endApply: 
 	forceRandomVoice: s16'vxxx108', 100, s16'vxxx109', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb202_08', 4
 	sprite: s32'zmb202_09', 4
 	sprite: s32'zmb202_10', 3
 	applyTo: (ENEMY_MAIN_PLAYER) {
 		resetSpeed: 1
 	} endApply: 
 	sprite: s32'zmb202_11', 3
 	sprite: s32'zmb202_12', 3
 	sprite: s32'zmb202_10', 3
 	sprite: s32'zmb202_11', 3
 	sprite: s32'zmb202_13', 3
 	enableAssistAttack: 1
 	deactivateObjectByName: s32'ZMB202_CaptureEff'
 	createObject: s32'ZMB202_AuraBurst', (ZERO)
 	callSubroutine: s32'cmnRendaChain_Clear_Idling'
 	grabOrRelease: 
 	atkShakeCamera: s32'ShakeTate', 1500, 0, 25, 5
 	sprite: s32'zmb202_14', 3
 	sprite: s32'zmb202_15', 3
 	recoveryState: 
 	sprite: s32'zmb202_16', 3
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb202_17', 3
 	sprite: s32'zmb202_18', 3
 	sprite: s32'zmb202_19', 3
 	sprite: s32'zmb202_20', 3
 	sprite: s32'zmb202_21', 3
 } endState: 
 
 beginState: s32'NmlAtk2A' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnNmlAtk2A_AtkInit'
 		callSubroutine: s32'cmnNmlAtk2A_Init'
 		attackGuardtype: (LOW)
 	} endUpon: 
 	checkLastStateName: s32'NmlAtk2A'
 	gotoLabelIfTrue: s32'Renda', var(Result)
 	sprite: s32'zmb230_00', 2
 	sprite: s32'zmb230_01', 2
 	sprite: s32'zmb230_02', 2
 	attackVoice: 0, -1
 	commonSetSE: s32'FuriShort', 0, 100
 	sprite: s32'zmb230_03', 2
 	enableHitbox: 
+	setXSpeed: 100000
+	xSpeedPerFrame: 70
 	sprite: s32'zmb230_04', 1
 	sprite: s32'zmb230_04', 2
 	enableWhiffCancel: 1
 	recoveryState: 
 	sprite: s32'zmb230_05', 4
 	sprite: s32'zmb230_06', 4
 	sprite: s32'zmb230_07', 3
 	enableWhiffCancel: 0
 	spriteEnd: 
 	exitState: 
 	label: s32'Renda'
 	sprite: s32'zmb230_01', 3
 	sprite: s32'zmb230_02', 1
 	sprite: s32'zmb230_02', 2
 	commonSetSE: s32'FuriShort', 0, 100
 	sprite: s32'zmb230_03', 2
 	enableHitbox: 
 	sprite: s32'zmb230_04', 1
 	sprite: s32'zmb230_04', 2
 	enableWhiffCancel: 1
 	recoveryState: 
 	sprite: s32'zmb230_05', 4
 	sprite: s32'zmb230_06', 4
 	sprite: s32'zmb230_07', 3
 	enableWhiffCancel: 0
 } endState: 
 
 beginState: s32'NmlAtk5B' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnNmlAtk5B_AtkInit'
 		callSubroutine: s32'cmnNmlAtk5B_Init'
 		attackDamageEffect: 4, s32'cmn_slash_s'
 		atkHitCommonSEReset: s32'ARC_BTL_VTB_Atk5D_Hit'
 		guardSoundEffect: s32''
 		guardSoundEffect: s32'ARC_BTL_VTB_Barrier_Guard'
 		upon: (ON_ATTACK_HIT_PLAYER_GUARD) {
 			percentageXSpeed: 30
 		} endUpon: 
 	} endUpon: 
 	sprite: s32'zmb203_00', 1
 	facePose: (STRESSED)
 	mouthPose: (SHOW_TEETH)
 	characterSfx: s32'ARC_BTL_ZMB_AtkB_Basa'
 	sprite: s32'zmb203_01', 2
 	sprite: s32'zmb203_02', 2
 	attackVoice: 1, -1
 	sprite: s32'zmb203_03', 1
 	characterSfx: s32'ARC_BTL_ZMB_AtkA_Furi_1'
 	sprite: s32'zmb203_04', 1
 	sprite: s32'zmb203_05', 2
 	enableHitbox: 
 	setXSpeed: 40000
 	setInertia: 40000
 	callSubroutine: s32'cmnRendaChain_Clear_Idling'
 	createObject: s32'zmb203_Eff', (ZERO)
 	effectForDashStart: 104, 1, 0
 	sprite: s32'zmb203_06', 2
 	xSpeedPerFrame: 60
 	sprite: s32'zmb203_09', 2
 	recoveryState: 
 	sprite: s32'zmb203_10', 5
 	dashStopEffect: 128, 1, 1
 	sprite: s32'zmb203_11', 5
 	sprite: s32'zmb203_12', 4
 	sprite: s32'zmb203_13', 3
 } endState: 
 
 beginState: s32'NmlAtk2B' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnNmlAtk2B_AtkInit'
 		callSubroutine: s32'cmnNmlAtk2B_Init'
 		attackDamageEffect: 4, s32'cmn_slash_s'
 		atkAngle: -45
 		atkHitCommonSEReset: s32'ARC_BTL_VTB_Atk5D_Hit'
 		guardSoundEffect: s32''
 		guardSoundEffect: s32'ARC_BTL_VTB_Barrier_Guard'
 		if: var(MediumAutocombo) {
 			addBRendaChainPD: s32'BRendaChainSpecial'
 		} endIf: 
 	} endUpon: 
 	sprite: s32'zmb231_00', 3
 	facePose: (STRESSED)
 	mouthPose: (OPEN)
 	sprite: s32'zmb231_01', 3
 	setXSpeed: 10000
 	attackVoice: 1, -1
 	characterSfx: s32'ARC_BTL_ZMB_AtkB_Syuba'
 	sprite: s32'zmb231_02', 2
 	sprite: s32'zmb231_03', 2
 	characterSfx: s32'ARC_BTL_ZMB_AtkA_Furi_1'
 	sprite: s32'zmb231_04', 3
 	enableHitbox: 
 	callSubroutine: s32'cmnRendaChain_Clear_Idling'
 	xSpeedPerFrame: 70
 	createObject: s32'zmb231_Eff', (ZERO)
 	dashStopEffect: 125, 1, 0
 	sprite: s32'zmb231_05', 3
 	recoveryState: 
 	sprite: s32'zmb231_06', 3
 	sprite: s32'zmb231_07', 3
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb231_08', 3
 	sprite: s32'zmb231_09', 3
 	sprite: s32'zmb231_10', 3
 } endState: 
 
 beginState: s32'NmlAtk6B' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnNmlAtk6B_AtkInit'
 		callSubroutine: s32'cmnNmlAtk6B_Init'
 	} endUpon: 
 	sprite: s32'zmb010_00', 2
 	facePose: (ANGRY)
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb010_01', 2
 	sprite: s32'zmb021_00', 2
 	sprite: s32'zmb021_01', 2
 	sprite: s32'zmb262_00', 2
 	sprite: s32'zmb262_01', 2
 	sprite: s32'zmb262_02', 2
 	sprite: s32'zmb262_03', 3
 	attackVoice: 1, -1
 	sprite: s32'zmb262_04', 3
 	sprite: s32'zmb262_05', 3
 	cmnSfx: s32'ARC_BTL_CMN_Furi_Hiji'
 	sprite: s32'zmb262_06ex00', 3
 	mouthPose: 2
 	enableHitbox: 
 	sprite: s32'zmb262_07ex00', 3
 	sprite: s32'zmb262_08', 3
 	recoveryState: 
 	sprite: s32'zmb262_09', 3
 	sprite: s32'zmb262_10', 4
 	sprite: s32'zmb262_11', 4
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb262_12', 3
 	sprite: s32'zmb022_05', 3
 	label: s32'loop'
 	sprite: s32'zmb022_06', 3
 	sprite: s32'zmb022_07', 3
 	sprite: s32'zmb022_08', 3
 	spriteEnd: 
 	gotoLabelIfOperation: s32'loop', (IS_LESS_OR_EQUAL), var(LoopCount), int(100)
 } endState: 
 
 beginState: s32'NmlAtk5C' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnNmlAtk5C_AtkInit'
 		callSubroutine: s32'cmnNmlAtk5C_Init'
 		upon: (SIGNAL_NAME) {
 			checkSignalName: s32'CameraCombo_5C'
 			if: var(Result) {
 				atkHitPositionType: 4, 280000, 10000
 				cameraMotion: -85500, 333151, 113514, 0, 4511, 0, 54, 1, 25, 10, 1
 				if: var(Direction) {
 					ifOperation: (IS_LESS_OR_EQUAL), var(PosXRaw), int(-2835000) {
 						copyVar: var(PosXRaw), int(-2835000)
 					} endIf: 
 				} endIf: 
 				else:  {
 					ifOperation: (IS_GREATER_OR_EQUAL), var(PosXRaw), int(2835000) {
 						copyVar: var(PosXRaw), int(2835000)
 					} endIf: 
 				} endElse: 
 			} endIf: 
 		} endUpon: 
 	} endUpon: 
 	sprite: s32'zmb204_00', 2
 	facePose: (ANGRY)
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb204_01', 2
 	sprite: s32'zmb204_02', 3
 	attackVoice: 2, -1
 	sprite: s32'zmb204_03', 2
 	addPositionX: 20000
 	sprite: s32'zmb204_04', 3
 	addPositionX: 20000
 	setXSpeed: 20000
 	sprite: s32'zmb204_05', 2
 	cmnSfx: s32'ARC_BTL_CMN_Furi_YokoKeri'
 	setXSpeed: 40000
 	sprite: s32'zmb204_06', 2
 	mouthPose: 2
 	setXSpeed: 80000
 	createObject: s32'cmn_Windpressure_Yoko', (CENTER)
 	applyTo: (PREVIOUS) {
 		addXPosition: 250000
 	} endApply: 
 	effectForDashStart: 104, 1, 0
 	callSubroutine: s32'cmnRendaChain_Clear_Idling'
 	enableHitbox: 
 	sprite: s32'zmb204_07', 2
 	xSpeedPerFrame: 80
 	sprite: s32'zmb204_08', 3
 	recoveryState: 
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb204_09', 2
 	sprite: s32'zmb204_10', 2
 	sprite: s32'zmb204_11', 3
 	effectForLanding: 100, 1, 1
 	sprite: s32'zmb204_12', 3
 	sprite: s32'zmb204_13', 2
 	sprite: s32'zmb204_14', 2
 	sprite: s32'zmb204_15', 2
 	sprite: s32'zmb204_16', 2
 } endState: 
 
 beginState: s32'NmlAtk2C' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnNmlAtk2C_AtkInit'
 		callSubroutine: s32'cmnNmlAtk2C_Init'
 		groundKnockbackEffect: (AIR_DEFAULT)
 		airKnockbackEffect: (AIR_DEFAULT)
 		atkHitCommonSEReset: s32'ARC_BTL_GBR_Sword_Hit'
 		finishCameraRequest: s32'FinishCamera_NmlAtk2C'
 		upon: (SIGNAL_NAME) {
 			checkSignalName: s32'CameraCombo_2C'
 			if: var(Result) {
 				atkHitPositionType: 4, 270000, 200000
 				cameraMotion: 24995, 294427, 115680, 1926, 1013, 0, 72, 1, 25, 10, 1
 				attackDamageEffect: 1, s32''
 				atkShakeCamera: s32'ShakeTate', 1200, 0, 20, 5
 			} endIf: 
 		} endUpon: 
 		upon: (ATTACK_HIT_PLAYER_DAMAGE) {
 		} endUpon: 
 	} endUpon: 
 	sprite: s32'zmb232_00', 3
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	percentageInertia: 130
 	sprite: s32'zmb232_01', 2
 	setCrouch: 0
 	callSubroutine: s32'cmn_ShotMutekiArmor'
 	superArmorHitstop: 0, 0
 	sprite: s32'zmb232_02', 2
 	attackVoice: 2, -1
 	sprite: s32'zmb232_03', 1
 	sprite: s32'zmb232_04', 1
 	characterSfx: s32'ARC_BTL_ZMB_Atk2C_Bishi'
 	sprite: s32'zmb232_05', 3
 	characterSfx: s32'ARC_BTL_ZMB_Atk2C_Attack'
 	sprite: s32'zmb232_08', 2
 	mouthPose: (OPEN)
 	createObject: s32'zmb232_Eff', (EX_POINT_0)
 	createObject: s32'cmn_kidan_smoke', (PLAYER_LAND)
 	sprite: s32'zmb232_09', 3
 	enableHitbox: 
 	callSubroutine: s32'cmnRendaChain_Clear_Idling'
 	percentageInertia: 50
 	sprite: s32'zmb232_10', 3
 	sprite: s32'zmb232_08', 3
 	recoveryState: 
 	callSubroutine: s32'cmn_ShotMutekiArmor_End'
 	headInvul: 0
 	sprite: s32'zmb232_09', 3
 	sprite: s32'zmb232_10', 3
 	sprite: s32'zmb232_11', 3
 	sprite: s32'zmb232_12', 3
 	sprite: s32'zmb232_13', 3
 	sprite: s32'zmb232_14', 5
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb232_15', 4
 	sprite: s32'zmb232_16', 3
 } endState: 
 
 beginState: s32'NmlAtk5D' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnNmlAtk5D_Init'
 		upon: (SIGNAL_NAME) {
 			checkSignalName: s32'ZMB_5Datk'
 			if: var(Result) {
 				spriteAddTime: 5
 				clearRegisteredUponCode: (SIGNAL_NAME)
 			} endIf: 
 		} endUpon: 
 	} endUpon: 
 	sprite: s32'zmb205_00', 1
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb205_01', 2
 	createObject: s32'kidan_start', (EX_POINT_0)
 	sprite: s32'zmb205_02', 1
 	sprite: s32'zmb205_02', 1
 	cmnSfx: s32'ARC_BTL_CMN_kidan_Chrg'
 	randomVoiceLine2: s16'vxxx106', 100, s16'vxxx107', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb205_03', 2
 	sprite: s32'zmb205_04', 2
 	sprite: s32'zmb205_05', 3
 	cmnSfx: s32'ARC_BTL_CMN_kidan_Fire1'
 	sprite: s32'zmb205_06', 1
 	sprite: s32'zmb205_07', 2
 	mouthPose: (OPEN)
 	deactivateObjectByName: s32'kidan_start'
 	createObject: s32'kidan_5D', (EX_POINT_0)
 	putObjectIntoStack: (STACK7), (PREVIOUS)
 	createParticle: s32'zmb_kidan_mazzle', (EX_POINT_0)
 	createObject: s32'cmn_kidan_smoke', (PLAYER_LAND)
 	sprite: s32'zmb205_08', 3
 	sprite: s32'zmb205_09', 3
 	sprite: s32'zmb205_10', 3
 	sprite: s32'zmb205_11', 3
 	clearRegisteredUponCode: (SIGNAL_NAME)
 	sprite: s32'zmb205_12', 3
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb205_13', 3
 	sprite: s32'zmb205_14', 3
 } endState: 
 
 beginState: s32'NmlAtkAir5A' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnNmlAtkAir5A_AtkInit'
 		callSubroutine: s32'cmnNmlAtkAir5A_Init'
 		atkHitCommonSEReset: s32'ARC_BTL_VTB_Atk5D_Hit'
 		guardSoundEffect: s32''
 		guardSoundEffect: s32'ARC_BTL_VTB_Barrier_Guard'
 		attackDamageEffect: 4, s32'cmn_slash_s'
 	} endUpon: 
 	sprite: s32'zmb260_00', 2
 	facePose: (STRESSED)
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb260_01', 2
 	sprite: s32'zmb260_02', 2
 	attackVoice: 0, -1
 	characterSfx: s32'ARC_BTL_ZMB_AtkA_Furi_1'
 	sprite: s32'zmb260_03', 4
 	createObject: s32'zmb260_Eff', (ZERO)
 	callSubroutine: s32'cmnRendaChain_Clear_Idling'
 	enableHitbox: 
 	sprite: s32'zmb260_04', 2
 	sprite: s32'zmb260_05', 4
 	recoveryState: 
 	sprite: s32'zmb260_06', 4
 	sprite: s32'zmb260_07', 4
 	sprite: s32'zmb260_08', 3
 } endState: 
 
 beginState: s32'NmlAtkAir5B' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnNmlAtkAir5B_AtkInit'
 		callSubroutine: s32'cmnNmlAtkAir5B_Init'
 	} endUpon: 
 	sprite: s32'zmb261_00', 2
 	facePose: (STRESSED)
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb261_01', 2
 	sprite: s32'zmb261_02', 3
 	attackVoice: 1, -1
 	cmnSfx: s32'ARC_BTL_CMN_Furi_Keri'
 	sprite: s32'zmb261_03', 2
 	sprite: s32'zmb261_04', 2
 	mouthPose: (OPEN)
 	callSubroutine: s32'cmnRendaChain_Clear_Idling'
 	enableHitbox: 
 	sprite: s32'zmb261_05', 2
 	sprite: s32'zmb261_06', 5
 	recoveryState: 
 	sprite: s32'zmb261_07', 3
 	sprite: s32'zmb261_08', 4
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb261_09', 3
 } endState: 
 
 beginState: s32'NmlAtkAir5C' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnNmlAtkAir5C_AtkInit'
 		callSubroutine: s32'cmnNmlAtkAir5C_Init'
 		upon: (SIGNAL_NAME) {
 			checkSignalName: s32'CameraCombo_Air5C'
 			if: var(Result) {
 				atkHitPositionType: 4, 150000, -150000
 				cameraMotion: -57126, 410143, 152048, -1285, 2587, 0, 54, 1, 25, 10, 1
 			} endIf: 
 		} endUpon: 
 	} endUpon: 
 	sprite: s32'zmb262_00', 3
 	facePose: (ANGRY)
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb262_01', 2
 	sprite: s32'zmb262_02', 2
 	attackVoice: 2, -1
 	sprite: s32'zmb262_03', 3
 	cmnSfx: s32'ARC_BTL_CMN_Furi_Hiji'
 	sprite: s32'zmb262_04', 1
 	sprite: s32'zmb262_05', 1
 	sprite: s32'zmb262_06', 2
 	mouthPose: 2
 	createObject: s32'cmn_Windpressure_Tate', (ZERO)
 	enableHitbox: 
 	sprite: s32'zmb262_07', 2
 	sprite: s32'zmb262_08', 3
 	recoveryState: 
 	sprite: s32'zmb262_09', 5
 	sprite: s32'zmb262_10', 4
 	sprite: s32'zmb262_11', 4
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb262_12', 3
 } endState: 
 
 beginState: s32'NmlAtkAir2C' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnAtkLevel_3_AtkInit'
 		callSubroutine: s32'cmn_AirAtkHosei'
 		groundKnockbackEffect: (AIR_DEFAULT)
 		airKnockbackEffect: (AIR_STRONG)
 		attackGravity: 2400
 		wallBounceCount: 0
 		attackXKnockback: 10000
 		attackYKnockback: -65000
 		airHitstun: 60
 		skillFinishToDownLoop: 1
 		if: var(obj1) {
 			copyVar: var(act2), int(1)
 			copyVar: var(act0), int(1)
 			upon: (ON_ATTACK_COLLISION_MAIN_PLAYER) {
 				removeLandingRecovery: 
 			} endUpon: 
 		} endIf: 
 		if: var(IsSparking) {
 			enableJumpCancel: 1
 			addGatlingOption: s32'CmnFAirDash'
 			addGatlingOption: s32'CmnActFAirDash2Button'
 		} endIf: 
 		finishCameraRequest: s32'FinishCamera_NmlAtkAir2C'
 		upon: (ON_ATTACK_HIT_MAIN_PLAYER_DAMAGE_PRE_CTRL) {
 			ifVarOfObjectFalse: (ENEMY_MAIN_PLAYER), var(CmnCharaReg6) {
 				copyVar: var(act0), int(1)
 			} endIf: 
 			if: var(IN_BATTLE) {
 				if: var(IsMainPlayerSelf) {
 					if: var(act0) {
 						ifNot: var(SmashKnockdown) {
 							copyVar: var(SmashKnockdown), int(1)
 							uiBattleText: (Smash!)
 							cameraMotion: -57126, 410143, 152048, -1285, 2587, 0, 54, 1, 25, 10, 1
 							damage: 1000
 							hitstop: 0
 							slidingKnockdownDuration: 32
 							atkHitPositionType: 4, 300000, -150000
 							atkFrontDirection: 0
 							upon: (ON_PLAYER_AFTER_EXECUTE_DAMAGE) {
 								clearRegisteredUponCode: (ON_PLAYER_AFTER_EXECUTE_DAMAGE)
 								ifBeginAliveEnemyPlayer: 0 {
 									superFreeze: 0, 100, 25, 25
 									cameraShake: s32'ShakeTateYoko', 1000, 0, 18, 1
 								} endIf: 
 							} endUpon: 
 							if: var(Direction) {
 								ifOperation: (IS_LESS_OR_EQUAL), var(PosXRaw), int(-2900000) {
 									copyVar: var(PosXRaw), int(-2900000)
 								} endIf: 
 							} endIf: 
 							else:  {
 								ifOperation: (IS_GREATER_OR_EQUAL), var(PosXRaw), int(2900000) {
 									copyVar: var(PosXRaw), int(2900000)
 								} endIf: 
 							} endElse: 
 							removeLandingRecovery: 
 							attackGravity: 3000
 							setGravity: 3000
 							addYSpeed: -45000
 							ifOperation: (IS_LESS_OR_EQUAL), var(SpeedY), int(-45000) {
 								setYSpeed: -45000
 							} endIf: 
 						} endIf: 
 					} endIf: 
 				} endIf: 
 			} endIf: 
 		} endUpon: 
 	} endUpon: 
 	sprite: s32'zmb262_00', 2
 	facePose: (ANGRY)
 	mouthPose: (SHOW_TEETH)
 	percentageXSpeed: 30
 	ifOperation: (IS_LESS_OR_EQUAL), var(SpeedY), int(0) {
 		setYSpeed: 0
 		setGravity: 0
 	} endIf: 
 	ifOperation: (IS_LESS_OR_EQUAL), var(PosY), int(50000) {
 		copyVar: var(PosY), int(50000)
 	} endIf: 
 	sprite: s32'zmb262_01', 3
 	setInertia: 0
 	setXSpeed: 10000
 	setYSpeed: 30000
 	if: var(act2) {
 		percentageXSpeed: 10
 		addXSpeed: 5000
 		setYSpeed: 20000
 	} endIf: 
 	sprite: s32'zmb262_02', 3
 	sprite: s32'zmb262_03', 2
 	attackVoice: 2, -1
 	sprite: s32'zmb262_03', 3
 	percentageXSpeed: 30
 	percentageYSpeed: 0
 	objectGravity: 
 	if: var(act2) {
 		addYSpeed: -20000
 	} endIf: 
 	sprite: s32'zmb262_04', 2
 	percentageXSpeed: 20
 	addYSpeed: -10000
 	cmnSfx: s32'ARC_BTL_CMN_Furi_Hiji'
 	sprite: s32'zmb262_05', 2
 	sprite: s32'zmb262_06', 2
 	mouthPose: 2
 	createObject: s32'cmn_Windpressure_Tate', (ZERO)
 	callSubroutine: s32'cmnRendaChain_Clear_Idling'
 	enableHitbox: 
 	addYSpeed: -50000
 	ifNot: var(act2) {
 		landingRecovery: 10, 1
 	} endIf: 
 	sprite: s32'zmb262_07', 2
 	sprite: s32'zmb262_08', 3
 	recoveryState: 
 	sprite: s32'zmb262_09', 3
 	sprite: s32'zmb262_10', 3
 	sprite: s32'zmb262_11', 3
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb262_12', 3
 } endState: 
 
 beginState: s32'NmlAtkAir5D' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnNmlAtkAir5D_Init'
 		addGatlingOption: s32'NmlAtkAir2C'
 		whiffCancelOptionBufferTime: s32'NmlAtk2C', 10
 		copyVar: var(act0), int(3)
 		if: var(obj1) {
 			copyVar: var(act5), int(1)
 			copyVar: var(plr0), int(1)
 			addSkillForceDisableFlag: 4
 		} endIf: 
 		upon: (NO_STOP_IDLING) {
 			if: var(act5) {
 				copyVar: var(obj1), int(1)
 				addGatlingOption: s32'NmlAtkAir2C_Hikou'
 				copyVar: var(act1), int(0)
 				checkInput: (INPUT_NOT_L)
 				if: var(Result) {
 					checkInput: (INPUT_NOT_M)
 					if: var(Result) {
 						checkInput: (INPUT_NOT_H)
 						if: var(Result) {
 							checkInput: (INPUT_HOLD_KI)
 							if: var(Result) {
 								copyVar: var(act1), int(1)
 							} endIf: 
 						} endIf: 
 					} endIf: 
 				} endIf: 
 				copyVar: var(act4), int(0)
 				checkInput: (INPUT_1)
 				if: var(Result) {
 					copyVar: var(act4), int(1)
 				} endIf: 
 				checkInput: (INPUT_3)
 				if: var(Result) {
 					copyVar: var(act4), int(1)
 				} endIf: 
 				checkInput: (INPUT_7)
 				if: var(Result) {
 					copyVar: var(act4), int(1)
 				} endIf: 
 				checkInput: (INPUT_9)
 				if: var(Result) {
 					copyVar: var(act4), int(1)
 				} endIf: 
 				percentageXSpeed: 90
 				percentageYSpeed: 90
 				setGravity: 10
 				ifOperation: (IS_GREATER_OR_EQUAL), var(PosY), int(1200000) {
 					setYSpeed: -100
 				} endIf: 
 				ifOperation: (IS_LESS_OR_EQUAL), var(PosY), int(100000) {
 					setYSpeed: 0
 				} endIf: 
 				checkInput: (INPUT_ANY_FORWARD)
 				if: var(Result) {
 					if: var(act4) {
 						addXSpeed: 3550
 					} endIf: 
 					else:  {
 						addXSpeed: 5000
 					} endElse: 
 				} endIf: 
 				checkInput: (INPUT_ANY_BACK)
 				if: var(Result) {
 					if: var(act4) {
 						addXSpeed: -3550
 					} endIf: 
 					else:  {
 						addXSpeed: -5000
 					} endElse: 
 				} endIf: 
 				checkInput: (INPUT_ANY_UP)
 				if: var(Result) {
 					if: var(act4) {
 						addYSpeed: 7100
 					} endIf: 
 					else:  {
 						addYSpeed: 10000
 					} endElse: 
 					ifOperation: (IS_GREATER_OR_EQUAL), var(PosY), int(1200000) {
 						percentageYSpeed: 10
 					} endIf: 
 				} endIf: 
 				checkInput: (INPUT_ANY_DOWN)
 				if: var(Result) {
 					if: var(act4) {
 						addYSpeed: -7100
 					} endIf: 
 					else:  {
 						addYSpeed: -10000
 					} endElse: 
 					ifOperation: (IS_LESS_OR_EQUAL), var(PosY), int(100000) {
 						percentageYSpeed: 0
 					} endIf: 
 				} endIf: 
 				if: var(act4) {
 					ifOperation: (IS_GREATER_OR_EQUAL), var(SpeedX), int(14200) {
 						addXSpeed: -5000
 						ifOperation: (IS_LESS_OR_EQUAL), var(SpeedX), int(14200) {
 							setXSpeed: 14200
 						} endIf: 
 					} endIf: 
 					ifOperation: (IS_LESS_OR_EQUAL), var(SpeedX), int(-14200) {
 						addXSpeed: 5000
 						ifOperation: (IS_GREATER_OR_EQUAL), var(SpeedX), int(-14200) {
 							setXSpeed: -14200
 						} endIf: 
 					} endIf: 
 					ifOperation: (IS_GREATER_OR_EQUAL), var(SpeedY), int(10650) {
 						addYSpeed: -10000
 						ifOperation: (IS_LESS_OR_EQUAL), var(SpeedY), int(10650) {
 							setYSpeed: 10650
 						} endIf: 
 					} endIf: 
 					ifOperation: (IS_LESS_OR_EQUAL), var(SpeedY), int(-10650) {
 						addYSpeed: 10000
 						ifOperation: (IS_GREATER_OR_EQUAL), var(SpeedY), int(-10650) {
 							setYSpeed: -10650
 						} endIf: 
 					} endIf: 
 				} endIf: 
 				else:  {
 					ifOperation: (IS_GREATER_OR_EQUAL), var(SpeedX), int(20000) {
 						setXSpeed: 20000
 					} endIf: 
 					ifOperation: (IS_LESS_OR_EQUAL), var(SpeedX), int(-20000) {
 						setXSpeed: -20000
 					} endIf: 
 					ifOperation: (IS_GREATER_OR_EQUAL), var(SpeedY), int(15000) {
 						setYSpeed: 15000
 					} endIf: 
 					ifOperation: (IS_LESS_OR_EQUAL), var(SpeedY), int(-15000) {
 						setYSpeed: -15000
 					} endIf: 
 				} endElse: 
 				copyVar: var(act3), var(SpeedY)
 				modifyVar: (MUL), var(act3), int(-1)
 				ifOperation: (IS_GREATER_OR_EQUAL), var(act3), var(PosY) {
 					setYSpeed: 0
 					addYPosition: 1
 				} endIf: 
 				ifOperation: (IS_LESS), var(PosY), int(100000) {
 					setYPosition: 100000
 				} endIf: 
 				if: var(act0) {
 					if: var(act1) {
 						if: var(act2) {
 							jumpToLabel: s32'hikou_pre_renda'
 							copyVar: var(act2), int(0)
 						} endIf: 
 					} endIf: 
 				} endIf: 
 			} endIf: 
 			else:  {
 				callSubroutine: s32'cmnKidan_RendaInit'
 				if: var(act0) {
 					if: var(act1) {
 						if: var(act2) {
 							jumpToLabel: s32'pre_renda'
 							copyVar: var(act2), int(0)
 						} endIf: 
 					} endIf: 
 				} endIf: 
 			} endElse: 
 		} endUpon: 
 		upon: (BEFORE_EXIT) {
 			copyVar: var(plr0), int(0)
 		} endUpon: 
 	} endUpon: 
 	gotoLabelIfTrue: s32'hikou', var(act5)
 	sprite: s32'zmb265_00', 1
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	resetSpeed: 1
 	sprite: s32'zmb265_01', 1
 	sprite: s32'zmb265_02', 2
 	sprite: s32'zmb265_03', 2
 	sprite: s32'zmb265_04', 2
 	sprite: s32'zmb265_05', 2
 	createObject: s32'jumpkidan_start', (EX_POINT_0)
 	cmnSfx: s32'ARC_BTL_CMN_kidan_Chrg'
 	randomVoiceLine2: s16'vxxx106', 100, s16'vxxx107', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb265_06', 2
 	sprite: s32'zmb265_07', 2
 	spriteEnd: 
 	gotoLabel: s32'renda'
 	label: s32'pre_renda'
 	sprite: s32'zmb265_06', 2
 	createObject: s32'jumpkidan_start', (EX_POINT_0)
 	sprite: s32'zmb265_07', 2
 	sprite: s32'zmb265_08', 2
 	label: s32'renda'
 	sprite: s32'zmb265_09', 3
 	mouthPose: (OPEN)
 	copyVar: var(act1), int(0)
 	modifyVar: (ADD), var(act0), int(-1)
 	sendSignalName: (STACK7), s32'jumpkidan', 0
 	createObject: s32'jumpkidan', (EX_POINT_0)
 	putObjectIntoStack: (STACK7), (PREVIOUS)
 	copyVar: var(act7), int(0)
 	createObject: s32'jumpkidan_mazzle', (EX_POINT_0)
 	whiffCancelOptionBufferTime: s32'NmlAtkAir2C', 8
 	commonSetSE: s32'KidanFire', 0, 100
 	sprite: s32'zmb265_10', 3
 	copyVar: var(act2), int(1)
 	sprite: s32'zmb265_11', 3
 	sprite: s32'zmb265_09', 3
 	copyVar: var(act2), int(0)
 	sprite: s32'zmb265_10', 3
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb265_11', 3
 	objectGravity: 
 	sprite: s32'zmb265_12', 3
 	sprite: s32'zmb265_13', 3
 	sprite: s32'zmb265_14', 3
 	spriteEnd: 
 	exitState: 
 	label: s32'hikou'
 	sprite: s32'zmb266_00', 1
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	resetSpeed: 1
 	deactivateObjectByName: s32'Hikarinokabe_RingDelEffAir'
 	upon: (BEFORE_EXIT) {
 		createObject: s32'Hikarinokabe_RingDelEffAir', (ZERO)
 		copyVar: var(plr0), int(0)
 	} endUpon: 
 	sprite: s32'zmb266_01', 1
 	sprite: s32'zmb266_02', 2
 	sprite: s32'zmb266_03', 2
 	sprite: s32'zmb266_04', 2
 	sprite: s32'zmb266_05', 2
 	createObject: s32'jumpkidan_start', (EX_POINT_0)
 	cmnSfx: s32'ARC_BTL_CMN_kidan_Chrg'
 	randomVoiceLine2: s16'vxxx106', 100, s16'vxxx107', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb266_06', 2
 	sprite: s32'zmb266_07', 2
 	spriteEnd: 
 	gotoLabel: s32'hikou_renda'
 	label: s32'hikou_pre_renda'
 	sprite: s32'zmb266_06', 2
 	createObject: s32'jumpkidan_start', (EX_POINT_0)
 	sprite: s32'zmb266_07', 2
 	sprite: s32'zmb266_08', 2
 	label: s32'hikou_renda'
 	sprite: s32'zmb266_09', 3
 	mouthPose: (OPEN)
 	copyVar: var(act1), int(0)
 	modifyVar: (ADD), var(act0), int(-1)
 	sendSignalName: (STACK7), s32'jumpkidan', 0
 	if: var(act5) {
 		setArg_objectParameters: int(1), int(0)
 	} endIf: 
 	createObjectWithArg: s32'jumpkidan', (EX_POINT_0)
 	putObjectIntoStack: (STACK7), (PREVIOUS)
 	copyVar: var(act7), int(0)
 	createObject: s32'jumpkidan_mazzle', (EX_POINT_0)
 	whiffCancelOptionBufferTime: s32'NmlAtkAir2C', 8
 	commonSetSE: s32'KidanFire', 0, 100
 	sprite: s32'zmb266_10', 3
 	copyVar: var(act2), int(1)
 	sprite: s32'zmb266_11', 3
 	sprite: s32'zmb266_09', 3
 	copyVar: var(act2), int(0)
 	sprite: s32'zmb266_10', 3
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb266_11', 3
 	objectGravity: 
 	sprite: s32'zmb266_12', 3
 	clearRegisteredUponCode: (NO_STOP_IDLING)
 	sprite: s32'zmb266_13', 3
 	sprite: s32'zmb266_14', 3
 } endState: 
 
 beginSubroutine: s32'Eiennoseigi_Camera' {
 } endSubroutine: 
 
 beginSubroutine: s32'Eien_Init' {
 	callSubroutine: s32'cmnAtkLevel_3_AtkInit'
 	groundKnockbackEffect: (AIR_FACE_UP)
 	airKnockbackEffect: (AIR_FACE_UP)
 	damage: 1100
 	attackXKnockback: 40000
 	attackYKnockback: 10000
 	guardPushback: 150
 	atkFrontDirection: 0
 	atkShakeCamera: s32'ShakeYoko', 300, 1, 20, 0
 	attackDamageEffect: 4, s32'cmn_slash_s'
 	atkHitCommonSEReset: s32'ARC_BTL_TRS_ShngSlsh_Hit_1'
 	guardSoundEffect: s32''
 	guardSoundEffect: s32'ARC_BTL_TRS_ShngSlsh_Grd_1'
 	removeLandingRecovery: 
 	ifOperation: (IS_EQUAL), var(act1), int(1) {
 		damage: 1200
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act1), int(2) {
 		damage: 1300
 		copyVar: var(act5), int(1)
 		callSubroutine: s32'cmnSpecialAttackExInit'
 	} endIf: 
 	enableGatlings: 1
 	addGatlingOption: s32'Hikou_Hasei'
 	if: var(obj1) {
 		copyVar: var(act2), int(1)
 		callSubroutine: s32'cmn_AirAtkHosei'
 		ifOperation: (IS_LESS_OR_EQUAL), var(act1), int(0) {
 			copyVar: var(act1), int(3)
 		} endIf: 
 		ifOperation: (IS_EQUAL), var(act1), int(1) {
 			copyVar: var(act5), int(1)
 		} endIf: 
 		enableWhiffCancel: 1
 		addWhiffCancelOption: s32'CmnActRushStart'
 		addWhiffCancelOption: s32'CmnActHomingDash'
 		enableVanish: 1
 		upon: (IDLING) {
 			ifOperation: (IS_GREATER_OR_EQUAL), var(LoopCount), int(4) {
 				clearRegisteredUponCode: (IDLING)
 				enableWhiffCancel: 0
 				enableVanish: 0
 				removeWhiffCancelOption: s32'CmnActRushStart'
 				removeWhiffCancelOption: s32'CmnActHomingDash'
 				addGatlingOption: s32'FDash_Seigi'
 				addGatlingOption: s32'BDash_Seigi'
 				addWhiffCancelOption: s32'FDash_Seigi'
 				addWhiffCancelOption: s32'BDash_Seigi'
 			} endIf: 
 		} endUpon: 
 		upon: (ATTACK_COLLISION) {
 			enableVanish: 1
 		} endUpon: 
 		upon: (NO_STOP_IDLING) {
 			if: var(act3) {
 				checkInput: (INPUT_ANY_UP)
 				if: var(Result) {
 					addYSpeed: 10000
 				} endIf: 
 				checkInput: (INPUT_ANY_DOWN)
 				if: var(Result) {
 					addYSpeed: -10000
 				} endIf: 
 				ifOperation: (IS_GREATER_OR_EQUAL), var(SpeedY), int(50000) {
 					setYSpeed: 50000
 				} endIf: 
 				ifOperation: (IS_LESS_OR_EQUAL), var(SpeedY), int(-25000) {
 					setYSpeed: -25000
 				} endIf: 
 				ifOperation: (IS_GREATER_OR_EQUAL), var(PosY), int(1200000) {
 					percentageYSpeed: 10
 				} endIf: 
 				ifOperation: (IS_LESS_OR_EQUAL), var(PosY), int(40000) {
 					percentageYSpeed: 0
 				} endIf: 
 			} endIf: 
 			copyVar: var(act4), var(SpeedY)
 			modifyVar: (MUL), var(act4), int(-1)
 			ifOperation: (IS_GREATER_OR_EQUAL), var(act4), var(PosY) {
 				setYSpeed: 0
 				addYPosition: 1
 			} endIf: 
 		} endUpon: 
 	} endIf: 
 	upon: (ON_ATTACK_HIT_MAIN_PLAYER_DAMAGE_PRE_CTRL) {
 		clearRegisteredUponCode: (ON_ATTACK_HIT_MAIN_PLAYER_DAMAGE_PRE_CTRL)
 		if: var(act1) {
 			if: var(IN_BATTLE) {
 				if: var(IsMainPlayerSelf) {
 					ifNot: var(SmashKnockdown) {
 						copyVar: var(SmashKnockdown), int(1)
 						cameraMotion: -174585, 331989, 138197, -868, 7015, 0, 0, 1, 20, 15, 1
 						atkHitPositionType: 4, 400000, 0
 						hitstop: 0
 						upon: (ON_PLAYER_AFTER_EXECUTE_DAMAGE) {
 							clearRegisteredUponCode: (ON_PLAYER_AFTER_EXECUTE_DAMAGE)
 							ifBeginAliveEnemyPlayer: 0 {
 								if: var(act5) {
 									superFreeze: 0, 100, 20, 25
 									spriteAddTime: 5
 								} endIf: 
 								else:  {
 									superFreeze: 0, 100, 20, 20
 								} endElse: 
 							} endIf: 
 						} endUpon: 
 						if: var(Direction) {
 							ifOperation: (IS_LESS_OR_EQUAL), var(PosXRaw), int(-2700000) {
 								copyVar: var(PosXRaw), int(-2700000)
 							} endIf: 
 						} endIf: 
 						else:  {
 							ifOperation: (IS_GREATER_OR_EQUAL), var(PosXRaw), int(2700000) {
 								copyVar: var(PosXRaw), int(2700000)
 							} endIf: 
 						} endElse: 
 						attackYKnockback: 3000
 						airHitstun: 60
 						slidingKnockdownDuration: 30
 						groundBounceUntechTime: 25000
 						attackGravity: 2500
 						setXSpeed: 40000
 						xSpeedPerFrame: 97
 						if: var(act5) {
 							slidingKnockdownDuration: 50
 							groundBounceUntechTime: 25000
 							ifOperation: (IS_EQUAL), var(act1), int(2) {
 								if: var(act2) {
 									groundBounceCount: 1
 									groundBounceYVelocity: 17000
 									groundBounceGravity: 8000
 									groundBounceYVelocityPercent: 100
 									slidingKnockdownDuration: 30
 									groundBounceUntechTime: 15000
 								} endIf: 
 							} endIf: 
 						} endIf: 
 					} endIf: 
 				} endIf: 
 			} endIf: 
 		} endIf: 
 	} endUpon: 
 	jumpToStateInObject: (PARENT), s32'landing'
 	if: var(MediumAutocombo) {
 		addBRendaChainPD: s32'AirSeinarugyakurin'
 		attackYKnockback: 25000
 		wallBounceCount: 1
 		wallBounceXVelocityPercent: 0
 		wallBounceXVelocityPercent: 60
 	} endIf: 
 } endSubroutine: 
 
 beginState: s32'Eiennoseigi_A' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'Eien_Init'
 	} endUpon: 
 	sprite: s32'zmb403_00', 2
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb403_01', 1
 	sprite: s32'zmb403_02', 1
 	sprite: s32'zmb403_02', 1
 	privateBankSE: 0, s32'ARC_BTL_ZMB_Seigi_BasaDash', 100
 	randomVoice: s16'vxxx200', 100, s16'vxxx201', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb403_03', 2
 	sprite: s32'zmb403_04', 3
 	floorEffect: 5, 100
 	setXSpeed: 40000
 	setYSpeed: 10000
 	characterSfx: s32'ARC_BTL_ZMB_Seigi_SwordSet'
 	sprite: s32'zmb403_05', 2
 	sprite: s32'zmb403_06', 1
 	setYSpeed: 0
 	sprite: s32'zmb403_09', 1
 	characterSfx: s32'ARC_BTL_ZMB_Seigi_SwordFuri'
 	sprite: s32'zmb403_10', 2
 	enableHitbox: 
 	mouthPose: (OPEN)
 	createObject: s32'zmb403_slashEff', (ZERO)
 	callSubroutine: s32'cmnRendaChain_Clear_Idling'
 	xSpeedPerFrame: 80
 	sprite: s32'zmb403_11', 2
 	sprite: s32'zmb403_12', 3
 	enableWhiffCancel: 1
 	addWhiffCancelOption: s32'Hikou_Hasei'
 	recoveryState: 
 	sprite: s32'zmb403_13', 3
 	mouthPose: (SHOW_TEETH)
 	xSpeedPerFrame: 100
 	objectGravity: 
 	enableGatlings: 0
 	enableWhiffCancel: 0
 	clearRegisteredUponCode: (NO_STOP_IDLING)
 	sprite: s32'zmb403_14', 3
 	sprite: s32'zmb403_15', 3
 	sprite: s32'zmb403_16', 3
 	sprite: s32'zmb403_19', 3
 	spriteEnd: 
 	exitState: 
 	label: s32'landing'
 	sprite: s32'zmb037_01', 2
 	sprite: s32'zmb037_00', 2
 } endState: 
 
 beginState: s32'Eiennoseigi_B' {
 	upon: (IMMEDIATE) {
 		copyVar: var(act1), int(1)
 		callSubroutine: s32'Eien_Init'
 	} endUpon: 
 	sprite: s32'zmb403_00', 2
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb403_01', 1
 	sprite: s32'zmb403_02', 1
 	sprite: s32'zmb403_02', 1
 	privateBankSE: 0, s32'ARC_BTL_ZMB_Seigi_BasaDash', 100
 	randomVoice: s16'vxxx200', 100, s16'vxxx201', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb403_03', 2
 	sprite: s32'zmb403_04', 3
 	floorEffect: 5, 100
 	setXSpeed: 65000
 	setYSpeed: 10000
 	characterSfx: s32'ARC_BTL_ZMB_Seigi_SwordSet'
 	sprite: s32'zmb403_05', 3
 	sprite: s32'zmb403_06', 3
 	setYSpeed: 0
 	sprite: s32'zmb403_07', 2
 	sprite: s32'zmb403_09', 1
 	characterSfx: s32'ARC_BTL_ZMB_Seigi_SwordFuri'
 	sprite: s32'zmb403_10', 2
 	enableHitbox: 
 	mouthPose: (OPEN)
 	createObject: s32'zmb403_slashEff', (ZERO)
 	xSpeedPerFrame: 70
 	sprite: s32'zmb403_11', 2
 	sprite: s32'zmb403_12', 3
 	recoveryState: 
 	enableWhiffCancel: 1
 	addWhiffCancelOption: s32'Hikou_Hasei'
 	sprite: s32'zmb403_13', 3
 	mouthPose: (SHOW_TEETH)
 	xSpeedPerFrame: 100
 	objectGravity: 
 	enableGatlings: 0
 	enableWhiffCancel: 0
 	clearRegisteredUponCode: (NO_STOP_IDLING)
 	sprite: s32'zmb403_14', 3
 	sprite: s32'zmb403_15', 3
 	sprite: s32'zmb403_16', 3
 	sprite: s32'zmb403_19', 3
 	sprite: s32'zmb403_19', 3
 	spriteEnd: 
 	exitState: 
 	label: s32'landing'
 	sprite: s32'zmb037_01', 2
 	sprite: s32'zmb037_00', 2
 } endState: 
 
 beginState: s32'Eiennoseigi_C' {
 	upon: (IMMEDIATE) {
 		copyVar: var(act1), int(2)
 		callSubroutine: s32'Eien_Init'
 	} endUpon: 
 	sprite: s32'zmb403_00', 2
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb403_01', 1
 	sprite: s32'zmb403_02', 1
 	sprite: s32'zmb403_02', 2
 	privateBankSE: 0, s32'ARC_BTL_ZMB_Seigi_BasaDash', 100
 	randomVoice: s16'vxxx200', 100, s16'vxxx201', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb403_03', 2
 	sprite: s32'zmb403_04', 3
 	floorEffect: 5, 100
 	setXSpeed: 85000
 	setYSpeed: 10000
 	characterSfx: s32'ARC_BTL_ZMB_Seigi_SwordSet'
 	sprite: s32'zmb403_05', 2
 	sprite: s32'zmb403_06', 1
 	setYSpeed: 0
 	sprite: s32'zmb403_09', 1
 	characterSfx: s32'ARC_BTL_ZMB_Seigi_SwordFuri'
 	sprite: s32'zmb403_10', 2
 	enableHitbox: 
 	mouthPose: (OPEN)
 	createObject: s32'zmb403_slashEff', (ZERO)
 	xSpeedPerFrame: 70
 	sprite: s32'zmb403_11', 2
 	sprite: s32'zmb403_12', 3
 	recoveryState: 
 	enableWhiffCancel: 1
 	addWhiffCancelOption: s32'Hikou_Hasei'
 	sprite: s32'zmb403_13', 3
 	mouthPose: (SHOW_TEETH)
 	xSpeedPerFrame: 100
 	objectGravity: 
 	enableGatlings: 0
 	enableWhiffCancel: 0
 	clearRegisteredUponCode: (NO_STOP_IDLING)
 	sprite: s32'zmb403_14', 3
 	sprite: s32'zmb403_15', 3
 	sprite: s32'zmb403_16', 3
 	sprite: s32'zmb403_19', 3
 	spriteEnd: 
 	exitState: 
 	label: s32'landing'
 	sprite: s32'zmb037_01', 2
 	sprite: s32'zmb037_00', 2
 } endState: 
 
 beginState: s32'AirEiennoseigi_A' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'Eien_Init'
 	} endUpon: 
 	sprite: s32'zmb022_02', 2
 	resetSpeed: 1
 	ifOperation: (IS_LESS_OR_EQUAL), var(PosY), int(40000) {
 		setYPosition: 40000
 	} endIf: 
 	sprite: s32'zmb403_18', 3
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb403_05', 3
 	setXSpeed: 30000
 	privateBankSE: 0, s32'ARC_BTL_ZMB_Seigi_BasaDash', 100
 	randomVoice: s16'vxxx200', 100, s16'vxxx201', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb403_06', 2
 	if: var(act2) {
 		copyVar: var(act3), int(1)
 	} endIf: 
 	characterSfx: s32'ARC_BTL_ZMB_Seigi_SwordSet'
 	sprite: s32'zmb403_07', 2
 	sprite: s32'zmb403_09', 2
 	characterSfx: s32'ARC_BTL_ZMB_Seigi_SwordFuri'
 	sprite: s32'zmb403_10ex01', 2
 	enableHitbox: 
 	mouthPose: (OPEN)
 	createObject: s32'zmb403_slashEff', (ZERO)
 	xSpeedPerFrame: 90
 	ySpeedPerFrame: 65
 	copyVar: var(act3), int(0)
 	sprite: s32'zmb403_11ex01', 2
 	sprite: s32'zmb403_12', 3
 	recoveryState: 
 	enableWhiffCancel: 1
 	addWhiffCancelOption: s32'Hikou_Hasei'
 	sprite: s32'zmb403_13', 3
 	mouthPose: (SHOW_TEETH)
 	xSpeedPerFrame: 100
 	ySpeedPerFrame: 100
 	objectGravity: 
 	enableGatlings: 0
 	enableWhiffCancel: 0
 	sprite: s32'zmb403_14', 3
 	sprite: s32'zmb403_15', 4
 	clearRegisteredUponCode: (NO_STOP_IDLING)
 	sprite: s32'zmb403_16', 4
 	sprite: s32'zmb403_19', 3
 	clearRegisteredUponCode: (TOUCH_GROUND)
 	spriteEnd: 
 	exitState: 
 	label: s32'landing'
 	sprite: s32'zmb037_01', 2
 	sprite: s32'zmb037_00', 2
 } endState: 
 
 beginState: s32'AirEiennoseigi_B' {
 	upon: (IMMEDIATE) {
 		copyVar: var(act1), int(1)
 		callSubroutine: s32'Eien_Init'
 	} endUpon: 
 	sprite: s32'zmb022_02', 2
 	resetSpeed: 1
 	ifOperation: (IS_LESS_OR_EQUAL), var(PosY), int(40000) {
 		setYPosition: 40000
 	} endIf: 
 	sprite: s32'zmb403_18', 3
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb403_05', 3
 	setXSpeed: 50000
 	privateBankSE: 0, s32'ARC_BTL_ZMB_Seigi_BasaDash', 100
 	randomVoice: s16'vxxx200', 100, s16'vxxx201', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb403_06', 2
 	if: var(act2) {
 		copyVar: var(act3), int(1)
 	} endIf: 
 	characterSfx: s32'ARC_BTL_ZMB_Seigi_SwordSet'
 	sprite: s32'zmb403_07', 2
 	sprite: s32'zmb403_08', 2
 	sprite: s32'zmb403_06', 2
 	sprite: s32'zmb403_07', 2
 	sprite: s32'zmb403_09', 2
 	characterSfx: s32'ARC_BTL_ZMB_Seigi_SwordFuri'
 	sprite: s32'zmb403_10ex01', 2
 	enableHitbox: 
 	mouthPose: (OPEN)
 	createObject: s32'zmb403_slashEff', (ZERO)
 	xSpeedPerFrame: 80
 	copyVar: var(act3), int(0)
 	setYSpeed: 1000
 	sprite: s32'zmb403_11ex01', 2
 	sprite: s32'zmb403_12', 3
 	recoveryState: 
 	enableWhiffCancel: 1
 	addWhiffCancelOption: s32'Hikou_Hasei'
 	sprite: s32'zmb403_13', 3
 	mouthPose: (SHOW_TEETH)
 	xSpeedPerFrame: 100
 	objectGravity: 
 	enableGatlings: 0
 	enableWhiffCancel: 0
 	sprite: s32'zmb403_14', 3
 	sprite: s32'zmb403_15', 4
 	clearRegisteredUponCode: (NO_STOP_IDLING)
 	sprite: s32'zmb403_16', 4
 	sprite: s32'zmb403_19', 3
 	clearRegisteredUponCode: (TOUCH_GROUND)
 	spriteEnd: 
 	exitState: 
 	label: s32'landing'
 	sprite: s32'zmb037_01', 2
 	sprite: s32'zmb037_00', 2
 } endState: 
 
 beginState: s32'AirEiennoseigi_C' {
 	upon: (IMMEDIATE) {
 		copyVar: var(act1), int(2)
 		callSubroutine: s32'Eien_Init'
 	} endUpon: 
 	sprite: s32'zmb022_02', 3
 	resetSpeed: 1
 	ifOperation: (IS_LESS_OR_EQUAL), var(PosY), int(40000) {
 		setYPosition: 40000
 	} endIf: 
 	sprite: s32'zmb403_18', 3
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb403_05', 3
 	setXSpeed: 60000
 	privateBankSE: 0, s32'ARC_BTL_ZMB_Seigi_BasaDash', 100
 	randomVoice: s16'vxxx200', 100, s16'vxxx201', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb403_06', 2
 	if: var(act2) {
 		copyVar: var(act3), int(1)
 	} endIf: 
 	characterSfx: s32'ARC_BTL_ZMB_Seigi_SwordSet'
 	sprite: s32'zmb403_07', 2
 	sprite: s32'zmb403_09', 2
 	characterSfx: s32'ARC_BTL_ZMB_Seigi_SwordFuri'
 	sprite: s32'zmb403_10ex01', 2
 	enableHitbox: 
 	mouthPose: (OPEN)
 	createObject: s32'zmb403_slashEff', (ZERO)
 	xSpeedPerFrame: 80
 	ySpeedPerFrame: 50
 	copyVar: var(act3), int(0)
 	sprite: s32'zmb403_11ex01', 2
 	sprite: s32'zmb403_12', 3
 	recoveryState: 
 	enableWhiffCancel: 1
 	addWhiffCancelOption: s32'Hikou_Hasei'
 	sprite: s32'zmb403_13', 3
 	mouthPose: (SHOW_TEETH)
 	xSpeedPerFrame: 100
 	ySpeedPerFrame: 100
 	objectGravity: 
 	enableGatlings: 0
 	enableWhiffCancel: 0
 	sprite: s32'zmb403_14', 3
 	sprite: s32'zmb403_15', 4
 	clearRegisteredUponCode: (NO_STOP_IDLING)
 	sprite: s32'zmb403_16', 4
 	sprite: s32'zmb403_19', 3
 	clearRegisteredUponCode: (TOUCH_GROUND)
 	spriteEnd: 
 	exitState: 
 	label: s32'landing'
 	sprite: s32'zmb037_01', 2
 	sprite: s32'zmb037_00', 2
 } endState: 
 
 beginState: s32'Hikarinokabe_A' {
 	upon: (IMMEDIATE) {
 		atkIgnoreCaution: 1
 		upon: (BEFORE_EXIT) {
 			triggerUponInObject: s32'Hikarinokabe_Tame', (SIGNAL0)
 		} endUpon: 
 	} endUpon: 
 	sprite: s32'zmb402_00', 2
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	characterSfx: s32'ARC_BTL_ZMB_Hkrnkb_Syubisi'
 	sprite: s32'zmb402_01', 2
 	sprite: s32'zmb402_02', 2
 	forceRandomVoice: s16'vxxx204', 100, s16'vxxx206', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb402_03', 1
 	sprite: s32'zmb402_04', 1
 	sprite: s32'zmb402_05', 1
 	sprite: s32'zmb402_06', 1
 	sprite: s32'zmb402_07', 1
 	sprite: s32'zmb402_08', 2
 	sprite: s32'zmb402_11', 2
 	sprite: s32'zmb402_12', 3
 	mouthPose: (OPEN)
 	createObject: s32'Hikarinokabe_Tame', (PRIVATE_0)
 	setArg_objectParameters: int(1), int(0)
 	createObjectWithArg: s32'Hikarinokabe_Tame', (PRIVATE_1)
 	upon: (RECEIVE_ATTACK) {
 		createObject: s32'Hikarinokabe_RingDelEff', (ZERO)
 	} endUpon: 
 	characterSfx: s32'ARC_BTL_ZMB_Hkrnkb_Set'
 	checkInput: (INPUT_HOLD_KI)
 	if: var(Result) {
 		floorEffect: 5, 100
 		copyVar: var(act2), int(1)
 		modifyVarIntoResult: (SUB), int(450000), var(PosY)
 		modifyVarAfterOperation: (DIV), var(Result), int(19), var(SpeedY)
 	} endIf: 
 	sprite: s32'zmb402_13', 3
 	sprite: s32'zmb402_14', 3
 	sprite: s32'zmb402_15', 3
 	mouthPose: (SHOW_TEETH)
 	spriteEnd: 
 	gotoLabelIfTrue: s32'hikou', var(act2)
 	sprite: s32'zmb402_16', 3
 	sprite: s32'zmb402_17', 2
 	clearRegisteredUponCode: (RECEIVE_ATTACK)
 	createObject: s32'Hikarinokabe_RingDelEff', (ZERO)
 	spriteEnd: 
 	exitState: 
 	label: s32'hikou'
 	sprite: s32'zmb402_22', 3
 	clearRegisteredUponCode: (IDLING)
 	sprite: s32'zmb402_23', 2
 	sprite: s32'zmb402_24', 2
 	sprite: s32'zmb402_24', 2
 	resetSpeed: 1
 	copyVar: var(plr1), int(0)
 	enableWhiffCancel: 1
 	addWhiffCancelOption: s32'Hikou'
 } endState: 
 
 beginState: s32'Hikarinokabe_B' {
 	upon: (IMMEDIATE) {
 		atkIgnoreCaution: 1
 		upon: (BEFORE_EXIT) {
 			triggerUponInObject: s32'Hikarinokabe_Tame', (SIGNAL1)
 		} endUpon: 
 	} endUpon: 
 	sprite: s32'zmb402_00', 2
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	characterSfx: s32'ARC_BTL_ZMB_Hkrnkb_Syubisi'
 	sprite: s32'zmb402_01', 1
 	sprite: s32'zmb402_02', 1
 	forceRandomVoice: s16'vxxx204', 100, s16'vxxx206', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb402_03', 1
 	sprite: s32'zmb402_04', 1
 	sprite: s32'zmb402_05', 1
 	sprite: s32'zmb402_06', 1
 	sprite: s32'zmb402_07', 1
 	sprite: s32'zmb402_08', 2
 	sprite: s32'zmb402_09', 1
 	sprite: s32'zmb402_10', 1
 	sprite: s32'zmb402_11', 1
 	sprite: s32'zmb402_12', 3
 	mouthPose: (OPEN)
 	createObject: s32'Hikarinokabe_Tame', (PRIVATE_0)
 	setArg_objectParameters: int(1), int(0)
 	createObjectWithArg: s32'Hikarinokabe_Tame', (PRIVATE_1)
 	upon: (RECEIVE_ATTACK) {
 		createObject: s32'Hikarinokabe_RingDelEff', (ZERO)
 	} endUpon: 
 	characterSfx: s32'ARC_BTL_ZMB_Hkrnkb_Set'
 	checkInput: (INPUT_HOLD_KI)
 	if: var(Result) {
 		floorEffect: 5, 100
 		copyVar: var(act2), int(1)
 		modifyVarIntoResult: (SUB), int(450000), var(PosY)
 		modifyVarAfterOperation: (DIV), var(Result), int(19), var(SpeedY)
 	} endIf: 
 	sprite: s32'zmb402_13', 3
 	sprite: s32'zmb402_14', 3
 	sprite: s32'zmb402_15', 3
 	mouthPose: (SHOW_TEETH)
 	spriteEnd: 
 	gotoLabelIfTrue: s32'hikou', var(act2)
 	sprite: s32'zmb402_16', 2
 	sprite: s32'zmb402_17', 2
 	clearRegisteredUponCode: (RECEIVE_ATTACK)
 	createObject: s32'Hikarinokabe_RingDelEff', (ZERO)
 	spriteEnd: 
 	exitState: 
 	label: s32'hikou'
 	sprite: s32'zmb402_22', 2
 	clearRegisteredUponCode: (IDLING)
 	sprite: s32'zmb402_23', 2
 	sprite: s32'zmb402_24', 2
 	sprite: s32'zmb402_24', 2
 	resetSpeed: 1
 	copyVar: var(plr1), int(0)
 	enableWhiffCancel: 1
 	addWhiffCancelOption: s32'Hikou'
 } endState: 
 
 beginState: s32'Hikarinokabe_C' {
 	upon: (IMMEDIATE) {
 		atkIgnoreCaution: 1
 		callSubroutine: s32'cmnSpecialAttackExInit'
 		upon: (BEFORE_EXIT) {
 			triggerUponInObject: s32'Hikarinokabe_Tame', (SIGNAL2)
 		} endUpon: 
 	} endUpon: 
 	sprite: s32'zmb402_00', 2
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	characterSfx: s32'ARC_BTL_ZMB_Hkrnkb_Syubisi'
 	sprite: s32'zmb402_01', 1
 	forceRandomVoice: s16'vxxx204', 100, s16'vxxx206', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb402_02', 1
 	sprite: s32'zmb402_03', 1
 	sprite: s32'zmb402_04', 1
 	sprite: s32'zmb402_05', 1
 	sprite: s32'zmb402_06', 1
 	sprite: s32'zmb402_07', 1
 	sprite: s32'zmb402_08', 1
 	sprite: s32'zmb402_11', 1
 	sprite: s32'zmb402_12', 3
 	mouthPose: (OPEN)
 	createObject: s32'Hikarinokabe_Tame', (PRIVATE_0)
 	setArg_objectParameters: int(1), int(0)
 	createObjectWithArg: s32'Hikarinokabe_Tame', (PRIVATE_1)
 	upon: (RECEIVE_ATTACK) {
 		createObject: s32'Hikarinokabe_RingDelEff', (ZERO)
 	} endUpon: 
 	characterSfx: s32'ARC_BTL_ZMB_Hkrnkb_Set'
 	checkInput: (INPUT_HOLD_KI)
 	if: var(Result) {
 		floorEffect: 5, 100
 		copyVar: var(act2), int(1)
 		modifyVarIntoResult: (SUB), int(450000), var(PosY)
 		modifyVarAfterOperation: (DIV), var(Result), int(19), var(SpeedY)
 	} endIf: 
-	sprite: s32'zmb402_13', 3
-	sprite: s32'zmb402_14', 3
-	sprite: s32'zmb402_15', 3
+	sprite: s32'zmb402_13', 1
+	sprite: s32'zmb402_14', 1
+	sprite: s32'zmb402_15', 1
 	mouthPose: (SHOW_TEETH)
 	spriteEnd: 
 	gotoLabelIfTrue: s32'hikou', var(act2)
 	sprite: s32'zmb402_16', 3
 	sprite: s32'zmb402_17', 2
 	clearRegisteredUponCode: (RECEIVE_ATTACK)
 	createObject: s32'Hikarinokabe_RingDelEff', (ZERO)
 	spriteEnd: 
 	exitState: 
 	label: s32'hikou'
 	sprite: s32'zmb402_22', 3
 	clearRegisteredUponCode: (IDLING)
 	sprite: s32'zmb402_23', 2
 	sprite: s32'zmb402_24', 2
 	sprite: s32'zmb402_24', 2
 	resetSpeed: 1
 	copyVar: var(plr1), int(0)
 	enableWhiffCancel: 1
 	addWhiffCancelOption: s32'Hikou'
 } endState: 
 
 beginState: s32'AirHikarinokabe_A' {
 	upon: (IMMEDIATE) {
 		atkIgnoreCaution: 1
 		upon: (BEFORE_EXIT) {
 			triggerUponInObject: s32'Hikarinokabe_Tame', (SIGNAL0)
 		} endUpon: 
 		if: var(obj1) {
 			copyVar: var(act3), int(1)
 		} endIf: 
 	} endUpon: 
 	sprite: s32'zmb402_18', 2
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	pushXSpeed: 
 	pushYSpeed: 
 	resetSpeed: 1
 	characterSfx: s32'ARC_BTL_ZMB_Hkrnkb_Syubisi'
 	sprite: s32'zmb402_19', 2
 	sprite: s32'zmb402_02ex01', 2
 	forceRandomVoice: s16'vxxx204', 100, s16'vxxx206', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb402_03ex01', 1
 	sprite: s32'zmb402_04ex01', 1
 	sprite: s32'zmb402_05ex01', 1
 	sprite: s32'zmb402_06ex01', 1
 	sprite: s32'zmb402_07ex01', 1
 	sprite: s32'zmb402_08ex01', 2
 	sprite: s32'zmb402_11ex01', 2
 	sprite: s32'zmb402_12ex01', 3
 	mouthPose: (OPEN)
 	createObject: s32'Hikarinokabe_Tame', (PRIVATE_0)
 	setArg_objectParameters: int(1), int(0)
 	createObjectWithArg: s32'Hikarinokabe_Tame', (PRIVATE_1)
 	upon: (RECEIVE_ATTACK) {
 		createObject: s32'Hikarinokabe_RingDelEffAir', (ZERO)
 	} endUpon: 
 	characterSfx: s32'ARC_BTL_ZMB_Hkrnkb_Set'
 	upon: (IDLING) {
 		checkInput: (INPUT_HOLD_KI)
 		if: var(Result) {
 			copyVar: var(act2), int(1)
 		} endIf: 
 		if: var(act3) {
 		} endIf: 
 		else:  {
 			if: var(plr1) {
 				copyVar: var(act2), int(0)
 			} endIf: 
 		} endElse: 
 	} endUpon: 
 	sprite: s32'zmb402_13ex01', 3
 	sprite: s32'zmb402_14ex01', 3
 	sprite: s32'zmb402_15ex01', 3
 	spriteEnd: 
 	gotoLabelIfTrue: s32'hikou', var(act2)
 	sprite: s32'zmb402_16ex01', 3
 	mouthPose: (SHOW_TEETH)
 	clearRegisteredUponCode: (IDLING)
 	sprite: s32'zmb402_20', 3
 	ifNot: var(act3) {
 		popXSpeed: 
 		popYSpeed: 
 	} endIf: 
 	objectGravity: 
 	sprite: s32'zmb402_21', 2
 	clearRegisteredUponCode: (RECEIVE_ATTACK)
 	createObject: s32'Hikarinokabe_RingDelEffAir', (ZERO)
 	spriteEnd: 
 	exitState: 
 	label: s32'hikou'
 	sprite: s32'zmb402_22', 2
 	clearRegisteredUponCode: (IDLING)
 	sprite: s32'zmb402_23', 2
 	sprite: s32'zmb402_24', 2
 	sprite: s32'zmb402_24', 2
 	copyVar: var(plr1), int(0)
 	enableWhiffCancel: 1
 	addWhiffCancelOption: s32'Hikou'
 } endState: 
 
 beginState: s32'AirHikarinokabe_B' {
 	upon: (IMMEDIATE) {
 		atkIgnoreCaution: 1
 		upon: (BEFORE_EXIT) {
 			triggerUponInObject: s32'Hikarinokabe_Tame', (SIGNAL1)
 		} endUpon: 
 		if: var(obj1) {
 			copyVar: var(act3), int(1)
 		} endIf: 
 	} endUpon: 
 	sprite: s32'zmb402_18', 1
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	pushXSpeed: 
 	pushYSpeed: 
 	resetSpeed: 1
 	characterSfx: s32'ARC_BTL_ZMB_Hkrnkb_Syubisi'
 	sprite: s32'zmb402_19', 1
 	sprite: s32'zmb402_02ex01', 1
 	sprite: s32'zmb402_03ex01', 1
 	forceRandomVoice: s16'vxxx204', 100, s16'vxxx206', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb402_04ex01', 1
 	sprite: s32'zmb402_05ex01', 1
 	sprite: s32'zmb402_06ex01', 1
 	sprite: s32'zmb402_07ex01', 1
 	sprite: s32'zmb402_08ex01', 2
 	sprite: s32'zmb402_09ex01', 1
 	sprite: s32'zmb402_10ex01', 1
 	sprite: s32'zmb402_11ex01', 1
 	sprite: s32'zmb402_12ex01', 3
 	mouthPose: (OPEN)
 	createObject: s32'Hikarinokabe_Tame', (PRIVATE_0)
 	setArg_objectParameters: int(1), int(0)
 	createObjectWithArg: s32'Hikarinokabe_Tame', (PRIVATE_1)
 	upon: (RECEIVE_ATTACK) {
 		createObject: s32'Hikarinokabe_RingDelEffAir', (ZERO)
 	} endUpon: 
 	characterSfx: s32'ARC_BTL_ZMB_Hkrnkb_Set'
 	upon: (IDLING) {
 		checkInput: (INPUT_HOLD_KI)
 		if: var(Result) {
 			copyVar: var(act2), int(1)
 		} endIf: 
 		if: var(act3) {
 		} endIf: 
 		else:  {
 			if: var(plr1) {
 				copyVar: var(act2), int(0)
 			} endIf: 
 		} endElse: 
 	} endUpon: 
 	sprite: s32'zmb402_13ex01', 3
 	sprite: s32'zmb402_14ex01', 3
 	sprite: s32'zmb402_15ex01', 3
 	spriteEnd: 
 	gotoLabelIfTrue: s32'hikou', var(act2)
 	sprite: s32'zmb402_16ex01', 3
 	mouthPose: (SHOW_TEETH)
 	clearRegisteredUponCode: (IDLING)
 	sprite: s32'zmb402_20', 3
 	ifNot: var(act3) {
 		popXSpeed: 
 		popYSpeed: 
 	} endIf: 
 	objectGravity: 
 	sprite: s32'zmb402_21', 2
 	clearRegisteredUponCode: (RECEIVE_ATTACK)
 	createObject: s32'Hikarinokabe_RingDelEffAir', (ZERO)
 	spriteEnd: 
 	exitState: 
 	label: s32'hikou'
 	sprite: s32'zmb402_22', 2
 	clearRegisteredUponCode: (IDLING)
 	sprite: s32'zmb402_23', 2
 	sprite: s32'zmb402_24', 2
 	sprite: s32'zmb402_24', 2
 	copyVar: var(plr1), int(0)
 	enableWhiffCancel: 1
 	addWhiffCancelOption: s32'Hikou'
 } endState: 
 
 beginState: s32'AirHikarinokabe_C' {
 	upon: (IMMEDIATE) {
 		atkIgnoreCaution: 1
 		callSubroutine: s32'cmnSpecialAttackExInit'
 		upon: (BEFORE_EXIT) {
 			triggerUponInObject: s32'Hikarinokabe_Tame', (SIGNAL2)
 		} endUpon: 
 		if: var(obj1) {
 			copyVar: var(act3), int(1)
 		} endIf: 
 	} endUpon: 
 	sprite: s32'zmb402_18', 2
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	pushXSpeed: 
 	pushYSpeed: 
 	resetSpeed: 1
 	characterSfx: s32'ARC_BTL_ZMB_Hkrnkb_Syubisi'
 	sprite: s32'zmb402_19', 1
 	sprite: s32'zmb402_02ex01', 1
 	forceRandomVoice: s16'vxxx204', 100, s16'vxxx206', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb402_03ex01', 1
 	sprite: s32'zmb402_04ex01', 1
 	sprite: s32'zmb402_05ex01', 1
 	sprite: s32'zmb402_06ex01', 1
 	sprite: s32'zmb402_07ex01', 1
 	sprite: s32'zmb402_08ex01', 1
 	sprite: s32'zmb402_11ex01', 1
 	sprite: s32'zmb402_12ex01', 3
 	mouthPose: (OPEN)
 	createObject: s32'Hikarinokabe_Tame', (PRIVATE_0)
 	setArg_objectParameters: int(1), int(0)
 	createObjectWithArg: s32'Hikarinokabe_Tame', (PRIVATE_1)
 	upon: (RECEIVE_ATTACK) {
 		createObject: s32'Hikarinokabe_RingDelEffAir', (ZERO)
 	} endUpon: 
 	characterSfx: s32'ARC_BTL_ZMB_Hkrnkb_Set'
 	upon: (IDLING) {
 		checkInput: (INPUT_HOLD_KI)
 		if: var(Result) {
 			copyVar: var(act2), int(1)
 		} endIf: 
 		if: var(act3) {
 		} endIf: 
 		else:  {
 			if: var(plr1) {
 				copyVar: var(act2), int(0)
 			} endIf: 
 		} endElse: 
 	} endUpon: 
-	sprite: s32'zmb402_13ex01', 3
-	sprite: s32'zmb402_14ex01', 3
-	sprite: s32'zmb402_15ex01', 3
+	sprite: s32'zmb402_13ex01', 1
+	sprite: s32'zmb402_14ex01', 1
+	sprite: s32'zmb402_15ex01', 1
 	spriteEnd: 
 	gotoLabelIfTrue: s32'hikou', var(act2)
 	sprite: s32'zmb402_16ex01', 3
 	mouthPose: (SHOW_TEETH)
 	clearRegisteredUponCode: (IDLING)
 	sprite: s32'zmb402_20', 3
 	ifNot: var(act3) {
 		popXSpeed: 
 		popYSpeed: 
 	} endIf: 
 	objectGravity: 
 	sprite: s32'zmb402_21', 2
 	clearRegisteredUponCode: (RECEIVE_ATTACK)
 	createObject: s32'Hikarinokabe_RingDelEffAir', (ZERO)
 	spriteEnd: 
 	exitState: 
 	label: s32'hikou'
 	sprite: s32'zmb402_22', 2
 	clearRegisteredUponCode: (IDLING)
 	sprite: s32'zmb402_23', 2
 	sprite: s32'zmb402_24', 2
 	sprite: s32'zmb402_24', 2
 	copyVar: var(plr1), int(0)
 	enableWhiffCancel: 1
 	addWhiffCancelOption: s32'Hikou'
 } endState: 
 
 beginSubroutine: s32'Kaminotitujyo_Camera' {
 	cameraMotion: -288079, 374069, 174712, -412, 8073, 0, 0, 1, 20, 15, 1
 	atkHitPositionType: 4, 400000, 100000
 	hitstop: 0
 	upon: (ON_PLAYER_AFTER_EXECUTE_DAMAGE) {
 		clearRegisteredUponCode: (ON_PLAYER_AFTER_EXECUTE_DAMAGE)
 		ifBeginAliveEnemyPlayer: 0 {
 			superFreeze: 0, 100, 23, 23
 		} endIf: 
 	} endUpon: 
 	if: var(Direction) {
 		ifOperation: (IS_LESS_OR_EQUAL), var(PosXRaw), int(-2700000) {
 			copyVar: var(PosXRaw), int(-2700000)
 		} endIf: 
 	} endIf: 
 	else:  {
 		ifOperation: (IS_GREATER_OR_EQUAL), var(PosXRaw), int(2700000) {
 			copyVar: var(PosXRaw), int(2700000)
 		} endIf: 
 	} endElse: 
 } endSubroutine: 
 
 beginState: s32'Kaminotitujyo' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnAtkLevel_3_AtkInit'
 		groundKnockbackEffect: (AIR_FACE_UP)
 		damage: 1100
 		attackXKnockback: 45000
 		attackYKnockback: 15000
 		guardPushback: 150
 		setInitialProration: 90
 		attackFinishBlowback: 1
 		atkShakeCamera: s32'ShakeTate', 1000, 0, 15, 0
 		attackDamageEffect: 4, s32'cmn_slash_s_tate'
 		atkHitCommonSEReset: s32'ARC_BTL_TRS_ShngSlsh_Hit_1'
 		guardSoundEffect: s32''
 		guardSoundEffect: s32'ARC_BTL_TRS_ShngSlsh_Grd_1'
 		upon: (ATTACK_COLLISION) {
 			if: var(act1) {
 				damage: 1100
 			} endIf: 
 		} endUpon: 
 		upon: (ON_ATTACK_HIT_MAIN_PLAYER_DAMAGE_PRE_CTRL) {
 			clearRegisteredUponCode: (ON_ATTACK_HIT_MAIN_PLAYER_DAMAGE_PRE_CTRL)
 			if: var(IN_BATTLE) {
 				if: var(IsMainPlayerSelf) {
 					ifNot: var(SmashRegular) {
 						copyVar: var(SmashRegular), int(1)
 						copyVar: var(CameraComboOnce3), int(1)
 						callSubroutine: s32'Kaminotitujyo_Camera'
 						groundKnockbackEffect: (AIR_STRONG)
 						airKnockbackEffect: (AIR_STRONG)
 						attackXKnockback: 100000
 						airHitstun: 45
 						wallBounceXVelocityPercent: 7
 						copyVar: var(act2), int(1)
 					} endIf: 
 				} endIf: 
 			} endIf: 
 		} endUpon: 
 		upon: (ON_ATTACK_COLLISION_MAIN_PLAYER) {
 			copyVar: var(act3), int(1)
 			jumpToLabel: s32'end'
 		} endUpon: 
 	} endUpon: 
 	sprite: s32'zmb404_00', 2
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb404_01', 1
 	sprite: s32'zmb404_02', 1
 	randomVoice: s16'vxxx202', 100, s16'vxxx203', 100, s16'vxxx205', 100, s16'', 0
 	privateBankSE: 0, s32'ARC_BTL_ZMB_Titujo_Chrg', 100
 	sprite: s32'zmb404_03', 2
 	sprite: s32'zmb404_04', 2
 	sprite: s32'zmb404_05', 2
 	sprite: s32'zmb404_03', 1
 	sprite: s32'zmb404_03', 1
 	upon: (IDLING) {
 		checkInput: (INPUT_NOT_KI)
 		if: var(Result) {
 			clearRegisteredUponCode: (IDLING)
 			jumpToLabel: s32'atk'
 		} endIf: 
 	} endUpon: 
 	sprite: s32'zmb404_04', 2
 	sprite: s32'zmb404_05', 2
 	sprite: s32'zmb404_03', 2
 	sprite: s32'zmb404_04', 1
 	copyVar: var(act1), int(1)
 	clearRegisteredUponCode: (IDLING)
 	cameraShake: s32'ShakeTate', 500, 0, 30, 15
 	label: s32'atk'
 	sprite: s32'zmb404_06', 1
 	spriteOverrideTime: 2, var(act1)
 	mouthPose: (OPEN)
 	sprite: s32'zmb404_07', 1
 	spriteOverrideTime: 2, var(act1)
 	characterSfx: s32'ARC_BTL_ZMB_Titujo_Slash'
 	sprite: s32'zmb404_08', 1
 	setXSpeed: 50000
 	xSpeedPerFrame: 80
 	sprite: s32'zmb404_09', 3
 	enableHitbox: 
 	createObject: s32'zmb404_slashEff', (ZERO)
 	atkZReversal: 1
 	if: var(act1) {
 		createObject: s32'zmb404_ShockEff', (ZERO)
 		addWindPowerOffset: -1000000, 0, 0, 1000, 0, 30, 30
 	} endIf: 
 	spriteEnd: 
 	gotoLabelIfFalse: s32'end', var(act1)
 	sprite: s32'zmb404_10', 2
 	createObject: s32'Kaminotitujyo_kidan', (EX_POINT_0)
 	jumpToStateInObject: (SELF), s32'shot_end'
 	jumpToStateInObject: (DEFENDER), s32'sousai'
 	sprite: s32'zmb404_11', 2
 	atkZReversal: 0
 	sprite: s32'zmb404_12', 2
 	sprite: s32'zmb404_13', 2
 	label: s32'shot_end'
 	sprite: s32'zmb404_11', 3
 	atkZReversal: 0
 	sprite: s32'zmb404_12', 3
 	sprite: s32'zmb404_13', 3
 	sprite: s32'zmb404_11', 3
 	sprite: s32'zmb404_14', 2
 	clearRegisteredUponCode: (SIGNAL0)
 	clearRegisteredUponCode: (SIGNAL2)
 	recoveryState: 
 	sprite: s32'zmb404_15', 2
 	sprite: s32'zmb404_16', 2
 	sprite: s32'zmb404_17', 2
 	sprite: s32'zmb404_18', 2
 	sprite: s32'zmb404_19', 2
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb404_20', 2
 	spriteEnd: 
 	exitState: 
 	label: s32'sousai'
 	sprite: s32'keep', 2
 	clearRegisteredUponCode: (SIGNAL0)
 	clearRegisteredUponCode: (SIGNAL2)
 	jumpToStateInObject: (SELF), s32'sousai_end'
 	upon: (SIGNAL2) {
 		copyVar: var(act0), int(0)
 		jumpToLabel: s32'sousai_loop'
 	} endUpon: 
 	copyVar: var(act0), int(0)
 	sprite: s32'zmb404_12', 4
 	label: s32'sousai_loop'
 	sprite: s32'zmb404_11', 3
 	sprite: s32'zmb404_12', 3
 	sprite: s32'zmb404_13', 3
 	spriteEnd: 
 	modifyVar: (ADD), var(act0), int(1)
 	gotoLabelIfOperation: s32'sousai_loop', (IS_LESS_OR_EQUAL), var(act0), int(1)
 	label: s32'sousai_end'
 	sprite: s32'zmb404_14', 3
 	clearRegisteredUponCode: (SIGNAL0)
 	clearRegisteredUponCode: (SIGNAL2)
 	recoveryState: 
 	sprite: s32'zmb404_15', 3
 	sprite: s32'zmb404_16', 3
 	sprite: s32'zmb404_17', 3
 	sprite: s32'zmb404_18', 3
 	sprite: s32'zmb404_19', 3
 	sprite: s32'zmb404_20', 3
 	spriteEnd: 
 	exitState: 
 	label: s32'end'
 	sprite: s32'zmb404_10', 2
 	recoveryState: 
 	clearRegisteredUponCode: (SIGNAL0)
 	clearRegisteredUponCode: (SIGNAL2)
 	clearRegisteredUponCode: (ON_ATTACK_COLLISION_MAIN_PLAYER)
 	if: var(act1) {
 		if: var(act2) {
 			setArg_objectParameters: int(1), int(1)
 			createObjectWithArg: s32'Kaminotitujyo_kidan', (EX_POINT_0)
 		} endIf: 
 		else:  {
 			setArg_objectParameters: int(0), int(1)
 			createObjectWithArg: s32'Kaminotitujyo_kidan', (EX_POINT_0)
 			copyVar: var(act3), int(0)
 		} endElse: 
 	} endIf: 
 	sprite: s32'zmb404_11', 2
 	atkZReversal: 0
 	sprite: s32'zmb404_12', 2
 	sprite: s32'zmb404_14', 3
 	spriteOverrideTime: 2, var(act3)
 	sprite: s32'zmb404_15', 3
 	spriteOverrideTime: 2, var(act3)
 	sprite: s32'zmb404_16', 3
 	spriteOverrideTime: 2, var(act3)
 	sprite: s32'zmb404_17', 3
 	spriteOverrideTime: 2, var(act3)
 	sprite: s32'zmb404_18', 3
 	spriteOverrideTime: 2, var(act3)
 	sprite: s32'zmb404_19', 3
 	spriteOverrideTime: 2, var(act3)
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb404_20', 2
 	sprite: s32'zmb404_20', 1
 	callSubroutine: s32'cmn_NandemoEnableStand'
 	senkoInputSpecial: 8
 	sprite: s32'zmb000_00', 1
 } endState: 
 
 beginState: s32'AirKaminotitujyo' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnAtkLevel_3_AtkInit'
 		groundKnockbackEffect: (AIR_FACE_UP)
 		damage: 1100
 		attackXKnockback: 45000
 		attackYKnockback: 20000
 		guardPushback: 150
 		setInitialProration: 90
 		attackFinishBlowback: 1
 		atkShakeCamera: s32'ShakeTate', 1000, 0, 15, 0
 		attackDamageEffect: 4, s32'cmn_slash_s_tate'
 		atkHitCommonSEReset: s32'ARC_BTL_TRS_ShngSlsh_Hit_1'
 		guardSoundEffect: s32''
 		guardSoundEffect: s32'ARC_BTL_TRS_ShngSlsh_Grd_1'
 		copyVar: var(obj2), int(0)
 		upon: (ATTACK_COLLISION) {
 			ifOperation: (IS_GREATER_OR_EQUAL), var(act1), int(2) {
 				damage: 1100
 			} endIf: 
 		} endUpon: 
 		upon: (ON_ATTACK_HIT_MAIN_PLAYER_DAMAGE_PRE_CTRL) {
 			clearRegisteredUponCode: (ON_ATTACK_HIT_MAIN_PLAYER_DAMAGE_PRE_CTRL)
 			copyVar: var(obj2), int(1)
 			if: var(IN_BATTLE) {
 				if: var(IsMainPlayerSelf) {
 					ifNot: var(SmashRegular) {
 						copyVar: var(SmashRegular), int(1)
 						copyVar: var(CameraComboOnce3), int(1)
 						callSubroutine: s32'Kaminotitujyo_Camera'
 						groundKnockbackEffect: (AIR_STRONG)
 						airKnockbackEffect: (AIR_STRONG)
 						attackXKnockback: 100000
 						airHitstun: 45
 						wallBounceXVelocityPercent: 7
 						copyVar: var(act2), int(1)
 						copyVar: var(obj2), int(2)
 						whiffCancelOptionBufferTime: s32'FDash_Seigi', 20
 						whiffCancelOptionBufferTime: s32'BDash_Seigi', 20
 					} endIf: 
 				} endIf: 
 			} endIf: 
 		} endUpon: 
 		upon: (ON_ATTACK_COLLISION_MAIN_PLAYER) {
 			copyVar: var(act3), int(1)
 			jumpToLabel: s32'end'
 		} endUpon: 
 		if: var(obj1) {
 			whiffCancelOptionBufferTime: s32'FDash_Seigi', 8
 			whiffCancelOptionBufferTime: s32'BDash_Seigi', 8
 			addWhiffCancelOption: s32'FDash_Seigi'
 			addWhiffCancelOption: s32'BDash_Seigi'
 			copyVar: var(act5), int(1)
 			copyVar: var(act1), int(1)
 		} endIf: 
 	} endUpon: 
 	sprite: s32'zmb404_21', 2
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	resetSpeed: 1
 	ifOperation: (IS_LESS_OR_EQUAL), var(PosY), int(40000) {
 		setYPosition: 40000
 	} endIf: 
 	sprite: s32'zmb404_22', 2
 	sprite: s32'zmb404_02ex01', 2
 	randomVoice: s16'vxxx202', 100, s16'vxxx203', 100, s16'vxxx205', 100, s16'', 0
 	privateBankSE: 0, s32'ARC_BTL_ZMB_Titujo_Chrg', 100
 	sprite: s32'zmb404_03ex01', 2
 	upon: (IDLING) {
 		if: var(act6) {
 			checkInput: (INPUT_NOT_KI)
 			if: var(Result) {
 				jumpToLabel: s32'atk'
 				copyVar: var(act6), int(0)
 			} endIf: 
 		} endIf: 
 		if: var(act5) {
 			copyVar: var(act4), int(0)
 			checkInput: (INPUT_1)
 			if: var(Result) {
 				copyVar: var(act4), int(1)
 			} endIf: 
 			checkInput: (INPUT_3)
 			if: var(Result) {
 				copyVar: var(act4), int(1)
 			} endIf: 
 			checkInput: (INPUT_7)
 			if: var(Result) {
 				copyVar: var(act4), int(1)
 			} endIf: 
 			checkInput: (INPUT_9)
 			if: var(Result) {
 				copyVar: var(act4), int(1)
 			} endIf: 
 			percentageXSpeed: 90
 			percentageYSpeed: 90
 			setGravity: 10
 			ifOperation: (IS_GREATER_OR_EQUAL), var(PosY), int(1200000) {
 				setYSpeed: -100
 			} endIf: 
 			ifOperation: (IS_LESS_OR_EQUAL), var(PosY), int(20000) {
 				setYSpeed: 0
 			} endIf: 
 			checkInput: (INPUT_ANY_FORWARD)
 			if: var(Result) {
 				if: var(act4) {
 					addXSpeed: 3550
 				} endIf: 
 				else:  {
 					addXSpeed: 5000
 				} endElse: 
 			} endIf: 
 			checkInput: (INPUT_ANY_BACK)
 			if: var(Result) {
 				if: var(act4) {
 					addXSpeed: -3550
 				} endIf: 
 				else:  {
 					addXSpeed: -5000
 				} endElse: 
 			} endIf: 
 			checkInput: (INPUT_ANY_UP)
 			if: var(Result) {
 				if: var(act4) {
 					addYSpeed: 3550
 				} endIf: 
 				else:  {
 					addYSpeed: 5000
 				} endElse: 
 				ifOperation: (IS_GREATER_OR_EQUAL), var(PosY), int(1200000) {
 					percentageYSpeed: 10
 				} endIf: 
 			} endIf: 
 			checkInput: (INPUT_ANY_DOWN)
 			if: var(Result) {
 				if: var(act4) {
 					addYSpeed: -3550
 				} endIf: 
 				else:  {
 					addYSpeed: -5000
 				} endElse: 
 				ifOperation: (IS_LESS_OR_EQUAL), var(PosY), int(20000) {
 					percentageYSpeed: 0
 				} endIf: 
 			} endIf: 
 			if: var(act4) {
 				ifOperation: (IS_GREATER_OR_EQUAL), var(SpeedX), int(14200) {
 					addXSpeed: -5000
 					ifOperation: (IS_LESS_OR_EQUAL), var(SpeedX), int(14200) {
 						setXSpeed: 14200
 					} endIf: 
 				} endIf: 
 				ifOperation: (IS_LESS_OR_EQUAL), var(SpeedX), int(-14200) {
 					addXSpeed: 5000
 					ifOperation: (IS_GREATER_OR_EQUAL), var(SpeedX), int(-14200) {
 						setXSpeed: -14200
 					} endIf: 
 				} endIf: 
 				ifOperation: (IS_GREATER_OR_EQUAL), var(SpeedY), int(7100) {
 					addYSpeed: -5000
 					ifOperation: (IS_LESS_OR_EQUAL), var(SpeedY), int(7100) {
 						setYSpeed: 7100
 					} endIf: 
 				} endIf: 
 				ifOperation: (IS_LESS_OR_EQUAL), var(SpeedY), int(-7100) {
 					addYSpeed: 5000
 					ifOperation: (IS_GREATER_OR_EQUAL), var(SpeedY), int(-7100) {
 						setYSpeed: -7100
 					} endIf: 
 				} endIf: 
 			} endIf: 
 			else:  {
 				ifOperation: (IS_GREATER_OR_EQUAL), var(SpeedX), int(20000) {
 					setXSpeed: 20000
 				} endIf: 
 				ifOperation: (IS_LESS_OR_EQUAL), var(SpeedX), int(-20000) {
 					setXSpeed: -20000
 				} endIf: 
 				ifOperation: (IS_GREATER_OR_EQUAL), var(SpeedY), int(10000) {
 					setYSpeed: 10000
 				} endIf: 
 				ifOperation: (IS_LESS_OR_EQUAL), var(SpeedY), int(-10000) {
 					setYSpeed: -10000
 				} endIf: 
 			} endElse: 
 			copyVar: var(act7), var(SpeedY)
 			modifyVar: (MUL), var(act7), int(-1)
 			ifOperation: (IS_GREATER_OR_EQUAL), var(act7), var(PosY) {
 				setYSpeed: 0
 				addYPosition: 1
 			} endIf: 
 			ifOperation: (IS_LESS), var(PosY), int(20000) {
 				setYPosition: 20000
 			} endIf: 
 		} endIf: 
 	} endUpon: 
 	sprite: s32'zmb404_04ex01', 2
 	sprite: s32'zmb404_05ex01', 2
 	sprite: s32'zmb404_03ex01', 1
 	sprite: s32'zmb404_03ex01', 1
 	copyVar: var(act6), int(1)
 	sprite: s32'zmb404_04ex01', 2
 	sprite: s32'zmb404_05ex01', 2
 	sprite: s32'zmb404_03ex01', 1
 	copyVar: var(act1), int(2)
 	copyVar: var(act6), int(0)
 	cameraShake: s32'ShakeTate', 500, 0, 30, 15
 	spriteEnd: 
 	gotoLabelIfFalse: s32'atk', var(act5)
 	sprite: s32'zmb404_03ex01', 1
 	sprite: s32'zmb404_04ex01', 2
 	sprite: s32'zmb404_05ex01', 2
 	sprite: s32'zmb404_03ex01', 2
 	sprite: s32'zmb404_04ex01', 2
 	sprite: s32'zmb404_05ex01', 2
 	sprite: s32'zmb404_03ex01', 2
 	sprite: s32'zmb404_04ex01', 2
 	sprite: s32'zmb404_05ex01', 2
 	label: s32'atk'
 	sprite: s32'zmb404_06ex01', 1
 	spriteOverrideTime: 2, var(act1)
 	mouthPose: (OPEN)
 	sprite: s32'zmb404_07ex01', 1
 	spriteOverrideTime: 2, var(act1)
 	characterSfx: s32'ARC_BTL_ZMB_Titujo_Slash'
 	sprite: s32'zmb404_08ex01', 1
 	clearRegisteredUponCode: (IDLING)
 	resetSpeed: 1
 	setXSpeed: 50000
 	xSpeedPerFrame: 80
 	sprite: s32'zmb404_09ex01', 3
 	enableHitbox: 
 	createObject: s32'zmb404_slashEff', (ZERO)
 	atkZReversal: 1
 	if: var(act1) {
 		createObject: s32'zmb404_ShockEffAir', (ZERO)
 		addWindPowerOffset: -1000000, 0, 0, 1000, 0, 30, 30
 	} endIf: 
 	landingRecovery: 7, 1
 	spriteEnd: 
 	gotoLabelIfFalse: s32'end', var(act1)
 	sprite: s32'zmb404_10ex01', 2
 	createObject: s32'Kaminotitujyo_kidan', (EX_POINT_0)
 	jumpToStateInObject: (SELF), s32'shot_end'
 	jumpToStateInObject: (DEFENDER), s32'sousai'
 	sprite: s32'zmb404_11ex01', 2
 	atkZReversal: 0
 	sprite: s32'zmb404_12ex01', 2
 	sprite: s32'zmb404_13ex01', 2
 	label: s32'shot_end'
 	sprite: s32'zmb404_11ex01', 3
 	atkZReversal: 0
 	enableWhiffCancel: 1
 	sprite: s32'zmb404_12ex01', 3
 	enableWhiffCancel: 0
 	sprite: s32'zmb404_13ex01', 3
 	sprite: s32'zmb404_11ex01', 3
 	sprite: s32'zmb404_14ex01', 2
 	clearRegisteredUponCode: (SIGNAL0)
 	clearRegisteredUponCode: (SIGNAL2)
 	recoveryState: 
 	sprite: s32'zmb404_15ex01', 2
 	sprite: s32'zmb404_16ex01', 2
 	sprite: s32'zmb404_23', 3
 	objectGravity: 
 	sprite: s32'zmb404_24', 3
 	sprite: s32'zmb404_25', 3
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb404_26', 3
 	spriteEnd: 
 	exitState: 
 	label: s32'sousai'
 	sprite: s32'keep', 2
 	clearRegisteredUponCode: (SIGNAL2)
 	jumpToStateInObject: (SELF), s32'sousai_end'
 	upon: (SIGNAL2) {
 		copyVar: var(act0), int(0)
 		jumpToLabel: s32'sousai_loop'
 	} endUpon: 
 	copyVar: var(act0), int(0)
 	sprite: s32'zmb404_12ex01', 4
 	label: s32'sousai_loop'
 	sprite: s32'zmb404_11ex01', 3
 	sprite: s32'zmb404_12ex01', 3
 	sprite: s32'zmb404_13ex01', 3
 	spriteEnd: 
 	modifyVar: (ADD), var(act0), int(1)
 	gotoLabelIfOperation: s32'sousai_loop', (IS_LESS_OR_EQUAL), var(act0), int(1)
 	label: s32'sousai_end'
 	sprite: s32'zmb404_14ex01', 3
 	clearRegisteredUponCode: (SIGNAL0)
 	clearRegisteredUponCode: (SIGNAL2)
 	recoveryState: 
 	sprite: s32'zmb404_15ex01', 3
 	sprite: s32'zmb404_16ex01', 3
 	sprite: s32'zmb404_23', 3
 	sprite: s32'zmb404_24', 3
 	objectGravity: 
 	sprite: s32'zmb404_25', 3
 	sprite: s32'zmb404_26', 3
 	spriteEnd: 
 	exitState: 
 	label: s32'end'
 	sprite: s32'zmb404_10ex01', 2
 	recoveryState: 
 	clearRegisteredUponCode: (SIGNAL0)
 	clearRegisteredUponCode: (SIGNAL2)
 	if: var(act1) {
 		if: var(act2) {
 			setArg_objectParameters: int(1), int(1)
 			createObjectWithArg: s32'Kaminotitujyo_kidan', (EX_POINT_0)
 		} endIf: 
 		else:  {
 			setArg_objectParameters: int(0), int(1)
 			createObjectWithArg: s32'Kaminotitujyo_kidan', (EX_POINT_0)
 			copyVar: var(act3), int(0)
 		} endElse: 
 	} endIf: 
 	enableWhiffCancel: 1
 	sprite: s32'zmb404_11ex01', 2
 	atkZReversal: 0
 	enableWhiffCancel: 0
 	sprite: s32'zmb404_12ex01', 2
 	sprite: s32'zmb404_14ex01', 3
 	spriteOverrideTime: 2, var(act3)
 	sprite: s32'zmb404_15ex01', 3
 	spriteOverrideTime: 2, var(act3)
 	sprite: s32'zmb404_16ex01', 3
 	spriteOverrideTime: 2, var(act3)
 	sprite: s32'zmb404_23', 3
 	spriteOverrideTime: 2, var(act3)
 	objectGravity: 
 	sprite: s32'zmb404_24', 3
 	spriteOverrideTime: 2, var(act3)
 	sprite: s32'zmb404_25', 3
 	spriteOverrideTime: 2, var(act3)
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb404_26', 2
 	sprite: s32'zmb404_26', 1
 	callSubroutine: s32'cmn_NandemoEnableAir'
 	senkoInputSpecial: 8
 	sprite: s32'zmb022_02', 1
 } endState: 
 
 beginState: s32'TenjyonoKagayaki' {
 	upon: (IMMEDIATE) {
 		atkIgnoreCaution: 1
 	} endUpon: 
 	sprite: s32'zmb400_00', 2
 	faceAnimation: 20
 	mouthPose: (OPEN)
 	resetSpeed: 1
 	sprite: s32'zmb400_01', 2
 	sprite: s32'zmb400_02', 2
 	forceRandomVoiceWeak: s16'vxxx207', 100, s16'vxxx208', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb400_03', 1
 	floorEffect: 5, 100
 	modifyVarIntoResult: (SUB), int(450000), var(PosY)
 	modifyVarAfterOperation: (DIV), var(Result), int(13), var(SpeedY)
 	sprite: s32'zmb400_06', 2
 	createObject: s32'TenjounoKagayaki_RingStart', (ZERO)
 	sprite: s32'zmb400_07', 2
 	characterSfx: s32'ARC_BTL_ZMB_Hikou_BasaBi'
 	sprite: s32'zmb400_08', 2
 	sprite: s32'zmb400_09', 3
 	sprite: s32'zmb400_10', 3
 	upon: (RECEIVE_ATTACK) {
 		createObject: s32'Hikarinokabe_RingDelEffAir', (ZERO)
 	} endUpon: 
 	sprite: s32'zmb400_11', 3
 	setYSpeed: 0
 	sprite: s32'zmb400_12', 2
 	sprite: s32'zmb400_12', 2
 	enableWhiffCancel: 1
 	addWhiffCancelOption: s32'Hikou'
 } endState: 
 
 beginState: s32'AirTenjyonoKagayaki' {
 	upon: (IMMEDIATE) {
 		atkIgnoreCaution: 1
 	} endUpon: 
 	sprite: s32'zmb400_13', 1
 	faceAnimation: 20
 	mouthPose: (OPEN)
 	resetSpeed: 1
 	ifOperation: (IS_LESS_OR_EQUAL), var(PosY), int(100000) {
 		modifyVarIntoResult: (SUB), int(100000), var(PosY)
 		modifyVarAfterOperation: (DIV), var(Result), int(11), var(SpeedY)
 	} endIf: 
 	sprite: s32'zmb400_06', 1
 	createObject: s32'TenjounoKagayaki_RingStart', (ZERO)
 	sprite: s32'zmb400_07', 1
 	characterSfx: s32'ARC_BTL_ZMB_Hikou_BasaBi'
 	forceRandomVoiceWeak: s16'vxxx207', 100, s16'vxxx208', 100, s16'', 0, s16'', 0
 	sprite: s32'zmb400_08', 2
 	sprite: s32'zmb400_09', 3
 	sprite: s32'zmb400_10', 3
 	upon: (RECEIVE_ATTACK) {
 		createObject: s32'Hikarinokabe_RingDelEffAir', (ZERO)
 	} endUpon: 
 	sprite: s32'zmb400_11', 3
 	setYSpeed: 0
 	sprite: s32'zmb400_12', 2
 	sprite: s32'zmb400_12', 2
 	enableWhiffCancel: 1
 	addWhiffCancelOption: s32'Hikou'
 } endState: 
 
 beginState: s32'Hikou' {
 	upon: (IMMEDIATE) {
 		atkIgnoreCaution: 1
 		autoAirTurn: 1
 		copyVar: var(plr0), int(1)
 		copyVar: var(plr1), int(1)
 		enableVanish: 1
 		upon: (BEFORE_EXIT) {
 			copyVar: var(plr0), int(0)
 			copyVar: var(obj1), int(1)
 			createObject: s32'Hikarinokabe_RingDelEffAir', (ZERO)
 		} endUpon: 
 		setEventTrigger: (TIMER), 6000
 		upon: (TIMER) {
 			resetSpeed: 1
 			clearRegisteredUponCode: (IDLING)
 			copyVar: var(act5), int(0)
 			jumpToLabel: s32'end'
 		} endUpon: 
 		checkLastStateName: s32'Eiennoseigi_A'
 		if: var(Result) {
 			copyVar: var(act1), int(1)
 		} endIf: 
 		checkLastStateName: s32'Eiennoseigi_B'
 		if: var(Result) {
 			copyVar: var(act1), int(1)
 			copyVar: var(act2), int(1)
 		} endIf: 
 		checkLastStateName: s32'Eiennoseigi_C'
 		if: var(Result) {
 			copyVar: var(act1), int(1)
 			copyVar: var(act2), int(2)
 		} endIf: 
 		checkLastStateName: s32'AirEiennoseigi_A'
 		if: var(Result) {
 			copyVar: var(act1), int(2)
 		} endIf: 
 		checkLastStateName: s32'AirEiennoseigi_B'
 		if: var(Result) {
 			copyVar: var(act1), int(2)
 			copyVar: var(act2), int(1)
 		} endIf: 
 		checkLastStateName: s32'AirEiennoseigi_C'
 		if: var(Result) {
 			copyVar: var(act1), int(2)
 			copyVar: var(act2), int(2)
 		} endIf: 
 		upon: (IDLING) {
 			modifyVar: (ADD), var(plr2), int(1)
 			ifOperation: (IS_GREATER_OR_EQUAL), var(plr2), int(600) {
 				resetSpeed: 1
 				clearRegisteredUponCode: (IDLING)
 				copyVar: var(act5), int(0)
 				jumpToLabel: s32'end'
 			} endIf: 
 			checkInput: (INPUT_1)
 			if: var(Result) {
 				copyVar: var(act5), int(1)
 				copyVar: var(act4), int(1)
 			} endIf: 
 			checkInput: (INPUT_2)
 			if: var(Result) {
 				copyVar: var(act5), int(2)
 				copyVar: var(act4), int(0)
 			} endIf: 
 			checkInput: (INPUT_3)
 			if: var(Result) {
 				copyVar: var(act5), int(3)
 				copyVar: var(act4), int(1)
 			} endIf: 
 			checkInput: (INPUT_4)
 			if: var(Result) {
 				copyVar: var(act5), int(4)
 				copyVar: var(act4), int(0)
 			} endIf: 
 			checkInput: (INPUT_5)
 			if: var(Result) {
 				copyVar: var(act5), int(5)
 				copyVar: var(act4), int(0)
 			} endIf: 
 			checkInput: (INPUT_6)
 			if: var(Result) {
 				copyVar: var(act5), int(6)
 				copyVar: var(act4), int(0)
 			} endIf: 
 			checkInput: (INPUT_7)
 			if: var(Result) {
 				copyVar: var(act5), int(7)
 				copyVar: var(act4), int(1)
 			} endIf: 
 			checkInput: (INPUT_8)
 			if: var(Result) {
 				copyVar: var(act5), int(8)
 				copyVar: var(act4), int(0)
 			} endIf: 
 			checkInput: (INPUT_9)
 			if: var(Result) {
 				copyVar: var(act5), int(9)
 				copyVar: var(act4), int(1)
 			} endIf: 
 			ifNot: var(act1) {
 				percentageXSpeed: 90
 				percentageYSpeed: 90
 				setGravity: 10
 				ifOperation: (IS_LESS_OR_EQUAL), var(EnemyFrontDistance), int(-1) {
 					jumpToLabel: s32'turn'
 				} endIf: 
 				ifOperation: (IS_EQUAL), var(act5), int(5) {
 					ifOperation: (IS_GREATER_OR_EQUAL), var(PosY), int(1200000) {
 						setYSpeed: -100
 					} endIf: 
 					ifOperation: (IS_LESS_OR_EQUAL), var(PosY), int(100000) {
 						setYSpeed: 0
 					} endIf: 
 					if: var(act0) {
 						copyVar: var(act0), int(0)
 						jumpToLabel: s32'modori'
 					} endIf: 
 				} endIf: 
 				else:  {
 					ifNot: var(act0) {
 						copyVar: var(act0), int(1)
 						faceOpponent: 
 						jumpToLabel: s32'pre_move'
 					} endIf: 
 					checkInput: (INPUT_ANY_FORWARD)
 					if: var(Result) {
 						if: var(act4) {
 							addXSpeed: 4260
 						} endIf: 
 						else:  {
 							addXSpeed: 6000
 						} endElse: 
 					} endIf: 
 					checkInput: (INPUT_ANY_BACK)
 					if: var(Result) {
 						if: var(act4) {
 							addXSpeed: -4260
 						} endIf: 
 						else:  {
 							addXSpeed: -6000
 						} endElse: 
 					} endIf: 
 					checkInput: (INPUT_ANY_UP)
 					if: var(Result) {
 						if: var(act4) {
 							addYSpeed: 4260
 						} endIf: 
 						else:  {
 							addYSpeed: 6000
 						} endElse: 
 						ifOperation: (IS_GREATER_OR_EQUAL), var(PosY), int(1200000) {
 							percentageYSpeed: 10
 						} endIf: 
 					} endIf: 
 					checkInput: (INPUT_ANY_DOWN)
 					if: var(Result) {
 						if: var(act4) {
 							addYSpeed: -4260
 						} endIf: 
 						else:  {
 							addYSpeed: -6000
 						} endElse: 
 						ifOperation: (IS_LESS_OR_EQUAL), var(PosY), int(100000) {
 							percentageYSpeed: 0
 						} endIf: 
 					} endIf: 
 					if: var(act4) {
 						ifOperation: (IS_GREATER_OR_EQUAL), var(SpeedX), int(38340) {
 							addXSpeed: -6000
 							ifOperation: (IS_LESS_OR_EQUAL), var(SpeedX), int(38340) {
 								setXSpeed: 38340
 							} endIf: 
 						} endIf: 
 						ifOperation: (IS_LESS_OR_EQUAL), var(SpeedX), int(-27690) {
 							addXSpeed: 6000
 							ifOperation: (IS_GREATER_OR_EQUAL), var(SpeedX), int(-27690) {
 								setXSpeed: -27690
 							} endIf: 
 						} endIf: 
 						ifOperation: (IS_GREATER_OR_EQUAL), var(SpeedY), int(27690) {
 							addYSpeed: -6000
 							ifOperation: (IS_LESS_OR_EQUAL), var(SpeedY), int(27690) {
 								setYSpeed: 27690
 							} endIf: 
 						} endIf: 
 						ifOperation: (IS_LESS_OR_EQUAL), var(SpeedY), int(-38340) {
 							addYSpeed: 6000
 							ifOperation: (IS_GREATER_OR_EQUAL), var(SpeedY), int(-38340) {
 								setYSpeed: -38340
 							} endIf: 
 						} endIf: 
 					} endIf: 
 					else:  {
 						ifOperation: (IS_GREATER_OR_EQUAL), var(SpeedX), int(54000) {
 							setXSpeed: 54000
 						} endIf: 
 						ifOperation: (IS_LESS_OR_EQUAL), var(SpeedX), int(-39000) {
 							setXSpeed: -39000
 						} endIf: 
 						ifOperation: (IS_GREATER_OR_EQUAL), var(SpeedY), int(39000) {
 							setYSpeed: 39000
 						} endIf: 
 						ifOperation: (IS_LESS_OR_EQUAL), var(SpeedY), int(-54000) {
 							setYSpeed: -54000
 						} endIf: 
 					} endElse: 
 				} endElse: 
 				ifNot: var(IN_BATTLE) {
 					resetSpeed: 1
 					clearRegisteredUponCode: (IDLING)
 					copyVar: var(act5), int(0)
 					jumpToLabel: s32'end'
 				} endIf: 
 			} endIf: 
 			copyVar: var(act3), var(SpeedY)
 			modifyVar: (MUL), var(act3), int(-1)
 			ifOperation: (IS_GREATER_OR_EQUAL), var(act3), var(PosY) {
 				setYSpeed: 0
 				addYPosition: 1
 			} endIf: 
 			ifNot: var(act6) {
 				ifOperation: (IS_LESS_OR_EQUAL), var(PosY), int(100000) {
 					setYPosition: 100000
 				} endIf: 
 			} endIf: 
 		} endUpon: 
 	} endUpon: 
 	gotoLabelIfFalse: s32'start', var(act1)
 	sprite: s32'zmb403_11', 2
 	setInertia: 0
 	xSpeedPerFrame: 85
 	setYSpeed: 0
 	copyVar: var(act6), int(1)
 	ifVarOfObjectTrue: (ENEMY_MAIN_PLAYER), var(PlayerDamage) {
 		jumpToLabel: s32'hasei2'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act2), int(2) {
 		jumpToLabel: s32'hasei2'
 	} endIf: 
 	sprite: s32'zmb403_12', 3
 	label: s32'hasei2'
 	sprite: s32'zmb403_15', 6
 	mouthPose: (SHOW_TEETH)
 	ifOperation: (IS_EQUAL), var(act1), int(2) {
 		setYSpeed: 20000
 	} endIf: 
 	else:  {
 		setYSpeed: 20000
 	} endElse: 
 	xSpeedPerFrame: 95
 	ifOperation: (IS_EQUAL), var(act2), int(1) {
 		setXSpeed: -30000
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act2), int(2) {
 		setXSpeed: 20000
 		setYSpeed: 20000
 	} endIf: 
 	sprite: s32'zmb403_16', 6
 	createObject: s32'TenjounoKagayaki_RingStart', (ZERO)
 	triggerUponInObject: s32'zmb403_slashEff', (SIGNAL0)
 	ifOperation: (IS_EQUAL), var(act2), int(2) {
 		spriteOverrideTime: 1, var(act2)
 	} endIf: 
 	sprite: s32'zmb403_17', 2
 	ifOperation: (IS_EQUAL), var(act2), int(2) {
 		spriteOverrideTime: 1, var(act2)
 	} endIf: 
 	sprite: s32'zmb403_17', 1
 	percentageYSpeed: 1
 	label: s32'start'
 	sprite: s32'zmb401_00', 1
 	callSubroutine: s32'cmn_NandemoEnableAir'
 	autoInputDirectionSearch: 0
 	enableDoubleJump: 0
 	enableAirForwardDash: 0
 	enableAirBackDash: 0
 	copyVar: var(act1), int(0)
 	copyVar: var(act6), int(0)
 	landingRecovery: 7, 1
 	xSpeedPerFrame: 100
 	label: s32'neutral'
 	sprite: s32'zmb401_00', 4
 	faceAnimation: 20
 	mouthPose: (OPEN)
 	sprite: s32'zmb401_01', 4
 	sprite: s32'zmb401_02', 4
 	spriteEnd: 
 	gotoLabel: s32'neutral'
 	label: s32'turn'
 	sprite: s32'zmb401_41', 3
 	flipDirection: 
 	sprite: s32'zmb401_40', 2
 	sprite: s32'zmb401_40', 1
 	copyVar: var(act0), int(0)
 	spriteEnd: 
 	gotoLabel: s32'neutral'
 	label: s32'pre_move'
 	sprite: s32'zmb401_08', 3
 	ifOperation: (IS_EQUAL), var(act5), int(2) {
 		spriteOverrideFrame: s32'zmb401_12'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(3) {
 		spriteOverrideFrame: s32'zmb401_16'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(4) {
 		spriteOverrideFrame: s32'zmb401_20'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(6) {
 		spriteOverrideFrame: s32'zmb401_24'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(7) {
 		spriteOverrideFrame: s32'zmb401_28'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(8) {
 		spriteOverrideFrame: s32'zmb401_32'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(9) {
 		spriteOverrideFrame: s32'zmb401_36'
 	} endIf: 
 	spriteEnd: 
 	label: s32'move'
 	sprite: s32'zmb401_09', 3
 	faceAnimation: 20
 	mouthPose: (OPEN)
 	ifOperation: (IS_EQUAL), var(act5), int(2) {
 		spriteOverrideFrame: s32'zmb401_13'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(3) {
 		spriteOverrideFrame: s32'zmb401_17'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(4) {
 		spriteOverrideFrame: s32'zmb401_21'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(6) {
 		spriteOverrideFrame: s32'zmb401_25'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(7) {
 		spriteOverrideFrame: s32'zmb401_29'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(8) {
 		spriteOverrideFrame: s32'zmb401_33'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(9) {
 		spriteOverrideFrame: s32'zmb401_37'
 	} endIf: 
 	sprite: s32'zmb401_10', 3
 	ifOperation: (IS_EQUAL), var(act5), int(2) {
 		spriteOverrideFrame: s32'zmb401_14'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(3) {
 		spriteOverrideFrame: s32'zmb401_18'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(4) {
 		spriteOverrideFrame: s32'zmb401_22'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(6) {
 		spriteOverrideFrame: s32'zmb401_26'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(7) {
 		spriteOverrideFrame: s32'zmb401_30'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(8) {
 		spriteOverrideFrame: s32'zmb401_34'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(9) {
 		spriteOverrideFrame: s32'zmb401_38'
 	} endIf: 
 	sprite: s32'zmb401_11', 3
 	ifOperation: (IS_EQUAL), var(act5), int(2) {
 		spriteOverrideFrame: s32'zmb401_15'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(3) {
 		spriteOverrideFrame: s32'zmb401_19'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(4) {
 		spriteOverrideFrame: s32'zmb401_23'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(6) {
 		spriteOverrideFrame: s32'zmb401_27'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(7) {
 		spriteOverrideFrame: s32'zmb401_31'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(8) {
 		spriteOverrideFrame: s32'zmb401_35'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(9) {
 		spriteOverrideFrame: s32'zmb401_39'
 	} endIf: 
 	spriteEnd: 
 	gotoLabel: s32'move'
 	label: s32'modori'
 	sprite: s32'zmb401_08', 3
 	faceAnimation: 20
 	mouthPose: (OPEN)
 	ifOperation: (IS_EQUAL), var(act5), int(2) {
 		spriteOverrideFrame: s32'zmb401_12'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(3) {
 		spriteOverrideFrame: s32'zmb401_16'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(4) {
 		spriteOverrideFrame: s32'zmb401_20'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(6) {
 		spriteOverrideFrame: s32'zmb401_24'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(7) {
 		spriteOverrideFrame: s32'zmb401_28'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(8) {
 		spriteOverrideFrame: s32'zmb401_32'
 	} endIf: 
 	ifOperation: (IS_EQUAL), var(act5), int(9) {
 		spriteOverrideFrame: s32'zmb401_36'
 	} endIf: 
 	copyVar: var(act5), int(0)
 	ctrlDirectionVsTarget: 
 	spriteEnd: 
 	gotoLabel: s32'neutral'
 	label: s32'end'
 	sprite: s32'zmb401_03', 3
 	resetSpeed: 1
 	enableWhiffCancel: 1
 	addWhiffCancelOption: s32'Hikou_End_Hasei'
 } endState: 
 
 beginState: s32'FDash_Hikou' {
 	upon: (IMMEDIATE) {
 		atkIgnoreCaution: 1
 	} endUpon: 
 	sprite: s32'zmb401_24', 3
 	faceAnimation: 20
 	mouthPose: (OPEN)
 	setXSpeed: 10000
 	setYSpeed: 0
 	enableSuperArmor: 1
 	sprite: s32'zmb401_25', 3
 	sprite: s32'zmb401_26', 3
 	setXSpeed: 150000
 	displayModel: 0
 	setNoCollision: 0
 	setArg_angle: int(-90000)
 	createParticleWithArg: s32'cmn_Warp', (CENTER)
 	cmnSfx: s32'ARC_BTL_CMN_TLP_Short'
 	sprite: s32'zmb401_27', 3
 	setNoCollision: 1
 	enableSuperArmor: 0
 	sprite: s32'zmb022_02', 1
 	setXSpeed: 10000
 	xSpeedPerFrame: 80
 	setYSpeed: 8000
 	objectGravity: 
 	faceOpponent: 
 	displayModel: 1
 	removeLandingRecovery: 
 	ifOperation: (IS_LESS_OR_EQUAL), var(PosY), int(75000) {
 		setYPosition: 75000
 	} endIf: 
 } endState: 
 
 beginState: s32'BDash_Hikou' {
 	upon: (IMMEDIATE) {
 		atkIgnoreCaution: 1
 	} endUpon: 
 	sprite: s32'zmb401_20', 3
 	faceAnimation: 20
 	mouthPose: (OPEN)
 	setXSpeed: -10000
 	setYSpeed: 0
 	enableSuperArmor: 1
 	sprite: s32'zmb401_21', 3
 	sprite: s32'zmb401_22', 3
 	setXSpeed: -150000
 	displayModel: 0
 	setNoCollision: 0
 	setArg_angle: int(-90000)
 	createParticleWithArg: s32'cmn_Warp', (CENTER)
 	cmnSfx: s32'ARC_BTL_CMN_TLP_Short'
 	sprite: s32'zmb401_23', 3
 	setNoCollision: 1
 	enableSuperArmor: 0
 	sprite: s32'zmb022_02', 1
 	removeLandingRecovery: 
 	setXSpeed: -10000
 	xSpeedPerFrame: 80
 	setYSpeed: 8000
 	objectGravity: 
 	faceOpponent: 
 	displayModel: 1
 	removeLandingRecovery: 
 	ifOperation: (IS_LESS_OR_EQUAL), var(PosY), int(75000) {
 		setYPosition: 75000
 	} endIf: 
 } endState: 
 
 beginState: s32'FDash_Seigi' {
 	upon: (IMMEDIATE) {
 		atkIgnoreCaution: 1
 		checkLastStateName: s32'AirKaminotitujyo'
 		if: var(Result) {
 			copyVar: var(act0), int(1)
 		} endIf: 
 	} endUpon: 
 	sprite: s32'zmb403_11', 2
 	setInertia: 0
 	xSpeedPerFrame: 85
 	setYSpeed: 0
 	enableSuperArmor: 1
 	if: var(act0) {
 		spriteOverrideFrame: s32'zmb404_11ex01'
 	} endIf: 
 	sprite: s32'zmb403_12', 3
 	setXSpeed: 150000
 	displayModel: 0
 	setArg_angle: int(-90000)
 	createParticleWithArg: s32'cmn_Warp', (CENTER)
 	cmnSfx: s32'ARC_BTL_CMN_TLP_Short'
 	if: var(act0) {
 		setXSpeed: 250000
 		spriteOverrideFrame: s32'zmb404_12ex01'
 	} endIf: 
 	if: var(obj2) {
 		if: var(EnemyInHitstun) {
 			setXSpeed: 100000
 			ifOperation: (IS_GREATER_OR_EQUAL), var(obj2), int(2) {
 				setXSpeed: 0
 				spriteAddTime: 13
 			} endIf: 
 		} endIf: 
 	} endIf: 
 	sprite: s32'zmb403_12', 3
 	setNoCollision: 1
 	enableSuperArmor: 0
 	sprite: s32'zmb022_02', 1
 	displayModel: 1
 	setXSpeed: 10000
 	xSpeedPerFrame: 80
 	if: var(obj2) {
 		if: var(EnemyInHitstun) {
 			moveTo: (ENEMY_MAIN_PLAYER)
 			addXPosition: -10000
 			setXSpeed: 60000
 			addYPosition: 230000
 			ifOperation: (IS_GREATER_OR_EQUAL), var(obj2), int(2) {
 				addYPosition: -130000
 			} endIf: 
 		} endIf: 
 	} endIf: 
 	ifOperation: (IS_LESS_OR_EQUAL), var(PosY), int(75000) {
 		setYPosition: 75000
 	} endIf: 
 	setYSpeed: 8000
 	objectGravity: 
 	faceOpponent: 
 	removeLandingRecovery: 
 } endState: 
 
 beginState: s32'BDash_Seigi' {
 	upon: (IMMEDIATE) {
 		atkIgnoreCaution: 1
 		checkLastStateName: s32'AirKaminotitujyo'
 		if: var(Result) {
 			copyVar: var(act0), int(1)
 		} endIf: 
 	} endUpon: 
 	sprite: s32'zmb403_11', 2
 	setInertia: 0
 	xSpeedPerFrame: 85
 	setYSpeed: 0
 	enableSuperArmor: 1
 	if: var(act0) {
 		spriteOverrideFrame: s32'zmb404_11ex01'
 	} endIf: 
 	sprite: s32'zmb403_12', 3
 	setXSpeed: -150000
 	displayModel: 0
 	setNoCollision: 0
 	setArg_angle: int(-90000)
 	createParticleWithArg: s32'cmn_Warp', (CENTER)
 	cmnSfx: s32'ARC_BTL_CMN_TLP_Short'
 	sprite: s32'zmb403_12', 3
 	setNoCollision: 1
 	enableSuperArmor: 0
 	sprite: s32'zmb022_02', 1
 	setXSpeed: -10000
 	xSpeedPerFrame: 80
 	setYSpeed: 8000
 	objectGravity: 
 	faceOpponent: 
 	displayModel: 1
 	removeLandingRecovery: 
 } endState: 
 
 beginState: s32'Hikou_End' {
 	upon: (IMMEDIATE) {
 		atkIgnoreCaution: 1
 		enableVanish: 1
 	} endUpon: 
 	sprite: s32'zmb401_03', 2
 	faceAnimation: 20
 	mouthPose: (SHOW_TEETH)
 	resetSpeed: 1
 	deactivateObjectByName: s32'Hikarinokabe_RingDelEffAir'
 	upon: (BEFORE_EXIT) {
 		createObject: s32'Hikarinokabe_RingDelEffAir', (ZERO)
 	} endUpon: 
 	sprite: s32'zmb401_04', 2
 	sprite: s32'zmb401_05', 2
 	clearRegisteredUponCode: (BEFORE_EXIT)
 	createObject: s32'Hikarinokabe_RingDelEffAir', (ZERO)
 	sprite: s32'zmb401_06', 2
 	sprite: s32'zmb401_07', 2
 	objectGravity: 
 	removeLandingRecovery: 
 } endState: 
 
 beginState: s32'Seinarugyakurin' {
 	upon: (IMMEDIATE) {
 		playerActionInitializeByCategory: 20, 1
 		skillFinishToDownLoop: 1
 		upon: (SIGNAL3) {
 			clearRegisteredUponCode: (SIGNAL3)
 			copyVar: var(act1), int(1)
 			enableMemberChangeUltimate: 0
 			enableSuperArmor: 1
 		} endUpon: 
 		upon: (SIGNAL5) {
 			clearRegisteredUponCode: (SIGNAL5)
 			copyVar: var(act2), int(1)
 		} endUpon: 
 		finishCameraRequest: s32'FinishCamera_Seinarugyakurin'
 		tensionUsage: 10000
+		if: var(CmnCharaReg7) {
+			addGatlingOption: s32'Zettainoikazuti'
+			addGatlingOption: s32'AirZettainoikazuti'
+			whiffCancelOptionBufferTime: s32'Zettainoikazuti', 40
+			whiffCancelOptionBufferTime: s32'AirZettainoikazuti', 40
+		} endIf: 
 	} endUpon: 
 	sprite: s32'zmb010_00', 2
 	faceAnimation: 21
 	mouthPose: (CLOSED)
 	resetSpeed: 1
 	sprite: s32'zmb010_01', 2
 	sprite: s32'zmb430_00', 2
 	setGravity: -2000
 	characterSfx: s32'ARC_BTL_ZMB_Gekirin_Bisi'
 	sprite: s32'zmb430_00', 3
 	superFreeze: 3, 119, 85, 85
 	enableSuperArmor: 1
 	upon: (SUPERFREEZE) {
 		clearRegisteredUponCode: (SUPERFREEZE)
 		callSubroutine: s32'cmn1gaugeWLDSTP'
 		cameraForceMove: 1
 		moveCameraEx: (SELF), 221946, 227483, -25121, 4935, -8121, 4500, 54, 40, 25, 10, 0, 2, 2
 	} endUpon: 
 	sprite: s32'zmb430_01', 9
 	hideAllButSelf: 1
 	forceRandomVoice: s16'vxxx215', 100, s16'vxxx216', 100, s16'vxxx219', 100, s16'vxxx220', 100
 	sprite: s32'zmb430_01', 2
 	sprite: s32'zmb430_01', 3
 	sprite: s32'zmb430_02', 4
 	resetSpeed: 1
 	sprite: s32'zmb430_03', 4
 	characterSfx: s32'ARC_BTL_ZMB_Gekirin_Chrg'
 	sprite: s32'zmb430_02', 4
 	overrideLightDirection: 10, 60
 	createObject: s32'Seinarugyakurin_Tame', (EX_POINT_0)
 	cameraShake: s32'ShakeTate', 200, 40, 110, 20
 	sprite: s32'zmb430_03', 4
 	sprite: s32'zmb430_04', 4
 	sprite: s32'zmb430_02', 4
 	sprite: s32'zmb430_03', 4
 	sprite: s32'zmb430_04', 4
 	sprite: s32'zmb430_05', 4
 	sprite: s32'zmb430_06', 4
 	sprite: s32'zmb430_07', 4
 	sprite: s32'zmb430_08', 4
 	resetLightDirection: 
 	sprite: s32'zmb430_09', 4
 	sprite: s32'zmb430_10', 4
 	hideAllButSelf: 0
 	sprite: s32'zmb430_11', 4
 	sprite: s32'zmb430_12', 3
 	sprite: s32'zmb430_13', 3
 	sprite: s32'zmb430_14', 3
 	sprite: s32'zmb430_15', 3
 	sprite: s32'zmb430_16', 3
 	cameraShake: s32'ShakeYoko', 2000, 0, 10, 0
 	mouthPose: (OPEN)
 	deactivateObjectByName: s32'Seinarugyakurin_start'
 	createObject: s32'Seinarugyakurin_Atk', (EX_POINT_0)
 	upon: (SIGNAL1) {
 		ignoreWorldStopByFriend: 0
 		jumpToLabel: s32'end'
 	} endUpon: 
 	jumpToStateInObject: (DEFENDER), s32'sousai'
 	upon: (SIGNAL4) {
 		clearRegisteredUponCode: (SIGNAL4)
 		enableMemberChangeUltimate: 1
 	} endUpon: 
 	label: s32'loop'
 	sprite: s32'zmb430_17', 3
 	ifNot: var(act1) {
 		enableSuperArmor: 0
 	} endIf: 
 	sprite: s32'zmb430_18', 3
 	spriteEnd: 
 	modifyVar: (ADD), var(act0), int(1)
 	gotoLabelIfOperation: s32'loop', (IS_LESS_OR_EQUAL), var(act0), int(30)
 	label: s32'end'
 	sprite: s32'zmb430_17', 3
 	clearRegisteredUponCode: (SIGNAL1)
 	clearRegisteredUponCode: (SIGNAL2)
 	spriteOverrideTime: 18, var(act2)
 	sprite: s32'zmb430_18', 3
 	sprite: s32'zmb430_17', 3
 	sprite: s32'zmb430_18', 3
 	recoveryState: 
 	sprite: s32'zmb430_17', 3
 	sprite: s32'zmb430_18', 3
 	mouthPose: (SHOW_TEETH)
 	spriteEnd: 
 	gotoLabelIfTrue: s32'end2', var(act1)
 	sprite: s32'zmb430_17', 3
 	sprite: s32'zmb430_18', 3
 	sprite: s32'zmb430_17', 3
 	sprite: s32'zmb430_18', 3
 	label: s32'end2'
 	sprite: s32'zmb430_19', 3
 	sprite: s32'zmb430_20', 3
 	setYSpeed: 8000
 	objectGravity: 
 	sprite: s32'zmb430_21', 3
 	sprite: s32'zmb430_22', 3
 	sprite: s32'zmb430_23', 3
 	sprite: s32'zmb022_02', 3
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb022_03', 2
 	sprite: s32'zmb022_04', 2
 	sprite: s32'zmb022_05', 2
 	spriteEnd: 
 	exitState: 
 	label: s32'sousai'
 	sprite: s32'zmb430_17', 3
 	clearRegisteredUponCode: (SIGNAL1)
 	clearRegisteredUponCode: (SIGNAL2)
 	jumpToStateInObject: (ATTACKER), s32'sousai_end'
 	upon: (SIGNAL2) {
 		copyVar: var(act0), int(0)
 		jumpToLabel: s32'sousai_loop'
 	} endUpon: 
 	copyVar: var(act0), int(0)
 	ifOperation: (IS_GREATER_OR_EQUAL), var(EnemyFrontDistance), int(700000) {
 		enableSuperArmor: 1
 	} endIf: 
 	sprite: s32'zmb430_18', 3
 	label: s32'sousai_loop'
 	sprite: s32'zmb430_17', 3
 	sprite: s32'zmb430_18', 3
 	spriteEnd: 
 	modifyVar: (ADD), var(act0), int(1)
 	gotoLabelIfOperation: s32'sousai_loop', (IS_LESS_OR_EQUAL), var(act0), int(2)
 	label: s32'sousai_end'
 	sprite: s32'zmb430_17', 4
 	clearRegisteredUponCode: (SIGNAL1)
 	clearRegisteredUponCode: (SIGNAL2)
 	sprite: s32'zmb430_18', 2
 	sprite: s32'zmb430_17', 2
 	enableSuperArmor: 0
 	sprite: s32'zmb430_19', 2
 	sprite: s32'zmb430_20', 2
 	recoveryState: 
 	setYSpeed: 8000
 	objectGravity: 
 	sprite: s32'zmb430_21', 3
 	sprite: s32'zmb430_22', 3
 	sprite: s32'zmb430_23', 3
 } endState: 
 
 beginState: s32'AirSeinarugyakurin' {
 	upon: (IMMEDIATE) {
 		removeLandingRecovery: 
 		skillFinishToDownLoop: 1
 		upon: (SIGNAL3) {
 			clearRegisteredUponCode: (SIGNAL3)
 			copyVar: var(act1), int(1)
 			enableMemberChangeUltimate: 0
 			enableSuperArmor: 1
 		} endUpon: 
 		upon: (SIGNAL5) {
 			clearRegisteredUponCode: (SIGNAL5)
 			copyVar: var(act2), int(1)
 		} endUpon: 
 		finishCameraRequest: s32'FinishCamera_Seinarugyakurin'
 		tensionUsage: 10000
+		if: var(CmnCharaReg7) {
+			addGatlingOption: s32'Zettainoikazuti'
+			addGatlingOption: s32'AirZettainoikazuti'
+			whiffCancelOptionBufferTime: s32'Zettainoikazuti', 40
+			whiffCancelOptionBufferTime: s32'AirZettainoikazuti', 40
+		} endIf: 
 	} endUpon: 
 	sprite: s32'zmb021_00', 2
 	faceAnimation: 21
 	mouthPose: (CLOSED)
 	setYSpeed: 0
 	setGravity: -2000
 	sprite: s32'zmb021_01', 2
 	sprite: s32'zmb021_02', 2
 	characterSfx: s32'ARC_BTL_ZMB_Gekirin_Bisi'
 	sprite: s32'zmb430_00', 3
 	setXSpeed: 0
 	superFreeze: 3, 119, 85, 85
 	enableSuperArmor: 1
 	upon: (SUPERFREEZE) {
 		clearRegisteredUponCode: (SUPERFREEZE)
 		callSubroutine: s32'cmn1gaugeWLDSTP'
 		cameraForceMove: 1
 		moveCameraEx: (SELF), 221946, 227483, -25121, 4935, -8121, 4500, 54, 40, 25, 10, 0, 2, 2
 	} endUpon: 
 	sprite: s32'zmb430_01', 9
 	hideAllButSelf: 1
 	forceRandomVoice: s16'vxxx215', 100, s16'vxxx216', 100, s16'vxxx219', 100, s16'vxxx220', 100
 	sprite: s32'zmb430_01', 2
 	resetSpeed: 1
 	sprite: s32'zmb430_01', 3
 	sprite: s32'zmb430_02', 4
 	sprite: s32'zmb430_03', 4
 	characterSfx: s32'ARC_BTL_ZMB_Gekirin_Chrg'
 	sprite: s32'zmb430_02', 4
 	overrideLightDirection: 10, 60
 	createObject: s32'Seinarugyakurin_Tame', (EX_POINT_0)
 	cameraShake: s32'ShakeTate', 200, 40, 110, 20
 	sprite: s32'zmb430_03', 4
 	sprite: s32'zmb430_04', 4
 	sprite: s32'zmb430_02', 4
 	sprite: s32'zmb430_03', 4
 	sprite: s32'zmb430_04', 4
 	sprite: s32'zmb430_05', 4
 	sprite: s32'zmb430_06', 4
 	sprite: s32'zmb430_07', 4
 	sprite: s32'zmb430_08', 4
 	resetLightDirection: 
 	sprite: s32'zmb430_09', 4
 	sprite: s32'zmb430_10', 4
 	hideAllButSelf: 0
 	sprite: s32'zmb430_11', 4
 	sprite: s32'zmb430_12', 3
 	sprite: s32'zmb430_13', 3
 	sprite: s32'zmb430_14', 3
 	sprite: s32'zmb430_15', 3
 	sprite: s32'zmb430_16', 3
 	cameraShake: s32'ShakeYoko', 2000, 0, 10, 0
 	mouthPose: (OPEN)
 	deactivateObjectByName: s32'Seinarugyakurin_start'
 	createObject: s32'Seinarugyakurin_Atk', (EX_POINT_0)
 	upon: (SIGNAL1) {
 		ignoreWorldStopByFriend: 0
 		jumpToLabel: s32'end'
 	} endUpon: 
 	jumpToStateInObject: (DEFENDER), s32'sousai'
 	upon: (SIGNAL4) {
 		clearRegisteredUponCode: (SIGNAL4)
 		enableMemberChangeUltimate: 1
 	} endUpon: 
 	label: s32'loop'
 	sprite: s32'zmb430_17', 3
 	ifNot: var(act1) {
 		enableSuperArmor: 0
 	} endIf: 
 	sprite: s32'zmb430_18', 3
 	spriteEnd: 
 	modifyVar: (ADD), var(act0), int(1)
 	gotoLabelIfOperation: s32'loop', (IS_LESS_OR_EQUAL), var(act0), int(30)
 	label: s32'end'
 	sprite: s32'zmb430_17', 3
 	clearRegisteredUponCode: (SIGNAL1)
 	clearRegisteredUponCode: (SIGNAL2)
 	spriteOverrideTime: 18, var(act2)
 	sprite: s32'zmb430_18', 3
 	sprite: s32'zmb430_17', 3
 	sprite: s32'zmb430_18', 3
 	recoveryState: 
 	sprite: s32'zmb430_17', 3
 	sprite: s32'zmb430_18', 3
 	mouthPose: (SHOW_TEETH)
 	spriteEnd: 
 	gotoLabelIfTrue: s32'end2', var(act1)
 	sprite: s32'zmb430_17', 3
 	sprite: s32'zmb430_18', 3
 	sprite: s32'zmb430_17', 3
 	sprite: s32'zmb430_18', 3
 	label: s32'end2'
 	sprite: s32'zmb430_19', 3
 	sprite: s32'zmb430_20', 3
 	setYSpeed: 8000
 	objectGravity: 
 	sprite: s32'zmb430_21', 3
 	sprite: s32'zmb430_22', 3
 	sprite: s32'zmb430_23', 3
 	sprite: s32'zmb022_02', 3
 	mouthPose: (SHOW_TEETH)
 	sprite: s32'zmb022_03', 2
 	sprite: s32'zmb022_04', 2
 	sprite: s32'zmb022_05', 2
 	spriteEnd: 
 	exitState: 
 	label: s32'sousai'
 	sprite: s32'zmb430_17', 3
 	clearRegisteredUponCode: (SIGNAL1)
 	clearRegisteredUponCode: (SIGNAL2)
 	jumpToStateInObject: (ATTACKER), s32'sousai_end'
 	upon: (SIGNAL2) {
 		copyVar: var(act0), int(0)
 		jumpToLabel: s32'sousai_loop'
 	} endUpon: 
 	copyVar: var(act0), int(0)
 	ifOperation: (IS_GREATER_OR_EQUAL), var(EnemyFrontDistance), int(700000) {
 		enableSuperArmor: 1
 	} endIf: 
 	sprite: s32'zmb430_18', 3
 	label: s32'sousai_loop'
 	sprite: s32'zmb430_17', 3
 	sprite: s32'zmb430_18', 3
 	spriteEnd: 
 	modifyVar: (ADD), var(act0), int(1)
 	gotoLabelIfOperation: s32'sousai_loop', (IS_LESS_OR_EQUAL), var(act0), int(2)
 	label: s32'sousai_end'
 	sprite: s32'zmb430_17', 4
 	clearRegisteredUponCode: (SIGNAL1)
 	clearRegisteredUponCode: (SIGNAL2)
 	sprite: s32'zmb430_18', 2
 	sprite: s32'zmb430_17', 2
 	enableSuperArmor: 0
 	sprite: s32'zmb430_19', 2
 	sprite: s32'zmb430_20', 2
 	recoveryState: 
 	setYSpeed: 8000
 	objectGravity: 
 	sprite: s32'zmb430_21', 3
 	sprite: s32'zmb430_22', 3
 	sprite: s32'zmb430_23', 3
 } endState: 
 
 beginState: s32'Sabakinoyaiba' {
 	upon: (IMMEDIATE) {
 		skillFinishToDownLoop: 1
 		atkIgnoreCaution: 1
 		tensionUsage: 10000
 	} endUpon: 
 	sprite: s32'zmb010_00', 2
 	faceAnimation: 21
 	mouthPose: (CLOSED)
 	resetSpeed: 1
 	sprite: s32'zmb010_01', 2
 	sprite: s32'zmb021_00', 2
 	setGravity: -4000
 	upon: (IDLING) {
 		if: var(Direction) {
 			ifOperation: (IS_LESS_OR_EQUAL), var(PosXRaw), int(-2600000) {
 				setXSpeed: -20000
 			} endIf: 
 		} endIf: 
 		else:  {
 			ifOperation: (IS_GREATER_OR_EQUAL), var(PosXRaw), int(2600000) {
 				setXSpeed: -20000
 			} endIf: 
 		} endElse: 
 	} endUpon: 
 	sprite: s32'zmb021_01', 2
 	sprite: s32'zmb021_02', 2
 	clearRegisteredUponCode: (IDLING)
 	superFreeze: 3, 119, 100, 100
 	enableSuperArmor: 1
 	upon: (SUPERFREEZE) {
 		clearRegisteredUponCode: (SUPERFREEZE)
 		callSubroutine: s32'cmn1gaugeWLDSTP'
 		cameraForceMove: 1
 		moveCameraEx: (SELF), 170015, 48065, 109870, 2300, -13682, 0, 54, 15, 40, 10, 0, 2, 0
 	} endUpon: 
 	sprite: s32'zmb431_00', 3
 	overrideLightDirection: -53, 30
 	forceRandomVoice: s16'vxxx209', 100, s16'vxxx210', 100, s16'', 0, s16'', 0
 	characterSfx: s32'ARC_BTL_ZMB_Yaiba_Dousa'
 	sprite: s32'zmb431_01', 3
 	hideAllButSelf: 1
 	resetSpeed: 1
 	if: var(EnemyInHitstun) {
 		if: var(Direction) {
 			ifOperation: (IS_LESS_OR_EQUAL), var(PosXRaw), int(-2600000) {
 				copyVar: var(PosXRaw), int(-2600000)
 			} endIf: 
 		} endIf: 
 		else:  {
 			ifOperation: (IS_GREATER_OR_EQUAL), var(PosXRaw), int(2600000) {
 				copyVar: var(PosXRaw), int(2600000)
 			} endIf: 
 		} endElse: 
 	} endIf: 
 	sprite: s32'zmb431_02', 3
 	sprite: s32'zmb431_20', 3
 	sprite: s32'zmb431_21', 3
 	sprite: s32'zmb431_03', 3
 	sprite: s32'zmb431_04', 3
 	sprite: s32'zmb431_18', 3
 	sprite: s32'zmb431_19', 3
 	moveCameraEx: (SELF), 558475, 148229, 64392, 2300, -13682, 0, 54, 25, 37, 10, 0, 1, 2
 	sprite: s32'zmb431_05', 7
 	sprite: s32'zmb431_06', 3
 	sprite: s32'zmb431_07', 3
 	sprite: s32'zmb431_08', 3
 	faceAnimation: 21
 	mouthPose: (OPEN)
 	sprite: s32'zmb431_09', 2
 	characterSfx: s32'ARC_BTL_ZMB_Yaiba_Start'
 	characterSfx: s32'ARC_BTL_ZMB_Yaiba_OrlaSmoke'
 	sprite: s32'zmb431_10', 2
 	setArg_objectParameters: int(1), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	setArg_objectParameters: int(2), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	sprite: s32'zmb431_10', 2
 	setArg_objectParameters: int(3), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	sprite: s32'zmb431_11', 2
 	setArg_objectParameters: int(4), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	sprite: s32'zmb431_11', 2
 	setArg_objectParameters: int(5), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	sprite: s32'zmb431_12', 2
 	setArg_objectParameters: int(6), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	setArg_objectParameters: int(7), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	sprite: s32'zmb431_12', 2
 	setArg_objectParameters: int(8), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	sprite: s32'zmb431_13', 2
 	setArg_objectParameters: int(9), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	sprite: s32'zmb431_13', 2
 	setArg_objectParameters: int(10), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	sprite: s32'zmb431_11', 4
 	setArg_objectParameters: int(11), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	setArg_objectParameters: int(12), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	sprite: s32'zmb431_12', 4
 	sprite: s32'zmb431_13', 4
 	sprite: s32'zmb431_11', 4
 	sprite: s32'zmb431_12', 4
 	sprite: s32'zmb431_13', 4
 	sprite: s32'zmb431_11', 4
 	sprite: s32'zmb431_12', 4
 	hideAllButSelf: 0
 	sprite: s32'zmb431_13', 4
 	triggerUponInObject: s32'Sabakinoyaiba_tame', (SIGNAL0)
 	sprite: s32'zmb431_11', 4
 	sprite: s32'zmb431_12', 4
 	enableSuperArmor: 0
 	sprite: s32'zmb431_13', 4
 	sprite: s32'zmb431_14', 4
 	sprite: s32'zmb431_15', 3
 	sprite: s32'zmb431_16', 3
 	sprite: s32'zmb431_17', 3
 	resetLightDirection: 
 	objectGravity: 
 	label: s32'fall'
 	sprite: s32'zmb022_02', 3
 	recoveryState: 
 	sprite: s32'zmb022_03', 3
 	sprite: s32'zmb022_04', 3
 	sprite: s32'zmb022_05', 3
 } endState: 
 
 beginState: s32'AirSabakinoyaiba' {
 	upon: (IMMEDIATE) {
 		removeLandingRecovery: 
 		skillFinishToDownLoop: 1
 		atkIgnoreCaution: 1
 		tensionUsage: 10000
 	} endUpon: 
 	sprite: s32'zmb021_00', 2
 	faceAnimation: 21
 	mouthPose: (CLOSED)
 	setYSpeed: 0
 	setGravity: -4000
 	upon: (IDLING) {
 		if: var(Direction) {
 			ifOperation: (IS_LESS_OR_EQUAL), var(PosXRaw), int(-2600000) {
 				setXSpeed: -20000
 			} endIf: 
 		} endIf: 
 		else:  {
 			ifOperation: (IS_GREATER_OR_EQUAL), var(PosXRaw), int(2600000) {
 				setXSpeed: -20000
 			} endIf: 
 		} endElse: 
 	} endUpon: 
 	sprite: s32'zmb021_01', 2
 	sprite: s32'zmb021_02', 2
 	sprite: s32'zmb021_03', 2
 	sprite: s32'zmb021_04', 2
 	clearRegisteredUponCode: (IDLING)
 	superFreeze: 3, 119, 100, 100
 	enableSuperArmor: 1
 	upon: (SUPERFREEZE) {
 		clearRegisteredUponCode: (SUPERFREEZE)
 		callSubroutine: s32'cmn1gaugeWLDSTP'
 		cameraForceMove: 1
 		moveCameraEx: (SELF), 170015, 48065, 109870, 2300, -13682, 0, 54, 15, 40, 10, 0, 2, 0
 	} endUpon: 
 	sprite: s32'zmb431_00', 3
 	overrideLightDirection: -53, 30
 	forceRandomVoice: s16'vxxx209', 100, s16'vxxx210', 100, s16'', 0, s16'', 0
 	characterSfx: s32'ARC_BTL_ZMB_Yaiba_Dousa'
 	sprite: s32'zmb431_01', 3
 	hideAllButSelf: 1
 	resetSpeed: 1
 	if: var(EnemyInHitstun) {
 		if: var(Direction) {
 			ifOperation: (IS_LESS_OR_EQUAL), var(PosXRaw), int(-2600000) {
 				copyVar: var(PosXRaw), int(-2600000)
 			} endIf: 
 		} endIf: 
 		else:  {
 			ifOperation: (IS_GREATER_OR_EQUAL), var(PosXRaw), int(2600000) {
 				copyVar: var(PosXRaw), int(2600000)
 			} endIf: 
 		} endElse: 
 	} endIf: 
 	sprite: s32'zmb431_02', 3
 	sprite: s32'zmb431_20', 3
 	sprite: s32'zmb431_21', 3
 	sprite: s32'zmb431_03', 3
 	sprite: s32'zmb431_04', 3
 	sprite: s32'zmb431_18', 3
 	sprite: s32'zmb431_19', 3
 	moveCameraEx: (SELF), 558475, 148229, 64392, 2300, -13682, 0, 54, 25, 37, 10, 0, 1, 2
 	sprite: s32'zmb431_05', 7
 	sprite: s32'zmb431_06', 3
 	sprite: s32'zmb431_07', 3
 	sprite: s32'zmb431_08', 3
 	faceAnimation: 21
 	mouthPose: (OPEN)
 	sprite: s32'zmb431_09', 2
 	characterSfx: s32'ARC_BTL_ZMB_Yaiba_Start'
 	characterSfx: s32'ARC_BTL_ZMB_Yaiba_OrlaSmoke'
 	sprite: s32'zmb431_10', 2
 	setArg_objectParameters: int(1), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	setArg_objectParameters: int(2), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	sprite: s32'zmb431_10', 2
 	setArg_objectParameters: int(3), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	sprite: s32'zmb431_11', 2
 	setArg_objectParameters: int(4), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	sprite: s32'zmb431_11', 2
 	setArg_objectParameters: int(5), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	sprite: s32'zmb431_12', 2
 	setArg_objectParameters: int(6), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	setArg_objectParameters: int(7), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	sprite: s32'zmb431_12', 2
 	setArg_objectParameters: int(8), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	sprite: s32'zmb431_13', 2
 	setArg_objectParameters: int(9), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	sprite: s32'zmb431_13', 2
 	setArg_objectParameters: int(10), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	sprite: s32'zmb431_11', 4
 	setArg_objectParameters: int(11), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	setArg_objectParameters: int(12), int(0)
 	createObjectWithArg: s32'Sabakinoyaiba_tame', (ZERO)
 	sprite: s32'zmb431_12', 4
 	sprite: s32'zmb431_13', 4
 	sprite: s32'zmb431_11', 4
 	sprite: s32'zmb431_12', 4
 	sprite: s32'zmb431_13', 4
 	sprite: s32'zmb431_11', 4
 	sprite: s32'zmb431_12', 4
 	hideAllButSelf: 0
 	sprite: s32'zmb431_13', 4
 	triggerUponInObject: s32'Sabakinoyaiba_tame', (SIGNAL0)
 	sprite: s32'zmb431_11', 4
 	sprite: s32'zmb431_12', 4
 	enableSuperArmor: 0
 	sprite: s32'zmb431_13', 4
 	sprite: s32'zmb431_14', 4
 	sprite: s32'zmb431_15', 3
 	sprite: s32'zmb431_16', 3
 	sprite: s32'zmb431_17', 3
 	resetLightDirection: 
 	objectGravity: 
 	label: s32'fall'
 	sprite: s32'zmb022_02', 3
 	recoveryState: 
 	sprite: s32'zmb022_03', 3
 	sprite: s32'zmb022_04', 3
 	sprite: s32'zmb022_05', 3
 } endState: 
 
 beginSubroutine: s32'Zettainoikazuti_CS' {
 	superFreeze: 4, 119, 132, 135
 	spriteAddTime: 131
 	upon: (SUPERFREEZE) {
 		callSubroutine: s32'cmn3gaugeWLDSTP'
 		darkenBackground: 1
 		if: var(Direction) {
 			ifOperation: (IS_LESS_OR_EQUAL), var(PosXRaw), int(-3000000) {
 				copyVar: var(PosXRaw), int(-3000000)
 			} endIf: 
 		} endIf: 
 		else:  {
 			ifOperation: (IS_GREATER_OR_EQUAL), var(PosXRaw), int(3000000) {
 				copyVar: var(PosXRaw), int(3000000)
 			} endIf: 
 		} endElse: 
 		playAnimation: s32'zmb432cs', 0
 		playCameraAnimation: s32'zmb432cs', (SELF), 0, 5
 		zLine: var(plr1)
 		hideAllButSelf: 1
 		upon: (IDLING) {
 			ifOnFrame: int(0) {
 				characterSfx: s32'ARC_BTL_ZMB_Ikazuti_Chrg'
 				forceRandomVoice: s16'vxxx211', 100, s16'vxxx212', 100, s16'vxxx213', 100, s16'vxxx214', 100
 			} endIf: 
 			ifOnFrame: int(4) {
 				resetSpeed: 1
 			} endIf: 
 			ifOnFrame: int(17) {
 				createObject: s32'ZMB432_AuraMatome', (ZERO)
 			} endIf: 
 			ifOnFrame: int(33) {
 				createObject: s32'ZMB432_FaceRay', (HEAD_3D)
 			} endIf: 
 			ifOnFrame: int(66) {
 				fadeOut: 0, 0
 			} endIf: 
 			ifOnFrame: int(68) {
 				ifOperation: (IS_LESS_OR_EQUAL), var(PosY), int(450000) {
 					setYPosition: 450000
 				} endIf: 
 				ifOperation: (IS_GREATER_OR_EQUAL), var(PosY), int(4500000) {
 					setYPosition: 4500000
 				} endIf: 
 				createObject: s32'Zettainoikazuti_shinigamiCS', (ZERO)
 			} endIf: 
 			ifOnFrame: int(72) {
 				characterSfx: s32'ARC_BTL_ZMB_Ikazuti_PreFire'
 			} endIf: 
 			ifOnFrame: int(88) {
 				triggerUponInObject: s32'Zettainoikazuti_shinigamiCS', (SIGNAL0)
 			} endIf: 
 			ifOnFrame: int(123) {
 				darkenBackground: 30
 				deactivateObjectByName: s32'Zettainoikazuti_shinigamiCS'
 				createObjectWithArg: s32'Zettainoikazuti_shinigami', (ZERO)
 				faceAnimation: 21
 				mouthPose: (OPEN)
 			} endIf: 
 			ifOnFrame: int(128) {
 				hideAllButSelf: 0
 			} endIf: 
 		} endUpon: 
 	} endUpon: 
 } endSubroutine: 
 
 beginState: s32'Zettainoikazuti' {
 	upon: (IMMEDIATE) {
 		playerActionInitializeByCategory: 20, 1
 		removeLandingRecovery: 
 		skillFinishToDownLoop: 1
 		setRandom: var(obj6), int(0), int(1)
 		upon: (SIGNAL_NAME) {
 			checkSignalName: s32'Zettainoikazuti_Hit'
 			if: var(Result) {
 				copyVarFromObject: (SELF), var(act1), (ENEMY_MAIN_PLAYER), var(PosY)
 				modifyVar: (DIV), var(act1), int(150000)
 				modifyVar: (ADD), var(act1), int(1)
 			} endIf: 
 		} endUpon: 
 		upon: (RECEIVE_ATTACK) {
 			stopBankSE: 19, 20
 		} endUpon: 
 		upon: (BEFORE_EXIT) {
 			stopBankSE: 19, 20
 		} endUpon: 
 		tensionUsage: 30000
 	} endUpon: 
 	sprite: s32'zmb010_00', 2
 	enableSuperArmor: 1
 	sprite: s32'zmb010_01', 2
 	sprite: s32'zmb021_00', 3
 	faceAnimation: 21
 	mouthPose: (OPEN)
 	resetSpeed: 1
 	setGravity: -5000
 	characterSfx: s32'ARC_BTL_ZMB_Ikazuti_Ba'
 	sprite: s32'zmb432_00', 3
 	sprite: s32'zmb432_01', 3
 	sprite: s32'zmb432_01', 1
 	callSubroutine: s32'Zettainoikazuti_CS'
 	sprite: s32'zmb432_08', 1
 	faceAnimation: 21
 	mouthPose: (OPEN)
 	ifOperation: (IS_GREATER_OR_EQUAL), var(EnemyDistanceX), int(400000) {
 		spriteAddTime: 1
 	} endIf: 
 	ifOperation: (IS_GREATER_OR_EQUAL), var(EnemyDistanceX), int(600000) {
 		spriteAddTime: 1
 	} endIf: 
 	ifOperation: (IS_GREATER_OR_EQUAL), var(EnemyDistanceX), int(800000) {
 		spriteAddTime: 1
 	} endIf: 
 	ifOperation: (IS_GREATER_OR_EQUAL), var(EnemyDistanceX), int(1000000) {
 		spriteAddTime: 1
 	} endIf: 
 	ifOperation: (IS_GREATER_OR_EQUAL), var(EnemyDistanceX), int(1200000) {
 		spriteAddTime: 1
 	} endIf: 
 	ifOperation: (IS_GREATER_OR_EQUAL), var(EnemyDistanceX), int(1400000) {
 		spriteAddTime: 1
 	} endIf: 
 	spriteOverrideTime: 1, var(EnemyInHitstun)
 	sprite: s32'zmb432_09', 3
 	triggerUponInObject: s32'Zettainoikazuti_shinigami', (SIGNAL1)
 	sprite: s32'zmb432_10', 3
 	sprite: s32'zmb432_08', 3
 	sprite: s32'zmb432_09', 3
 	sprite: s32'zmb432_10', 3
 	enableSuperArmor: 0
 	sprite: s32'zmb432_08', 3
 	sprite: s32'zmb432_09', 3
 	sprite: s32'zmb432_10', 3
 	sprite: s32'zmb432_08', 3
 	sprite: s32'zmb432_09', 3
 	sprite: s32'zmb432_10', 3
 	label: s32'atk_loop'
 	sprite: s32'zmb432_08', 3
 	triggerUponInObject: s32'Zettainoikazuti_shinigami', (SIGNAL2)
 	sprite: s32'zmb432_09', 3
 	sprite: s32'zmb432_10', 3
 	spriteEnd: 
 	modifyVar: (ADD), var(act0), int(1)
 	gotoLabelIfOperation: s32'atk_loop', (IS_LESS_OR_EQUAL), var(act0), int(10)
 	sprite: s32'zmb432_08', 4
 	deactivateObjectByName: s32'ZMB432_AuraMatome'
 	sprite: s32'zmb432_09', 4
 	sprite: s32'zmb432_10', 2
 	sprite: s32'zmb432_10', 2
 	recoveryState: 
 	landingRecovery: 7, 1
 	label: s32'taiki_loop'
 	sprite: s32'zmb432_08', 4
 	upon: (IDLING) {
 		modifyVar: (ADD), var(act1), int(-1)
 		ifOperation: (IS_LESS_OR_EQUAL), var(act1), int(0) {
 			clearRegisteredUponCode: (IDLING)
 			jumpToLabel: s32'end'
 		} endIf: 
 	} endUpon: 
 	sprite: s32'zmb432_09', 4
 	sprite: s32'zmb432_10', 4
 	spriteEnd: 
 	gotoLabelIfOperation: s32'taiki_loop', (IS_LESS_OR_EQUAL), var(LoopCount), int(600)
 	label: s32'end'
 	sprite: s32'zmb432_11', 3
 	clearRegisteredUponCode: (IDLING)
 	sprite: s32'zmb432_12', 3
 	sprite: s32'zmb432_13', 3
 	label: s32'fall'
 	sprite: s32'zmb022_02', 3
 	setGravity: 3000
 	sprite: s32'zmb022_03', 3
 	sprite: s32'zmb022_04', 3
 	sprite: s32'zmb022_05', 3
 	label: s32'loop'
 	sprite: s32'zmb022_06', 3
 	sprite: s32'zmb022_07', 3
 	sprite: s32'zmb022_08', 3
 	spriteEnd: 
 	gotoLabelIfOperation: s32'loop', (IS_LESS_OR_EQUAL), var(LoopCount), int(600)
 } endState: 
 
 beginState: s32'AirZettainoikazuti' {
 	upon: (IMMEDIATE) {
 		playerActionInitializeByCategory: 20, 1
 		removeLandingRecovery: 
 		skillFinishToDownLoop: 1
 		upon: (SIGNAL_NAME) {
 			checkSignalName: s32'Zettainoikazuti_Hit'
 			if: var(Result) {
 				copyVarFromObject: (SELF), var(act1), (ENEMY_MAIN_PLAYER), var(PosY)
 				modifyVar: (DIV), var(act1), int(150000)
 				modifyVar: (ADD), var(act1), int(1)
 				copyVar: var(act2), var(PosY)
 				modifyVar: (ADD), var(act2), int(-455000)
 				ifOperation: (IS_GREATER_OR_EQUAL), var(act2), int(0) {
 					modifyVar: (DIV), var(act2), int(3000)
 					modifyVar: (SUB), var(act1), var(act2)
 				} endIf: 
 			} endIf: 
 		} endUpon: 
 		upon: (RECEIVE_ATTACK) {
 			stopBankSE: 19, 20
 		} endUpon: 
 		upon: (BEFORE_EXIT) {
 			stopBankSE: 19, 20
 		} endUpon: 
 		tensionUsage: 30000
 	} endUpon: 
 	sprite: s32'zmb022_00', 4
 	faceAnimation: 21
 	mouthPose: (OPEN)
 	enableSuperArmor: 1
 	sprite: s32'zmb021_00', 3
 	resetSpeed: 1
 	setGravity: -5000
 	characterSfx: s32'ARC_BTL_ZMB_Ikazuti_Ba'
 	sprite: s32'zmb432_00', 3
 	sprite: s32'zmb432_01', 3
 	sprite: s32'zmb432_01', 1
 	callSubroutine: s32'Zettainoikazuti_CS'
 	sprite: s32'zmb432_08', 1
 	faceAnimation: 21
 	mouthPose: (OPEN)
 	ifOperation: (IS_GREATER_OR_EQUAL), var(EnemyDistanceX), int(400000) {
 		spriteAddTime: 1
 	} endIf: 
 	ifOperation: (IS_GREATER_OR_EQUAL), var(EnemyDistanceX), int(600000) {
 		spriteAddTime: 1
 	} endIf: 
 	ifOperation: (IS_GREATER_OR_EQUAL), var(EnemyDistanceX), int(800000) {
 		spriteAddTime: 1
 	} endIf: 
 	ifOperation: (IS_GREATER_OR_EQUAL), var(EnemyDistanceX), int(1000000) {
 		spriteAddTime: 1
 	} endIf: 
 	ifOperation: (IS_GREATER_OR_EQUAL), var(EnemyDistanceX), int(1200000) {
 		spriteAddTime: 1
 	} endIf: 
 	ifOperation: (IS_GREATER_OR_EQUAL), var(EnemyDistanceX), int(1400000) {
 		spriteAddTime: 1
 	} endIf: 
 	spriteOverrideTime: 1, var(EnemyInHitstun)
 	sprite: s32'zmb432_09', 3
 	triggerUponInObject: s32'Zettainoikazuti_shinigami', (SIGNAL1)
 	sprite: s32'zmb432_10', 3
 	sprite: s32'zmb432_08', 3
 	sprite: s32'zmb432_09', 3
 	sprite: s32'zmb432_10', 3
 	enableSuperArmor: 0
 	sprite: s32'zmb432_08', 3
 	sprite: s32'zmb432_09', 3
 	sprite: s32'zmb432_10', 3
 	sprite: s32'zmb432_08', 3
 	sprite: s32'zmb432_09', 3
 	sprite: s32'zmb432_10', 3
 	label: s32'atk_loop'
 	sprite: s32'zmb432_08', 3
 	triggerUponInObject: s32'Zettainoikazuti_shinigami', (SIGNAL2)
 	sprite: s32'zmb432_09', 3
 	sprite: s32'zmb432_10', 3
 	spriteEnd: 
 	enableSuperArmor: 0
 	modifyVar: (ADD), var(act0), int(1)
 	gotoLabelIfOperation: s32'atk_loop', (IS_LESS_OR_EQUAL), var(act0), int(10)
 	sprite: s32'zmb432_08', 4
 	deactivateObjectByName: s32'ZMB432_AuraMatome'
 	sprite: s32'zmb432_09', 4
 	sprite: s32'zmb432_10', 2
 	sprite: s32'zmb432_10', 2
 	recoveryState: 
 	landingRecovery: 7, 1
 	label: s32'taiki_loop'
 	sprite: s32'zmb432_08', 4
 	upon: (IDLING) {
 		modifyVar: (ADD), var(act1), int(-1)
 		ifOperation: (IS_LESS_OR_EQUAL), var(act1), int(0) {
 			clearRegisteredUponCode: (IDLING)
 			jumpToLabel: s32'end'
 		} endIf: 
 	} endUpon: 
 	sprite: s32'zmb432_09', 4
 	sprite: s32'zmb432_10', 4
 	spriteEnd: 
 	gotoLabelIfOperation: s32'taiki_loop', (IS_LESS_OR_EQUAL), var(LoopCount), int(600)
 	label: s32'end'
 	sprite: s32'zmb432_11', 3
 	clearRegisteredUponCode: (IDLING)
 	sprite: s32'zmb432_12', 3
 	sprite: s32'zmb432_13', 3
 	label: s32'fall'
 	sprite: s32'zmb022_02', 3
 	setGravity: 3000
 	sprite: s32'zmb022_03', 3
 	sprite: s32'zmb022_04', 3
 	sprite: s32'zmb022_05', 3
 	label: s32'loop'
 	sprite: s32'zmb022_06', 3
 	sprite: s32'zmb022_07', 3
 	sprite: s32'zmb022_08', 3
 	spriteEnd: 
 	gotoLabelIfOperation: s32'loop', (IS_LESS_OR_EQUAL), var(LoopCount), int(600)
 } endState: 
 
 beginState: s32'CmnActStandTurn' {
 	sprite: s32'xxx001_01', 3
 	sprite: s32'xxx001_00', 3
 } endState: 
 
 beginState: s32'CmnActStand2Crouch' {
 	sprite: s32'xxx010_00', 3
 	sprite: s32'xxx010_01', 3
 } endState: 
 
 beginState: s32'CmnActCrouchTurn' {
 	sprite: s32'xxx013_01', 3
 	sprite: s32'xxx013_00', 3
 } endState: 
 
 beginState: s32'CmnActCrouch2Stand' {
 	sprite: s32'xxx010_01', 3
 	sprite: s32'xxx010_00', 3
 } endState: 
 
 beginState: s32'CmnActJumpPre' {
 	sprite: s32'xxx010_00', 2
 	sprite: s32'xxx010_01', 2
 } endState: 
 
 beginState: s32'CmnActJumpLanding' {
 	sprite: s32'xxx010_01', 3
 	sprite: s32'xxx010_00', 3
 } endState: 
 
 beginState: s32'CmnActBDash' {
 	sprite: s32'xxx033_00', 3
 	callSubroutine: s32'cmnBDashMutekiInit'
 	callSubroutine: s32'cmnBDashSpeed'
 	sprite: s32'xxx033_01', 3
 	sprite: s32'xxx033_02', 1
 	sprite: s32'xxx033_02ex00', 2
 	sprite: s32'xxx033_00ex00', 3
 	sprite: s32'xxx033_01ex00', 3
 	spriteEnd: 
 	jumpToState: s32'CmnActBDashStop'
 } endState: 
 
 beginState: s32'CmnActNokezoriHighLv1' {
 	sprite: s32'xxx050_00', 2
 	sprite: s32'xxx050_01', 9
 	sprite: s32'xxx050_00', 3
 } endState: 
 
 beginState: s32'CmnActNokezoriHighLv2' {
 	sprite: s32'xxx050_01', 2
 	sprite: s32'xxx050_02', 8
 	sprite: s32'xxx050_01', 3
 	sprite: s32'xxx050_00', 3
 } endState: 
 
 beginState: s32'CmnActNokezoriHighLv3' {
 	sprite: s32'xxx050_02', 2
 	sprite: s32'xxx050_03', 7
 	sprite: s32'xxx050_02', 3
 	sprite: s32'xxx050_01', 3
 	sprite: s32'xxx050_00', 3
 } endState: 
 
 beginState: s32'CmnActNokezoriHighLv4' {
 	sprite: s32'xxx050_03', 2
 	sprite: s32'xxx050_04', 6
 	sprite: s32'xxx050_03', 3
 	sprite: s32'xxx050_02', 3
 	sprite: s32'xxx050_01', 3
 	sprite: s32'xxx050_00', 3
 } endState: 
 
 beginState: s32'CmnActNokezoriHighLv5' {
 	sprite: s32'xxx050_03', 2
 	sprite: s32'xxx050_04', 8
 	sprite: s32'xxx050_03', 3
 	sprite: s32'xxx050_02', 3
 	sprite: s32'xxx050_01', 3
 	sprite: s32'xxx050_00', 3
 } endState: 
 
 beginState: s32'CmnActNokezoriLowLv1' {
 	sprite: s32'xxx051_00', 2
 	sprite: s32'xxx051_01', 9
 	sprite: s32'xxx051_00', 3
 } endState: 
 
 beginState: s32'CmnActNokezoriLowLv2' {
 	sprite: s32'xxx051_01', 2
 	sprite: s32'xxx051_02', 8
 	sprite: s32'xxx051_01', 3
 	sprite: s32'xxx051_00', 3
 } endState: 
 
 beginState: s32'CmnActNokezoriLowLv3' {
 	sprite: s32'xxx051_02', 2
 	sprite: s32'xxx051_03', 7
 	sprite: s32'xxx051_02', 3
 	sprite: s32'xxx051_01', 3
 	sprite: s32'xxx051_00', 3
 } endState: 
 
 beginState: s32'CmnActNokezoriLowLv4' {
 	sprite: s32'xxx051_03', 2
 	sprite: s32'xxx051_04', 6
 	sprite: s32'xxx051_03', 3
 	sprite: s32'xxx051_02', 3
 	sprite: s32'xxx051_01', 3
 	sprite: s32'xxx051_00', 3
 } endState: 
 
 beginState: s32'CmnActNokezoriLowLv5' {
 	sprite: s32'xxx051_03', 2
 	sprite: s32'xxx051_04', 8
 	sprite: s32'xxx051_03', 3
 	sprite: s32'xxx051_02', 3
 	sprite: s32'xxx051_01', 3
 	sprite: s32'xxx051_00', 3
 } endState: 
 
 beginState: s32'CmnActNokezoriCrouchLv1' {
 	sprite: s32'xxx052_00', 2
 	sprite: s32'xxx052_01', 9
 	sprite: s32'xxx052_00', 3
 } endState: 
 
 beginState: s32'CmnActNokezoriCrouchLv2' {
 	sprite: s32'xxx052_01', 2
 	sprite: s32'xxx052_02', 8
 	sprite: s32'xxx052_01', 3
 	sprite: s32'xxx052_00', 3
 } endState: 
 
 beginState: s32'CmnActNokezoriCrouchLv3' {
 	sprite: s32'xxx052_02', 2
 	sprite: s32'xxx052_03', 7
 	sprite: s32'xxx052_02', 3
 	sprite: s32'xxx052_01', 3
 	sprite: s32'xxx052_00', 3
 } endState: 
 
 beginState: s32'CmnActNokezoriCrouchLv4' {
 	sprite: s32'xxx052_03', 2
 	sprite: s32'xxx052_04', 6
 	sprite: s32'xxx052_03', 3
 	sprite: s32'xxx052_02', 3
 	sprite: s32'xxx052_01', 3
 	sprite: s32'xxx052_00', 3
 } endState: 
 
 beginState: s32'CmnActNokezoriCrouchLv5' {
 	sprite: s32'xxx052_03', 2
 	sprite: s32'xxx052_04', 8
 	sprite: s32'xxx052_03', 3
 	sprite: s32'xxx052_02', 3
 	sprite: s32'xxx052_01', 3
 	sprite: s32'xxx052_00', 3
 } endState: 
 
 beginState: s32'CmnActBDownUpper' {
 	gotoLabelIfOperation: s32'pattern2', (PERCENT), int(33), int(100)
 	gotoLabelIfOperation: s32'pattern3', (PERCENT), int(50), int(100)
 	label: s32'pattern1'
 	sprite: s32'xxx060_00', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 	label: s32'pattern2'
 	sprite: s32'xxx060_01', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 	label: s32'pattern3'
 	sprite: s32'xxx060_02', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 	label: s32'loop'
 	sprite: s32'xxx060_03', 3
 	sprite: s32'xxx060_04', 3
 	sprite: s32'xxx060_05', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActBDownDown' {
 	sprite: s32'xxx060_06', 3
 	sprite: s32'xxx060_07', 3
 	label: s32'loop'
 	sprite: s32'xxx060_08', 3
 	sprite: s32'xxx060_09', 3
 	sprite: s32'xxx060_10', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActBDownBound' {
 	sprite: s32'xxx060_11', 3
 	sprite: s32'xxx061_00', 3
 	sprite: s32'xxx061_01', 3
 	sprite: s32'xxx061_02', 3
 	sprite: s32'xxx061_03', 3
 } endState: 
 
 beginState: s32'CmnActFDownUpper' {
 	sprite: s32'xxx062_00', 4
 	sprite: s32'xxx062_01', 4
 	sprite: s32'xxx062_02', 4
 } endState: 
 
 beginState: s32'CmnActFDownDown' {
 	callSubroutine: s32'FDownLoop_Type'
 	gotoLabelIfTrue: s32'loop_B', var(act7)
 	label: s32'loop_A'
 	sprite: s32'xxx062_03', 2
 	sprite: s32'xxx062_04', 2
 	sprite: s32'xxx062_05', 2
 	spriteEnd: 
 	gotoLabel: s32'loop_A'
 	label: s32'loop_B'
 	sprite: s32'xxx062_03', 2
 	sprite: s32'xxx062_04', 2
 	spriteEnd: 
 	gotoLabel: s32'loop_B'
 } endState: 
 
 beginState: s32'CmnActFDownLoop' {
 	sprite: s32'xxx061_04', 4
 } endState: 
 
 beginState: s32'CmnActFDown2Stand' {
 	sprite: s32'xxx063_00', 3
 	sprite: s32'xxx063_01', 3
 	sprite: s32'xxx063_02', 3
 	sprite: s32'xxx063_03', 3
 	sprite: s32'xxx063_04', 3
 } endState: 
 
 beginState: s32'CmnActVDownUpper' {
 	sprite: s32'xxx077_00', 4
 	label: s32'loop'
 	sprite: s32'xxx077_01', 4
 	sprite: s32'xxx077_02', 4
 	sprite: s32'xxx077_03', 4
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActVDownDown' {
 	sprite: s32'xxx077_01', 4
 	sprite: s32'xxx077_00', 4
 	spriteEnd: 
 	callSubroutine: s32'FDownLoop_Type'
 	gotoLabelIfTrue: s32'loop_B', var(act7)
 	label: s32'loop_A'
 	sprite: s32'xxx062_03', 2
 	sprite: s32'xxx062_04', 2
 	sprite: s32'xxx062_05', 2
 	spriteEnd: 
 	gotoLabel: s32'loop_A'
 	label: s32'loop_B'
 	sprite: s32'xxx062_03', 2
 	sprite: s32'xxx062_04', 2
 	spriteEnd: 
 	gotoLabel: s32'loop_B'
 } endState: 
 
 beginState: s32'CmnActBlowoff' {
 	sprite: s32'xxx075_00', 3
 	label: s32'loop'
 	sprite: s32'xxx075_01', 3
 	sprite: s32'xxx075_02', 3
 	sprite: s32'xxx075_03', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActBlowoffUpper90' {
 	sprite: s32'xxx077_00', 3
 	label: s32'loop'
 	sprite: s32'xxx077_01', 3
 	sprite: s32'xxx077_02', 3
 	sprite: s32'xxx077_03', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActBlowoffUpper60' {
 	sprite: s32'xxx079_00', 3
 	label: s32'loop'
 	sprite: s32'xxx079_01', 3
 	sprite: s32'xxx079_02', 3
 	sprite: s32'xxx079_03', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActBlowoffUpper30' {
 	sprite: s32'xxx078_00', 3
 	label: s32'loop'
 	sprite: s32'xxx078_01', 3
 	sprite: s32'xxx078_02', 3
 	sprite: s32'xxx078_03', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActBlowoffDown30' {
 	sprite: s32'xxx080_00', 3
 	label: s32'loop'
 	sprite: s32'xxx080_01', 3
 	sprite: s32'xxx080_02', 3
 	sprite: s32'xxx080_03', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActBlowoffDown60' {
 	sprite: s32'xxx081_00', 3
 	label: s32'loop'
 	sprite: s32'xxx081_01', 3
 	sprite: s32'xxx081_02', 3
 	sprite: s32'xxx081_03', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActBlowoffDown90' {
 	sprite: s32'xxx062_02', 3
 	spriteEnd: 
 	callSubroutine: s32'FDownLoop_Type'
 	gotoLabelIfTrue: s32'loop_B', var(act7)
 	label: s32'loop_A'
 	sprite: s32'xxx062_03', 2
 	sprite: s32'xxx062_04', 2
 	sprite: s32'xxx062_05', 2
 	spriteEnd: 
 	gotoLabel: s32'loop_A'
 	label: s32'loop_B'
 	sprite: s32'xxx062_03', 2
 	sprite: s32'xxx062_04', 2
 	spriteEnd: 
 	gotoLabel: s32'loop_B'
 } endState: 
 
 beginState: s32'CmnActKirimomiVert' {
 	sprite: s32'xxx072_00', 3
 	label: s32'loop'
 	sprite: s32'xxx072_01', 2
 	sprite: s32'xxx072_02', 2
 	sprite: s32'xxx072_03', 2
 	sprite: s32'xxx072_04', 2
 	sprite: s32'xxx072_05', 2
 	sprite: s32'xxx072_06', 2
 	sprite: s32'xxx072_07', 2
 	sprite: s32'xxx072_08', 2
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActKirimomiVertEnd' {
 	label: s32'loop'
 	sprite: s32'xxx060_03', 3
 	sprite: s32'xxx060_04', 3
 	sprite: s32'xxx060_05', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActKirimomiUpper' {
 	sprite: s32'xxx073_00', 2
 	label: s32'loop'
 	sprite: s32'xxx073_01', 2
 	sprite: s32'xxx073_02', 2
 	sprite: s32'xxx073_03', 2
 	sprite: s32'xxx073_04', 2
 	sprite: s32'xxx073_05', 2
 	sprite: s32'xxx073_06', 2
 	sprite: s32'xxx073_07', 2
 	sprite: s32'xxx073_08', 2
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActKirimomiSide' {
 	sprite: s32'xxx074_00', 2
 	label: s32'loop'
 	sprite: s32'xxx074_01', 2
 	sprite: s32'xxx074_02', 2
 	sprite: s32'xxx074_03', 2
 	sprite: s32'xxx074_04', 2
 	sprite: s32'xxx074_05', 2
 	sprite: s32'xxx074_06', 2
 	sprite: s32'xxx074_07', 2
 	sprite: s32'xxx074_08', 2
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActKirimomiLand' {
 	sprite: s32'xxx072_00', 3
 	label: s32'loop'
 	sprite: s32'xxx072_01', 2
 	sprite: s32'xxx072_02', 2
 	sprite: s32'xxx072_03', 2
 	sprite: s32'xxx072_04', 2
 	sprite: s32'xxx072_05', 2
 	sprite: s32'xxx072_06', 2
 	sprite: s32'xxx072_07', 2
 	sprite: s32'xxx072_08', 2
 	spriteEnd: 
 	gotoLabel: s32'loop'
 	label: s32'_end'
 	sprite: s32'xxx072_09', 3
 	sprite: s32'xxx072_10', 3
 	sprite: s32'xxx072_11', 6
 	sprite: s32'xxx072_12', 3
 	sprite: s32'xxx072_13', 3
 } endState: 
 
 beginState: s32'CmnActSlidedown' {
 	sprite: s32'xxx060_11', 2147483647
 	label: s32'_end'
 	sprite: s32'xxx061_00', 3
 	sprite: s32'xxx061_01', 3
 	sprite: s32'xxx061_02', 3
 	sprite: s32'xxx061_03', 3
 } endState: 
 
 beginState: s32'CmnActWallBound' {
 	sprite: s32'xxx076_00', 2147483647
 } endState: 
 
 beginState: s32'CmnActWallBoundDown' {
 	sprite: s32'xxx062_00', 4
 	sprite: s32'xxx062_01', 2
 	sprite: s32'xxx062_02', 3
 	spriteEnd: 
 	callSubroutine: s32'FDownLoop_Type'
 	gotoLabelIfTrue: s32'loop_B', var(act7)
 	label: s32'loop_A'
 	sprite: s32'xxx062_03', 2
 	sprite: s32'xxx062_04', 2
 	sprite: s32'xxx062_05', 2
 	spriteEnd: 
 	gotoLabel: s32'loop_A'
 	label: s32'loop_B'
 	sprite: s32'xxx062_03', 2
 	sprite: s32'xxx062_04', 2
 	spriteEnd: 
 	gotoLabel: s32'loop_B'
 } endState: 
 
 beginState: s32'CmnActHizakuzure' {
 	sprite: s32'xxx070_00', 45
 	sprite: s32'xxx070_01', 5
 	sprite: s32'xxx070_02', 16
 	sprite: s32'xxx070_03', 5
 	sprite: s32'xxx070_04', 3
 	sprite: s32'xxx070_05', 3
 	sprite: s32'xxx070_06', 3
 } endState: 
 
 beginState: s32'CmnActZSpin' {
 	label: s32'loop'
 	sprite: s32'xxx090_00', 2
 	sprite: s32'xxx090_01', 2
 	sprite: s32'xxx090_02', 2
 	sprite: s32'xxx090_03', 2
 	sprite: s32'xxx090_04', 2
 	sprite: s32'xxx090_05', 2
 	sprite: s32'xxx090_06', 2
 	sprite: s32'xxx090_07', 2
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActFuttobiFinish' {
 	upon: (IMMEDIATE) {
 	} endUpon: 
 	sprite: s32'xxx075_01', 1
 	createObject: s32'cmn_CameraFuttobiFinish_nomove', (ZERO)
 	sprite: s32'xxx075_01', 1
 	hideAllButSelf: 1
 	resetSpeed: 1
 	createObject: s32'cmn_FuttobiFinish_root', (ZERO)
 	createObject: s32'cmn_FuttobasiEff_Ryuhai', (ZERO)
 	createObject: s32'cmn_FuttobasiEff_smokeMatome', (ZERO)
 	setAngleY: -15000
 	setScaleSpeed: -30
 	setSpeedByCPC: 110000, 170000
 	sprite: s32'xxx075_01', 1
 	hideUI: 1
 	hideAllButSelf: 1
 	sprite: s32'xxx075_01', 19
 	sprite: s32'xxx075_01', 1
 	displayModel: 0
 	label: s32'loop'
 	sprite: s32'xxx075_02', 3
 	sprite: s32'xxx075_03', 3
 	sprite: s32'xxx075_01', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActFuttobiBGTrans' {
 	upon: (IMMEDIATE) {
 	} endUpon: 
 	sprite: s32'xxx075_01', 1
 	setAngleY: -15000
 	createObject: s32'cmn_BGTransStart', (ZERO)
 	sprite: s32'xxx075_01', 3
 	setXSpeed: -100000
 	label: s32'loop'
 	sprite: s32'xxx075_02', 3
 	sprite: s32'xxx075_03', 3
 	sprite: s32'xxx075_01', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActFuttobiBGTrans' {
 	upon: (IMMEDIATE) {
 	} endUpon: 
 	sprite: s32'xxx075_01', 1
 	setAngleY: -15000
 	createObject: s32'cmn_BGTransStart', (ZERO)
 	sprite: s32'xxx075_01', 3
 	setXSpeed: -100000
 	label: s32'loop'
 	sprite: s32'xxx075_02', 3
 	sprite: s32'xxx075_03', 3
 	sprite: s32'xxx075_01', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActEnterAfterDestruction' {
 	upon: (IMMEDIATE) {
 		if: var(SideID) {
 			setYPosition: 1200000
 		} endIf: 
 		else:  {
 			setYPosition: 1000000
 		} endElse: 
 		setGravity: 350
 		setYSpeed: -15000
 		cameraFreeze: 1
 		jumpToStateInObject: (PARENT), s32'landing'
 	} endUpon: 
 	callSubroutine: s32'JumpDown_Type'
 	gotoLabelIfTrue: s32'loop_B', var(act7)
 	label: s32'loop_A'
 	sprite: s32'xxx022_06', 3
 	sprite: s32'xxx022_07', 3
 	sprite: s32'xxx022_08', 3
 	spriteEnd: 
 	gotoLabel: s32'loop_A'
 	label: s32'loop_B'
 	sprite: s32'xxx022_05', 3
 	sprite: s32'xxx022_06', 3
 	sprite: s32'xxx022_07', 3
 	spriteEnd: 
 	gotoLabel: s32'loop_B'
 	label: s32'landing'
 	sprite: s32'xxx037_02', 2
 	clearRegisteredUponCode: (TOUCH_GROUND)
 	sprite: s32'xxx037_03', 2
 	sprite: s32'xxx037_04', 7
 	sprite: s32'xxx037_03', 2
 	sprite: s32'xxx037_02', 2
 	sprite: s32'xxx037_01', 2
 	sprite: s32'xxx037_00', 2
 } endState: 
 
 beginState: s32'CmnActEnterAfterBGTransLeftIn' {
 	upon: (IMMEDIATE) {
 	} endUpon: 
 	sprite: s32'null', 170
 	setStartupPos: -4000000, 110000
 	displayModel: 0
 	label: s32'start'
 	sprite: s32'xxx034_09', 3
 	cmnSfx: s32'ARC_BG_FtbsFin_Enter'
 	displayModel: 1
 	setXSpeed: 75000
 	setYSpeed: 3000
 	createObject: s32'cmn_HomingDash_Jizoku', (EX_POINT_0)
 	putObjectIntoStack: (STACK0), (PREVIOUS)
 	createObject: s32'cmn_HomingDash_JizokuTrail', (CENTER)
 	putObjectIntoStack: (STACK1), (PREVIOUS)
 	jumpToStateInObject: (PARENT), s32'landing'
 	sprite: s32'xxx034_10', 3
 	sprite: s32'xxx034_11', 3
 	sprite: s32'xxx034_09', 3
 	sprite: s32'xxx034_10', 3
 	sprite: s32'xxx034_11', 3
 	sprite: s32'xxx034_09', 3
 	sprite: s32'xxx034_10', 3
 	sprite: s32'xxx034_11', 3
 	demoEnd: 
 	sprite: s32'xxx034_09', 3
 	sprite: s32'xxx034_10', 3
 	sprite: s32'xxx034_11', 3
 	sprite: s32'xxx101_00', 1
 	createObject: s32'cmn_HomingDash_End', (CENTER)
 	jumpHomingForRestart: -120000, 25000, 3200
 	deactivateObject: (STACK0)
 	deactivateObject: (STACK1)
 	label: s32'loop'
 	sprite: s32'xxx101_01', 1
 	sprite: s32'xxx101_02', 1
 	sprite: s32'xxx101_03', 1
 	sprite: s32'xxx101_04', 1
 	sprite: s32'xxx101_05', 1
 	sprite: s32'xxx101_06', 1
 	sprite: s32'xxx101_07', 1
 	sprite: s32'xxx101_00', 1
 	spriteEnd: 
 	gotoLabel: s32'loop'
 	label: s32'landing'
 	sprite: s32'xxx036_04', 10
 	clearRegisteredUponCode: (TOUCH_GROUND)
 	setXSpeed: 27105
 	xSpeedPerFrame: 90
 	addXPosition: 13
 	sprite: s32'xxx036_03', 4
 	sprite: s32'xxx036_02', 4
 	sprite: s32'xxx036_01', 4
 	sprite: s32'xxx036_00', 4
 } endState: 
 
 beginState: s32'CmnActEnterAfterBGTransRightIn' {
 	upon: (IMMEDIATE) {
 	} endUpon: 
 	sprite: s32'null', 170
 	flipDirection: 
 	setStartupPos: -4000000, 400000
 	displayModel: 0
 	label: s32'start'
 	sprite: s32'xxx034_09', 3
 	displayModel: 1
 	setXSpeed: 75000
 	setYSpeed: 1600
 	createObject: s32'cmn_HomingDash_Jizoku', (EX_POINT_0)
 	putObjectIntoStack: (STACK0), (PREVIOUS)
 	createObject: s32'cmn_HomingDash_JizokuTrail', (CENTER)
 	putObjectIntoStack: (STACK1), (PREVIOUS)
 	jumpToStateInObject: (PARENT), s32'landing'
 	sprite: s32'xxx034_10', 3
 	sprite: s32'xxx034_11', 3
 	sprite: s32'xxx034_09', 3
 	sprite: s32'xxx034_10', 3
 	sprite: s32'xxx034_11', 3
 	demoEnd: 
 	sprite: s32'xxx034_09', 3
 	sprite: s32'xxx034_10', 3
 	sprite: s32'xxx034_11', 3
 	sprite: s32'xxx101_07', 3
 	createObject: s32'cmn_HomingDash_End', (CENTER)
 	flipDirection: 
 	jumpHomingForRestart: 0, 25000, 3200
 	deactivateObject: (STACK0)
 	deactivateObject: (STACK1)
 	label: s32'loop'
 	sprite: s32'xxx101_06', 1
 	sprite: s32'xxx101_05', 1
 	sprite: s32'xxx101_04', 1
 	sprite: s32'xxx101_03', 1
 	sprite: s32'xxx101_02', 1
 	sprite: s32'xxx101_01', 1
 	sprite: s32'xxx101_00', 1
 	sprite: s32'xxx101_07', 1
 	spriteEnd: 
 	gotoLabel: s32'loop'
 	label: s32'landing'
 	sprite: s32'xxx035_04', 10
 	clearRegisteredUponCode: (TOUCH_GROUND)
 	setXSpeed: -40000
 	xSpeedPerFrame: 90
 	sprite: s32'xxx035_03', 4
 	sprite: s32'xxx035_02', 4
 	sprite: s32'xxx035_01', 4
 	sprite: s32'xxx035_00', 4
 } endState: 
 
 beginState: s32'CmnActRushFinishDown' {
 	sprite: s32'xxx060_00', 1
 	upon: (IDLING) {
 		ifOperation: (IS_EQUAL), var(FrameCount), int(34) {
 			displayModel: 0
 		} endIf: 
 	} endUpon: 
 	label: s32'loop'
 	sprite: s32'xxx073_01', 3
 	sprite: s32'xxx073_02', 3
 	sprite: s32'xxx073_03', 3
 	sprite: s32'xxx073_04', 3
 	sprite: s32'xxx073_05', 3
 	sprite: s32'xxx073_06', 3
 	sprite: s32'xxx073_07', 3
 	sprite: s32'xxx073_08', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActUkemi' {
 	label: s32'Loop'
 	sprite: s32'xxx101_00', 2
 	sprite: s32'xxx101_01', 2
 	sprite: s32'xxx101_02', 2
 	sprite: s32'xxx101_03', 2
 	sprite: s32'xxx101_04', 2
 	sprite: s32'xxx101_05', 2
 	sprite: s32'xxx101_06', 2
 	sprite: s32'xxx101_07', 2
 	spriteEnd: 
 	gotoLabel: s32'Loop'
 } endState: 
 
 beginState: s32'CmnActVUkemi' {
 	label: s32'Loop'
 	sprite: s32'xxx101_00', 2
 	sprite: s32'xxx101_01', 2
 	sprite: s32'xxx101_02', 2
 	sprite: s32'xxx101_03', 2
 	sprite: s32'xxx101_04', 2
 	sprite: s32'xxx101_05', 2
 	sprite: s32'xxx101_06', 2
 	sprite: s32'xxx101_07', 2
 	spriteEnd: 
 	gotoLabel: s32'Loop'
 } endState: 
 
 beginState: s32'CmnActFUkemi' {
 	label: s32'Loop'
 	sprite: s32'xxx101_00', 2
 	sprite: s32'xxx101_01', 2
 	sprite: s32'xxx101_02', 2
 	sprite: s32'xxx101_03', 2
 	sprite: s32'xxx101_04', 2
 	sprite: s32'xxx101_05', 2
 	sprite: s32'xxx101_06', 2
 	sprite: s32'xxx101_07', 2
 	spriteEnd: 
 	gotoLabel: s32'Loop'
 } endState: 
 
 beginState: s32'CmnActBUkemi' {
 	label: s32'Loop'
 	sprite: s32'xxx101_00', 2
 	sprite: s32'xxx101_07', 2
 	sprite: s32'xxx101_06', 2
 	sprite: s32'xxx101_05', 2
 	sprite: s32'xxx101_04', 2
 	sprite: s32'xxx101_03', 2
 	sprite: s32'xxx101_02', 2
 	sprite: s32'xxx101_01', 2
 	spriteEnd: 
 	gotoLabel: s32'Loop'
 } endState: 
 
 beginState: s32'CmnActLandUkemi' {
 	sprite: s32'xxx100_00', 3
 	sprite: s32'xxx100_01', 3
 	sprite: s32'xxx100_02', 3
 	sprite: s32'xxx100_03', 3
 	sprite: s32'xxx100_04', 3
 	sprite: s32'xxx100_05', 3
 } endState: 
 
 beginState: s32'CmnActMidGuardLoop' {
 	label: s32'_Pre'
 	sprite: s32'xxx040_00', 3
 	label: s32'_Top'
 	label: s32'loop'
 	sprite: s32'xxx040_01', 3
 	sprite: s32'xxx040_02', 3
 	sprite: s32'xxx040_03', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 	label: s32'_Lv1'
 	sprite: s32'xxx040_04', 2
 	spriteEnd: 
 	gotoLabel: s32'_Top'
 	label: s32'_Lv2'
 	sprite: s32'xxx040_04', 5
 	spriteEnd: 
 	gotoLabel: s32'_Top'
 	label: s32'_Lv3'
 	sprite: s32'xxx040_04', 13
 	spriteEnd: 
 	gotoLabel: s32'_Top'
 } endState: 
 
 beginState: s32'CmnActMidGuardEnd' {
 	sprite: s32'xxx040_02', 2
 	sprite: s32'xxx040_01', 2
 	sprite: s32'xxx040_00', 2
 } endState: 
 
 beginState: s32'CmnActHighGuardLoop' {
 	label: s32'_Pre'
 	sprite: s32'xxx040_00', 3
 	label: s32'_Top'
 	label: s32'loop'
 	sprite: s32'xxx040_01', 3
 	sprite: s32'xxx040_02', 3
 	sprite: s32'xxx040_03', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 	label: s32'_Lv1'
 	sprite: s32'xxx040_04', 2
 	spriteEnd: 
 	gotoLabel: s32'_Top'
 	label: s32'_Lv2'
 	sprite: s32'xxx040_04', 5
 	spriteEnd: 
 	gotoLabel: s32'_Top'
 	label: s32'_Lv3'
 	sprite: s32'xxx040_04', 13
 	spriteEnd: 
 	gotoLabel: s32'_Top'
 } endState: 
 
 beginState: s32'CmnActHighGuardEnd' {
 	sprite: s32'xxx040_02', 2
 	sprite: s32'xxx040_01', 2
 	sprite: s32'xxx040_00', 2
 } endState: 
 
 beginState: s32'CmnActCrouchGuardLoop' {
 	label: s32'_Pre'
 	sprite: s32'xxx041_00', 3
 	label: s32'_Top'
 	label: s32'loop'
 	sprite: s32'xxx041_01', 3
 	sprite: s32'xxx041_02', 3
 	sprite: s32'xxx041_03', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 	label: s32'_Lv1'
 	sprite: s32'xxx041_04', 2
 	spriteEnd: 
 	gotoLabel: s32'_Top'
 	label: s32'_Lv2'
 	sprite: s32'xxx041_04', 5
 	spriteEnd: 
 	gotoLabel: s32'_Top'
 	label: s32'_Lv3'
 	sprite: s32'xxx041_04', 13
 	spriteEnd: 
 	gotoLabel: s32'_Top'
 } endState: 
 
 beginState: s32'CmnActCrouchGuardEnd' {
 	sprite: s32'xxx041_02', 2
 	sprite: s32'xxx041_01', 2
 	sprite: s32'xxx041_00', 2
 } endState: 
 
 beginState: s32'CmnActAirGuardLoop' {
 	label: s32'_Pre'
 	sprite: s32'xxx042_00', 3
 	label: s32'_Top'
 	label: s32'loop'
 	sprite: s32'xxx042_01', 3
 	sprite: s32'xxx042_02', 3
 	sprite: s32'xxx042_03', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 	label: s32'_Lv1'
 	sprite: s32'xxx042_04', 2
 	spriteEnd: 
 	gotoLabel: s32'_Top'
 	label: s32'_Lv2'
 	sprite: s32'xxx042_04', 5
 	spriteEnd: 
 	gotoLabel: s32'_Top'
 	label: s32'_Lv3'
 	sprite: s32'xxx042_04', 13
 	spriteEnd: 
 	gotoLabel: s32'_Top'
 } endState: 
 
 beginState: s32'CmnActAirGuardEnd' {
 	sprite: s32'xxx042_02', 2
 	sprite: s32'xxx042_01', 2
 	sprite: s32'xxx042_00', 2
 } endState: 
 
 beginState: s32'CmnActAirTurn' {
 	sprite: s32'xxx026_01', 3
 	sprite: s32'xxx026_00', 3
 } endState: 
 
 beginState: s32'CmnActLockWait' {
 	sprite: s32'keep', 2147483647
 } endState: 
 
 beginState: s32'CmnActLockReject' {
 	sprite: s32'keep', 2147483647
 } endState: 
 
 beginState: s32'CmnActAirLockWait' {
 	sprite: s32'keep', 2147483647
 } endState: 
 
 beginState: s32'CmnActAirLockReject' {
 	sprite: s32'keep', 2147483647
 } endState: 
 
 beginState: s32'CmnActEntryWait' {
 	upon: (IMMEDIATE) {
 	} endUpon: 
 	sprite: s32'null', 2147483647
 	displayModel: 0
 } endState: 
 
 beginState: s32'CmnActSpecialFinishWait' {
 	sprite: s32'null', 2147483647
 } endState: 
 
 beginState: s32'CmnActSubEntry' {
 	upon: (IMMEDIATE) {
 		initializeForEntryAction: 
 		changeDefaultMeshSet: 
 		setAngleY: -90000
 	} endUpon: 
 	sprite: s32'null', 2147483647
 	if: var(IsSubMember1Self) {
 		playAnimation: s32'xxx601cs', 0
 	} endIf: 
 	if: var(IsSubMember2Self) {
 		playAnimation: s32'xxx602cs', 0
 	} endIf: 
 } endState: 
 
 beginState: s32'CmnActExDamage' {
 	sprite: s32'keep', 2147483647
 } endState: 
 
 beginState: s32'CmnActExDamageLand' {
 	sprite: s32'keep', 2147483647
 } endState: 
 
 beginState: s32'CmnActRoundWin' {
 	sprite: s32'keep', 1
 } endState: 
 
 beginState: s32'CmnActLose' {
 	sprite: s32'xxx000_00', 6
 } endState: 
 
 beginState: s32'CmnActResultLose' {
 	sprite: s32'keep', 2147483647
 } endState: 
 
 beginState: s32'CmnActChangeEnter' {
 	upon: (IMMEDIATE) {
 		setYSpeed: 45000
 		setXSpeed: 12000
 	} endUpon: 
 	sprite: s32'xxx022_01', 100
 } endState: 
 
 beginState: s32'CmnActChangeEnterCutscene' {
 	upon: (IMMEDIATE) {
 		initializeForEntryAction: 
 		zLine: var(plr2)
 		setXPosition: 0
 		upon: (IDLING) {
 			ifOnFrame: int(0) {
 				createObject: s32'cmn_ChangeEnterCutsceneCamera', (ZERO)
 				createObject: s32'cmn_RestartEff_Ryuhai', (ZERO)
 			} endIf: 
 			ifOnFrame: int(120) {
 				setStartupPos: 131500, 360000
 				cameraMotion: 0, 462163, 311023, 426, -16384, 0, 15, 0, 120, 0, 0
 				cameraShake: s32'RoundRestart', 500, 0, 30, 10
 			} endIf: 
 			ifOnFrame: int(156) {
 				demoEnd: 
 			} endIf: 
 			ifOnFrame: int(160) {
 				demoEnd: 
 				cameraMotion: 0, 442163, 311023, 426, -16384, 0, 15, 1, 0, 5, 0
 			} endIf: 
 			ifOnFrame: int(162) {
 				addXPosition: 30000
 				jumpHomingForRestart: -40000, 50000, 3200
 			} endIf: 
 		} endUpon: 
 		upon: (TOUCH_GROUND) {
 			jumpToLabel: s32'landing'
 			addXPosition: -30000
 			setXSpeed: -4000
 			xSpeedPerFrame: 80
 		} endUpon: 
 	} endUpon: 
 	sprite: s32'null', 60
 	playAnimation: s32'xxx620cs', 0
 	sprite: s32'null', 60
 	forceRandomVoice: s16'vxxx402', 100, s16'vxxx403', 100, s16'', 0, s16'', 0
 	sprite: s32'xxx630_00', 4
 	unknown1696: 0
 	sprite: s32'xxx630_01', 4
 	sprite: s32'xxx630_02', 4
 	sprite: s32'xxx630_03', 4
 	sprite: s32'xxx630_04', 4
 	sprite: s32'xxx630_00', 4
 	sprite: s32'xxx630_01', 4
 	sprite: s32'xxx630_02', 4
 	sprite: s32'xxx630_03', 4
 	sprite: s32'xxx630_04', 4
 	sprite: s32'xxx101_07', 2
 	facePose: (NORMAL)
 	label: s32'loop'
 	sprite: s32'xxx101_06', 1
 	sprite: s32'xxx101_05', 1
 	sprite: s32'xxx101_04', 1
 	sprite: s32'xxx101_03', 1
 	sprite: s32'xxx101_02', 1
 	sprite: s32'xxx101_01', 1
 	sprite: s32'xxx101_00', 1
 	sprite: s32'xxx101_07', 1
 	spriteEnd: 
 	gotoLabel: s32'loop'
 	label: s32'landing'
 	sprite: s32'xxx035_04', 8
 	sprite: s32'xxx035_03', 3
 	sprite: s32'xxx035_02', 3
 	sprite: s32'xxx035_01', 3
 	sprite: s32'xxx035_00', 3
 } endState: 
 
 beginState: s32'CmnActChangeEnterCutsceneRecv' {
 	upon: (IMMEDIATE) {
 		initializeForEntryAction: 
 		zLine: var(plr2)
 		setXPosition: 0
 		upon: (IDLING) {
 			callSubroutine: s32'AN_CmnActChangeEnterCutsceneRec'
 			ifOnFrame: int(120) {
 				setStartupPos: 131500, 360000
 			} endIf: 
 			ifOnFrame: int(156) {
 				demoEnd: 
 			} endIf: 
 			ifOnFrame: int(160) {
 				demoEnd: 
 			} endIf: 
 			ifOnFrame: int(162) {
 				addXPosition: 30000
 				jumpHomingForRestart: -40000, 50000, 3200
 			} endIf: 
 		} endUpon: 
 		upon: (TOUCH_GROUND) {
 			jumpToLabel: s32'landing'
 			addXPosition: -30000
 			setXSpeed: -4000
 			xSpeedPerFrame: 80
 		} endUpon: 
 	} endUpon: 
 	sprite: s32'null', 120
 	playAnimation: s32'xxx621cs', 0
 	sprite: s32'xxx631_00', 4
 	unknown1696: 0
 	sprite: s32'xxx631_01', 4
 	sprite: s32'xxx631_02', 4
 	sprite: s32'xxx631_03', 4
 	sprite: s32'xxx631_04', 4
 	sprite: s32'xxx631_00', 4
 	sprite: s32'xxx631_01', 4
 	sprite: s32'xxx631_02', 4
 	sprite: s32'xxx631_03', 4
 	sprite: s32'xxx631_04', 4
 	sprite: s32'xxx101_07', 2
 	facePose: (NORMAL)
 	label: s32'loop'
 	sprite: s32'xxx101_06', 1
 	sprite: s32'xxx101_05', 1
 	sprite: s32'xxx101_04', 1
 	sprite: s32'xxx101_03', 1
 	sprite: s32'xxx101_02', 1
 	sprite: s32'xxx101_01', 1
 	sprite: s32'xxx101_00', 1
 	sprite: s32'xxx101_07', 1
 	spriteEnd: 
 	gotoLabel: s32'loop'
 	label: s32'landing'
 	sprite: s32'xxx035_04', 8
 	sprite: s32'xxx035_03', 3
 	sprite: s32'xxx035_02', 3
 	sprite: s32'xxx035_01', 3
 	sprite: s32'xxx035_00', 3
 } endState: 
 
 beginState: s32'CmnActChangeLeave' {
 	upon: (IMMEDIATE) {
 		setYSpeed: 45000
 		setGravity: 3800
 		callSubroutine: s32'AN_CmnActChangeLeave_Init'
 	} endUpon: 
 	sprite: s32'xxx021_00', 12
 	cmnSfx: s32'ARC_BTL_CMN_GK_Jump'
 	setNoCollision: 0
 	sprite: s32'xxx021_00', 1
 	cmnSfx: s32'ARC_BTL_CMN_TLP_Short_Assist'
 	displayModel: 0
 	createParticle: s32'cmn_Warp', (CENTER)
 	resetSpeed: 1
 } endState: 
 
 beginState: s32'CmnActHide' {
 	sprite: s32'null', 2147483647
 } endState: 
 
 beginState: s32'CmnActHomingDash' {
 	callSubroutine: s32'cmnHomingDash_StartInit'
 	gotoLabelIfTrue: s32'start', var(IsAir)
 	sprite: s32'xxx010_00', 2
 	sprite: s32'xxx010_01', 2
 	label: s32'start'
 	sprite: s32'xxx038_00', 2
 	callSubroutine: s32'AN_CmnActHomingDash_Face'
 	if: var(LightAutocombo) {
 		enableGatlings: 1
 		AddARendaChainPD: s32'NmlAtkAir5A'
 		whiffCancelOptionBufferTime: s32'NmlAtkAir5A', 8
 	} endIf: 
 	sprite: s32'xxx038_01', 2
 	sprite: s32'xxx038_02', 2
 	sprite: s32'xxx038_03', 2
 	sprite: s32'xxx038_04', 2147483647
 	label: s32'-90start'
 	sprite: s32'xxx034_00', 3
 	mouthPose: (OPEN)
 	label: s32'-90'
 	sprite: s32'xxx034_01', 3
 	sprite: s32'xxx034_02', 3
 	sprite: s32'xxx034_00', 3
 	spriteEnd: 
 	gotoLabel: s32'-90'
 	label: s32'-60start'
 	sprite: s32'xxx034_03', 3
 	mouthPose: (OPEN)
 	label: s32'-60'
 	sprite: s32'xxx034_04', 3
 	sprite: s32'xxx034_05', 3
 	sprite: s32'xxx034_03', 3
 	spriteEnd: 
 	gotoLabel: s32'-60'
 	label: s32'-30start'
 	sprite: s32'xxx034_06', 3
 	mouthPose: (OPEN)
 	label: s32'-30'
 	sprite: s32'xxx034_07', 3
 	sprite: s32'xxx034_08', 3
 	sprite: s32'xxx034_06', 3
 	spriteEnd: 
 	gotoLabel: s32'-30'
 	label: s32'0start'
 	sprite: s32'xxx034_09', 3
 	mouthPose: (OPEN)
 	label: s32'0'
 	sprite: s32'xxx034_10', 3
 	sprite: s32'xxx034_11', 3
 	sprite: s32'xxx034_09', 3
 	spriteEnd: 
 	gotoLabel: s32'0'
 	label: s32'30start'
 	sprite: s32'xxx034_12', 3
 	mouthPose: (OPEN)
 	label: s32'30'
 	sprite: s32'xxx034_13', 3
 	sprite: s32'xxx034_14', 3
 	sprite: s32'xxx034_12', 3
 	spriteEnd: 
 	gotoLabel: s32'30'
 	label: s32'60start'
 	sprite: s32'xxx034_15', 3
 	mouthPose: (OPEN)
 	label: s32'60'
 	sprite: s32'xxx034_16', 3
 	sprite: s32'xxx034_17', 3
 	sprite: s32'xxx034_15', 3
 	spriteEnd: 
 	gotoLabel: s32'60'
 	label: s32'90start'
 	sprite: s32'xxx034_18', 3
 	mouthPose: (OPEN)
 	label: s32'90'
 	sprite: s32'xxx034_19', 3
 	sprite: s32'xxx034_20', 3
 	sprite: s32'xxx034_18', 3
 	spriteEnd: 
 	gotoLabel: s32'90'
 	label: s32'end'
 } endState: 
 
 beginState: s32'CmnActHomingDashBrake' {
 	gotoLabelIfTrue: s32'HomingSousai', var(act6)
 	sprite: s32'xxx038_04', 5
 	callSubroutine: s32'AN_CmnActHomingDashBrake_Face'
 	sprite: s32'xxx038_03', 4
 	ifNot: var(act7) {
 		callSubroutine: s32'cmn_NandemoEnableAir'
 	} endIf: 
 	sprite: s32'xxx038_02', 4
 	sprite: s32'xxx038_01', 4
 	sprite: s32'xxx038_00', 3
 	gotoLabelIfTrue: s32'Guard', var(act7)
 	spriteEnd: 
 	exitState: 
 	label: s32'HomingSousai'
 	sprite: s32'xxx101_07', 2
 	sprite: s32'xxx101_06', 2
 	sprite: s32'xxx101_05', 2
 	sprite: s32'xxx101_04', 2
 	sprite: s32'xxx101_03', 2
 	sprite: s32'xxx101_02', 2
 	callSubroutine: s32'cmn_NandemoEnableAir'
 	sprite: s32'xxx101_01', 2
 	sprite: s32'xxx101_00', 1
 	exitState: 
 	label: s32'Guard'
 	sprite: s32'xxx022_02', 2
 	objectGravity: 
 	spriteEnd: 
 	callSubroutine: s32'JumpDown_Type'
 	gotoLabelIfTrue: s32'JumpDown_B', var(act7)
 	label: s32'JumpDown_A'
 	sprite: s32'xxx022_03', 2
 	sprite: s32'xxx022_04', 2
 	sprite: s32'xxx022_05', 3
 	label: s32'loop_A'
 	sprite: s32'xxx022_06', 3
 	sprite: s32'xxx022_07', 3
 	sprite: s32'xxx022_08', 3
 	spriteEnd: 
 	gotoLabel: s32'loop_A'
 	exitState: 
 	label: s32'JumpDown_B'
 	sprite: s32'xxx022_02', 1
 	sprite: s32'xxx022_03', 3
 	sprite: s32'xxx022_04', 3
 	label: s32'loop_B'
 	sprite: s32'xxx022_05', 3
 	sprite: s32'xxx022_06', 3
 	sprite: s32'xxx022_07', 3
 	spriteEnd: 
 	gotoLabel: s32'loop_B'
 } endState: 
 
 beginState: s32'CmnActRushStart' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnAtkRushStartInit'
 	} endUpon: 
 	gotoLabelIfTrue: s32'air', var(IsAir)
 	sprite: s32'xxx036_00', 3
 	callSubroutine: s32'AN_CmnActRushStart_Face'
 	sprite: s32'xxx036_01', 1
 	sprite: s32'xxx036_01', 3
 	callSubroutine: s32'AN_CmnActRushStart_Voice'
 	sprite: s32'xxx036_02', 4
 	sprite: s32'xxx036_03', 5
 	sprite: s32'xxx304_01', 2
 	sprite: s32'xxx304_02', 3
 	sprite: s32'xxx304_03', 3
 	sprite: s32'xxx304_04', 3
 	sprite: s32'xxx304_03', 3
 	sprite: s32'xxx304_04', 3
 	sprite: s32'xxx304_03', 3
 	sprite: s32'xxx304_02', 5
 	sprite: s32'xxx304_01', 5
 	sprite: s32'xxx304_00', 5
 	spriteEnd: 
 	exitState: 
 	label: s32'air'
 	sprite: s32'xxx038_00', 3
 	callSubroutine: s32'AN_CmnActRushStart_Face'
 	sprite: s32'xxx038_01', 1
 	sprite: s32'xxx038_01', 3
 	callSubroutine: s32'AN_CmnActRushStart_Voice'
 	sprite: s32'xxx038_02', 4
 	sprite: s32'xxx038_03', 5
 	sprite: s32'xxx304_01ex01', 2
 	sprite: s32'xxx304_02ex01', 3
 	sprite: s32'xxx304_03ex01', 3
 	sprite: s32'xxx304_04ex01', 3
 	sprite: s32'xxx304_03ex01', 3
 	sprite: s32'xxx304_04ex01', 3
 	sprite: s32'xxx304_03ex01', 3
 	sprite: s32'xxx304_02ex01', 5
 	sprite: s32'xxx304_01ex01', 5
 	spriteEnd: 
 	sprite: s32'xxx022_02', 2
 	objectGravity: 
 	spriteEnd: 
 	callSubroutine: s32'JumpDown_Type'
 	gotoLabelIfTrue: s32'JumpDown_B', var(act7)
 	label: s32'JumpDown_A'
 	sprite: s32'xxx022_03', 2
 	sprite: s32'xxx022_04', 2
 	sprite: s32'xxx022_05', 3
 	spriteEnd: 
 	exitState: 
 	label: s32'JumpDown_B'
 	sprite: s32'xxx022_02', 1
 	sprite: s32'xxx022_03', 3
 	sprite: s32'xxx022_04', 3
 } endState: 
 
 beginState: s32'CmnActRushRejectWait' {
 	sprite: s32'keep', 2147483647
 } endState: 
 
 beginState: s32'CmnActRushRush' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnAtkRushRushInit'
 	} endUpon: 
 	sprite: s32'xxx304_05', 2
 	callSubroutine: s32'AN_CmnActRushRush_Face'
 	enemyGrabbedFrame: 5
 	setGripPosition: (FRONT_1_BODY), (FRONT_1_BODY), 0
 	if: var(IsLand) {
 		setXSpeed: 5000
 		cameraMotion: -228400, 299374, 105630, -263, 8057, 0, 54, 120, 9999, 15, 1
 	} endIf: 
 	else:  {
 		setXSpeed: 4000
 		setYSpeed: 2000
 		setGravity: 0
 		cameraMotion: -223000, 330000, 169500, -1818, 7110, 0, 54, 120, 9999, 15, 1
 	} endElse: 
 	sprite: s32'xxx304_06', 2
 	setGripPosition: (FRONT_1_BODY), (FRONT_1_BODY), 0
 	sprite: s32'xxx304_07', 2
 	sprite: s32'xxx304_08', 2
 	callSubroutine: s32'AN_CmnActRushRush_Voice'
 	createObject: s32'cmn_LastRushHits', (ZERO)
 	commonBankSE: 0, s32'ARC_BTL_CMN_DrgnRush_Rush', 100
 	label: s32'loop'
 	sprite: s32'xxx304_09', 2
 	enemyGrabbedFrame: 5
 	grabOrRelease: 
 	cameraShake: s32'ShakeTateYoko', 400, 0, 5, 1
 	atkHitCountDouble: 0
 	atkAdditionalHitCount: 1
 	sprite: s32'xxx304_10', 2
 	enemyGrabbedFrame: 4
 	sprite: s32'xxx304_11', 1
 	enemyGrabbedFrame: 3
 	sprite: s32'xxx304_12', 1
 	enemyGrabbedFrame: 2
 	sprite: s32'xxx304_13', 1
 	enemyGrabbedFrame: 1
 	sprite: s32'xxx304_14', 2
 	enemyGrabbedFrame: 5
 	grabOrRelease: 
 	cameraShake: s32'ShakeTateYoko', 400, 0, 5, 1
 	atkAdditionalHitCount: 3
 	sprite: s32'xxx304_15', 2
 	enemyGrabbedFrame: 4
 	sprite: s32'xxx304_16', 1
 	enemyGrabbedFrame: 3
 	sprite: s32'xxx304_17', 1
 	enemyGrabbedFrame: 2
 	sprite: s32'xxx304_18', 1
 	enemyGrabbedFrame: 1
 	sprite: s32'xxx304_19', 2
 	enemyGrabbedFrame: 12
 	grabOrRelease: 
 	cameraShake: s32'ShakeTateYoko', 400, 0, 5, 1
 	atkAdditionalHitCount: 3
 	sprite: s32'xxx304_20', 2
 	enemyGrabbedFrame: 11
 	sprite: s32'xxx304_21', 1
 	enemyGrabbedFrame: 10
 	sprite: s32'xxx304_22', 1
 	enemyGrabbedFrame: 9
 	sprite: s32'xxx304_23', 1
 	enemyGrabbedFrame: 8
 	spriteEnd: 
 	gotoLabelIfOperation: s32'GoFinish', (IS_GREATER_OR_EQUAL), var(act0), int(1)
 	sprite: s32'xxx304_24', 2
 	enemyGrabbedFrame: 26
 	grabOrRelease: 
 	cameraShake: s32'ShakeTateYoko', 400, 0, 5, 1
 	atkAdditionalHitCount: 4
 	sprite: s32'xxx304_25', 2
 	enemyGrabbedFrame: 11
 	sprite: s32'xxx304_26', 2
 	enemyGrabbedFrame: 10
 	sprite: s32'xxx304_27', 1
 	enemyGrabbedFrame: 9
 	sprite: s32'xxx304_14', 2
 	enemyGrabbedFrame: 5
 	grabOrRelease: 
 	cameraShake: s32'ShakeTateYoko', 400, 0, 5, 1
 	atkAdditionalHitCount: 3
 	sprite: s32'xxx304_15', 2
 	enemyGrabbedFrame: 4
 	sprite: s32'xxx304_16', 1
 	enemyGrabbedFrame: 3
 	sprite: s32'xxx304_17', 1
 	enemyGrabbedFrame: 2
 	sprite: s32'xxx304_18', 1
 	enemyGrabbedFrame: 1
 	modifyVar: (ADD), var(act0), int(1)
 	ifOperation: (IS_LESS), var(act0), var(act3) {
 		jumpToLabel: s32'loop'
 	} endIf: 
 	spriteEnd: 
 	label: s32'GoFinish'
 	sprite: s32'keep', 2147483647
 	stopBankSE: 0, 15
 	stopMoveCamera: 10
 	sendSignal: (SELF), (SIGNAL0)
 	spriteEnd: 
 } endState: 
 
 beginState: s32'CmnActFinishChaseEnd' {
 	upon: (IMMEDIATE) {
 		playerActionInitializeByCategory: 17, 0
 		callSubroutine: s32'cmnActRushFinishChaseEndInit'
 	} endUpon: 
 	sprite: s32'xxx034_12', 3
 	enableHitbox: 
 	cameraMotion: -266753, 95246, 43986, 3100, 14000, -5643, 54, 0, 10, 20, 1
 	label: s32'loop'
 	sprite: s32'xxx034_13', 3
 	sprite: s32'xxx034_14', 3
 	sprite: s32'xxx034_12', 3
 	spriteEnd: 
 	gotoLabel: s32'loop'
 } endState: 
 
 beginState: s32'CmnActRushSousai' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnAtkRushSousaiInit'
 	} endUpon: 
 	sprite: s32'xxx304_05', 2
 	callSubroutine: s32'AN_CmnActRushSousai_Face'
 	sprite: s32'xxx304_06', 2
 	sprite: s32'xxx304_07', 2
 	sprite: s32'xxx304_08', 2
 	callSubroutine: s32'AN_CmnActRushSousai_Voice'
 	commonBankSE: 0, s32'ARC_BTL_CMN_Sousai_DrgnRsh', 100
 	label: s32'loop'
 	sprite: s32'xxx304_14', 2
 	sprite: s32'xxx304_15', 1
 	sprite: s32'xxx304_16', 1
 	sprite: s32'xxx304_18', 1
 	sprite: s32'xxx304_19', 2
 	sprite: s32'xxx304_20', 1
 	sprite: s32'xxx304_21', 1
 	sprite: s32'xxx304_23', 1
 	sprite: s32'xxx304_24', 2
 	sprite: s32'xxx304_25', 1
 	sprite: s32'xxx304_26', 1
 	sprite: s32'xxx304_27', 1
 	sprite: s32'xxx304_09', 2
 	sprite: s32'xxx304_10', 1
 	sprite: s32'xxx304_11', 1
 	sprite: s32'xxx304_13', 1
 	sprite: s32'xxx304_19', 2
 	sprite: s32'xxx304_20', 1
 	modifyVar: (ADD), var(act0), int(1)
 	ifOperation: (IS_LESS), var(act0), var(act3) {
 		jumpToLabel: s32'loop'
 	} endIf: 
 	spriteEnd: 
 	label: s32'GoFinish'
 	sprite: s32'keep', 1
 	stopBankSE: 0, 20
 	sendSignal: (SELF), (SIGNAL0)
 	spriteEnd: 
 } endState: 
 
 beginState: s32'CmnActRushSousaiPrimary' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmnAtkRushSousaiInit'
 	} endUpon: 
 	sprite: s32'xxx304_05', 2
 	callSubroutine: s32'AN_CmnActRushSousai_Face'
 	callSubroutine: s32'AN_CmnActRushSousai_Voice'
 	cameraMotion: 87910, 312222, 90185, 0, 0, 0, 54, 80, 9999, 10, 1
 	sprite: s32'xxx304_06', 2
 	sprite: s32'xxx304_07', 2
 	sprite: s32'xxx304_08', 2
 	label: s32'loop'
 	sprite: s32'xxx304_09', 2
 	cameraShake: s32'ShakeTateYoko', 400, 0, 5, 1
 	zLine: var(plr2)
 	if: var(act4) {
 		createObject: s32'cmn_LastRushSousaiHits', (ZERO)
 		copyVar: var(act4), int(0)
 	} endIf: 
 	sprite: s32'xxx304_10', 1
 	sprite: s32'xxx304_11', 1
 	sprite: s32'xxx304_13', 1
 	sprite: s32'xxx304_14', 2
 	cameraShake: s32'ShakeTateYoko', 400, 0, 5, 1
 	zLine: int(5)
 	sprite: s32'xxx304_15', 1
 	sprite: s32'xxx304_16', 1
 	sprite: s32'xxx304_18', 1
 	sprite: s32'xxx304_19', 2
 	cameraShake: s32'ShakeTateYoko', 400, 0, 5, 1
 	zLine: var(plr2)
 	sprite: s32'xxx304_20', 1
 	sprite: s32'xxx304_21', 1
 	sprite: s32'xxx304_23', 1
 	sprite: s32'xxx304_24', 2
 	cameraShake: s32'ShakeTateYoko', 400, 0, 5, 1
 	zLine: int(5)
 	sprite: s32'xxx304_25', 1
 	sprite: s32'xxx304_26', 1
 	sprite: s32'xxx304_27', 1
 	sprite: s32'xxx304_14', 2
 	cameraShake: s32'ShakeTateYoko', 400, 0, 5, 1
 	zLine: int(5)
 	sprite: s32'xxx304_15', 1
 	modifyVar: (ADD), var(act0), int(1)
 	ifOperation: (IS_LESS), var(act0), var(act3) {
 		jumpToLabel: s32'loop'
 	} endIf: 
 	spriteEnd: 
 	label: s32'GoFinish'
 	sprite: s32'keep', 1
 	stopMoveCamera: 10
 	sendSignal: (SELF), (SIGNAL0)
 	spriteEnd: 
 } endState: 
 
 beginState: s32'CmnActSparkingBurst' {
 	upon: (IMMEDIATE) {
 		callSubroutine: s32'cmn_InitSparkingBurst'
 	} endUpon: 
 	sprite: s32'xxx303_00', 3
 	callSubroutine: s32'AN_CmnActSparkingBurst_Face'
 	forceRandomVoice: s16'vxxx110', 100, s16'vxxx111', 100, s16'', 0, s16'', 0
 	if: var(IsAir) {
 		spriteOverrideFrame: s32'xxx303_08'
 	} endIf: 
 	sprite: s32'xxx303_01', 3
 	cmnSfx: s32'ARC_BTL_CMN_SprkngBrst_Syuba'
 	sprite: s32'xxx303_02', 3
 	sprite: s32'xxx303_03', 4
 	sprite: s32'xxx303_04', 3
 	sprite: s32'xxx303_05', 3
 	sprite: s32'xxx303_06', 3
 	sprite: s32'xxx303_05', 3
 	sprite: s32'xxx303_06', 3
 	sprite: s32'xxx303_05', 3
 	sprite: s32'xxx303_06', 3
 	sprite: s32'xxx303_07', 3
 	sprite: s32'xxx022_02', 2
 	objectGravity: 
 	spriteEnd: 
 	callSubroutine: s32'JumpDown_Type'
 	gotoLabelIfTrue: s32'JumpDown_B', var(act7)
 	label: s32'JumpDown_A'
 	sprite: s32'xxx022_03', 2
 	sprite: s32'xxx022_04', 2
 	sprite: s32'xxx022_05', 3
 	spriteEnd: 
 	exitState: 
 	label: s32'JumpDown_B'
 	sprite: s32'xxx022_02', 1
 	sprite: s32'xxx022_03', 3
 	sprite: s32'xxx022_04', 3
 } endState: 
 
